// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/bisection/proto/v1/nthsection.proto

package bisectionpb

import (
	proto "go.chromium.org/luci/buildbucket/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NthSectionAnalysisResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status of the nth-section analysis.
	Status AnalysisStatus `protobuf:"varint,1,opt,name=status,proto3,enum=luci.bisection.v1.AnalysisStatus" json:"status,omitempty"`
	// Timestamp for the start time of the nth-section analysis.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Timestamp for the last updated time of the nth-section analysis.
	LastUpdatedTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
	// Timestamp for the end time of the nth-section analysis.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Optional, when status = FOUND. Whether the culprit has been verified.
	Verified bool `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	// Optional, when status = RUNNING. This is the possible commit range of the
	// culprit. This will be updated as the nth-section progress.
	RemainingNthSectionRange *RegressionRange `protobuf:"bytes,6,opt,name=remaining_nth_section_range,json=remainingNthSectionRange,proto3" json:"remaining_nth_section_range,omitempty"`
	// Optional, when status = ERROR. The error message.
	ErrorMessage string `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// List of the reruns that have been run so far for the nth-section analysis.
	// This is useful to analyse the nth-section progress.
	// The runs are sorted by the start timestamp.
	Reruns []*SingleRerun `protobuf:"bytes,8,rep,name=reruns,proto3" json:"reruns,omitempty"`
	// The blame list of commits to run the nth-section analysis on.
	// The commits are sorted by recency, with the most recent commit first.
	BlameList *BlameList `protobuf:"bytes,9,opt,name=blameList,proto3" json:"blameList,omitempty"`
	// Optional, when nth-section has found a suspect.
	Suspect       *NthSectionSuspect `protobuf:"bytes,10,opt,name=suspect,proto3" json:"suspect,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NthSectionAnalysisResult) Reset() {
	*x = NthSectionAnalysisResult{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NthSectionAnalysisResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NthSectionAnalysisResult) ProtoMessage() {}

func (x *NthSectionAnalysisResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NthSectionAnalysisResult.ProtoReflect.Descriptor instead.
func (*NthSectionAnalysisResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescGZIP(), []int{0}
}

func (x *NthSectionAnalysisResult) GetStatus() AnalysisStatus {
	if x != nil {
		return x.Status
	}
	return AnalysisStatus_ANALYSIS_STATUS_UNSPECIFIED
}

func (x *NthSectionAnalysisResult) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *NthSectionAnalysisResult) GetLastUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdatedTime
	}
	return nil
}

func (x *NthSectionAnalysisResult) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *NthSectionAnalysisResult) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *NthSectionAnalysisResult) GetRemainingNthSectionRange() *RegressionRange {
	if x != nil {
		return x.RemainingNthSectionRange
	}
	return nil
}

func (x *NthSectionAnalysisResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *NthSectionAnalysisResult) GetReruns() []*SingleRerun {
	if x != nil {
		return x.Reruns
	}
	return nil
}

func (x *NthSectionAnalysisResult) GetBlameList() *BlameList {
	if x != nil {
		return x.BlameList
	}
	return nil
}

func (x *NthSectionAnalysisResult) GetSuspect() *NthSectionSuspect {
	if x != nil {
		return x.Suspect
	}
	return nil
}

type BlameList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The commits in the blame list.
	Commits []*BlameListSingleCommit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	// The last pass commit.
	// It is the commit right before the least recent commit in the blamelist.
	LastPassCommit *BlameListSingleCommit `protobuf:"bytes,2,opt,name=last_pass_commit,json=lastPassCommit,proto3" json:"last_pass_commit,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BlameList) Reset() {
	*x = BlameList{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlameList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlameList) ProtoMessage() {}

func (x *BlameList) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlameList.ProtoReflect.Descriptor instead.
func (*BlameList) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescGZIP(), []int{1}
}

func (x *BlameList) GetCommits() []*BlameListSingleCommit {
	if x != nil {
		return x.Commits
	}
	return nil
}

func (x *BlameList) GetLastPassCommit() *BlameListSingleCommit {
	if x != nil {
		return x.LastPassCommit
	}
	return nil
}

type BlameListSingleCommit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The commit ID.
	Commit string `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	// Review URL for the commit.
	ReviewUrl string `protobuf:"bytes,2,opt,name=reviewUrl,proto3" json:"reviewUrl,omitempty"`
	// Title of the review for the commit.
	ReviewTitle string `protobuf:"bytes,3,opt,name=reviewTitle,proto3" json:"reviewTitle,omitempty"`
	// Commit position of this commit.
	// This field is currently only set for test failure analysis blamelist.
	Position int64 `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	// Commit time of this commit.
	CommitTime    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=commit_time,json=commitTime,proto3" json:"commit_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlameListSingleCommit) Reset() {
	*x = BlameListSingleCommit{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlameListSingleCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlameListSingleCommit) ProtoMessage() {}

func (x *BlameListSingleCommit) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlameListSingleCommit.ProtoReflect.Descriptor instead.
func (*BlameListSingleCommit) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescGZIP(), []int{2}
}

func (x *BlameListSingleCommit) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

func (x *BlameListSingleCommit) GetReviewUrl() string {
	if x != nil {
		return x.ReviewUrl
	}
	return ""
}

func (x *BlameListSingleCommit) GetReviewTitle() string {
	if x != nil {
		return x.ReviewTitle
	}
	return ""
}

func (x *BlameListSingleCommit) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *BlameListSingleCommit) GetCommitTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CommitTime
	}
	return nil
}

type NthSectionSuspect struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A suspect revision of nth-section analysis.
	// Deprecating: use commit instead.
	// TODO(beining@): remove this field when frontend switch to use commit field.
	GitilesCommit *proto.GitilesCommit `protobuf:"bytes,1,opt,name=gitiles_commit,json=gitilesCommit,proto3" json:"gitiles_commit,omitempty"`
	// Review URL for the commit.
	ReviewUrl string `protobuf:"bytes,2,opt,name=reviewUrl,proto3" json:"reviewUrl,omitempty"`
	// Title of the review for the commit.
	ReviewTitle string `protobuf:"bytes,3,opt,name=reviewTitle,proto3" json:"reviewTitle,omitempty"`
	// The details of suspect verification for the suspect.
	VerificationDetails *SuspectVerificationDetails `protobuf:"bytes,4,opt,name=verification_details,json=verificationDetails,proto3" json:"verification_details,omitempty"`
	// A suspect revision of nth-section analysis.
	Commit        *proto.GitilesCommit `protobuf:"bytes,5,opt,name=commit,proto3" json:"commit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NthSectionSuspect) Reset() {
	*x = NthSectionSuspect{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NthSectionSuspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NthSectionSuspect) ProtoMessage() {}

func (x *NthSectionSuspect) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NthSectionSuspect.ProtoReflect.Descriptor instead.
func (*NthSectionSuspect) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescGZIP(), []int{3}
}

func (x *NthSectionSuspect) GetGitilesCommit() *proto.GitilesCommit {
	if x != nil {
		return x.GitilesCommit
	}
	return nil
}

func (x *NthSectionSuspect) GetReviewUrl() string {
	if x != nil {
		return x.ReviewUrl
	}
	return ""
}

func (x *NthSectionSuspect) GetReviewTitle() string {
	if x != nil {
		return x.ReviewTitle
	}
	return ""
}

func (x *NthSectionSuspect) GetVerificationDetails() *SuspectVerificationDetails {
	if x != nil {
		return x.VerificationDetails
	}
	return nil
}

func (x *NthSectionSuspect) GetCommit() *proto.GitilesCommit {
	if x != nil {
		return x.Commit
	}
	return nil
}

type RegressionRange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The commit that is the latest known to pass.
	LastPassed *proto.GitilesCommit `protobuf:"bytes,1,opt,name=last_passed,json=lastPassed,proto3" json:"last_passed,omitempty"`
	// The commit that is the earliest known to fail.
	FirstFailed *proto.GitilesCommit `protobuf:"bytes,2,opt,name=first_failed,json=firstFailed,proto3" json:"first_failed,omitempty"`
	// How many revisions between last passed (exclusively) and first failed
	// (inclusively).
	NumberOfRevisions int32 `protobuf:"varint,3,opt,name=number_of_revisions,json=numberOfRevisions,proto3" json:"number_of_revisions,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegressionRange) Reset() {
	*x = RegressionRange{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegressionRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegressionRange) ProtoMessage() {}

func (x *RegressionRange) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegressionRange.ProtoReflect.Descriptor instead.
func (*RegressionRange) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescGZIP(), []int{4}
}

func (x *RegressionRange) GetLastPassed() *proto.GitilesCommit {
	if x != nil {
		return x.LastPassed
	}
	return nil
}

func (x *RegressionRange) GetFirstFailed() *proto.GitilesCommit {
	if x != nil {
		return x.FirstFailed
	}
	return nil
}

func (x *RegressionRange) GetNumberOfRevisions() int32 {
	if x != nil {
		return x.NumberOfRevisions
	}
	return 0
}

var File_go_chromium_org_luci_bisection_proto_v1_nthsection_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDesc = string([]byte{
	0x0a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x74, 0x68, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x04, 0x0a, 0x18, 0x4e, 0x74,
	0x68, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x61, 0x0a, 0x1b, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x18, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x74, 0x68, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x36, 0x0a, 0x06, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x72, 0x75, 0x6e, 0x52,
	0x06, 0x72, 0x65, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x62, 0x6c, 0x61, 0x6d, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6c, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x62, 0x6c, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x07, 0x73, 0x75, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x42, 0x6c, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x42, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x15, 0x42, 0x6c,
	0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x11, 0x4e, 0x74, 0x68, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x44, 0x0a, 0x0e, 0x67, 0x69,
	0x74, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x0d, 0x67, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x60, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x0a,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x40, 0x0a,
	0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x69, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescData []byte
)

func file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDesc), len(file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDescData
}

var file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_goTypes = []any{
	(*NthSectionAnalysisResult)(nil),   // 0: luci.bisection.v1.NthSectionAnalysisResult
	(*BlameList)(nil),                  // 1: luci.bisection.v1.BlameList
	(*BlameListSingleCommit)(nil),      // 2: luci.bisection.v1.BlameListSingleCommit
	(*NthSectionSuspect)(nil),          // 3: luci.bisection.v1.NthSectionSuspect
	(*RegressionRange)(nil),            // 4: luci.bisection.v1.RegressionRange
	(AnalysisStatus)(0),                // 5: luci.bisection.v1.AnalysisStatus
	(*timestamppb.Timestamp)(nil),      // 6: google.protobuf.Timestamp
	(*SingleRerun)(nil),                // 7: luci.bisection.v1.SingleRerun
	(*proto.GitilesCommit)(nil),        // 8: buildbucket.v2.GitilesCommit
	(*SuspectVerificationDetails)(nil), // 9: luci.bisection.v1.SuspectVerificationDetails
}
var file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_depIdxs = []int32{
	5,  // 0: luci.bisection.v1.NthSectionAnalysisResult.status:type_name -> luci.bisection.v1.AnalysisStatus
	6,  // 1: luci.bisection.v1.NthSectionAnalysisResult.start_time:type_name -> google.protobuf.Timestamp
	6,  // 2: luci.bisection.v1.NthSectionAnalysisResult.last_updated_time:type_name -> google.protobuf.Timestamp
	6,  // 3: luci.bisection.v1.NthSectionAnalysisResult.end_time:type_name -> google.protobuf.Timestamp
	4,  // 4: luci.bisection.v1.NthSectionAnalysisResult.remaining_nth_section_range:type_name -> luci.bisection.v1.RegressionRange
	7,  // 5: luci.bisection.v1.NthSectionAnalysisResult.reruns:type_name -> luci.bisection.v1.SingleRerun
	1,  // 6: luci.bisection.v1.NthSectionAnalysisResult.blameList:type_name -> luci.bisection.v1.BlameList
	3,  // 7: luci.bisection.v1.NthSectionAnalysisResult.suspect:type_name -> luci.bisection.v1.NthSectionSuspect
	2,  // 8: luci.bisection.v1.BlameList.commits:type_name -> luci.bisection.v1.BlameListSingleCommit
	2,  // 9: luci.bisection.v1.BlameList.last_pass_commit:type_name -> luci.bisection.v1.BlameListSingleCommit
	6,  // 10: luci.bisection.v1.BlameListSingleCommit.commit_time:type_name -> google.protobuf.Timestamp
	8,  // 11: luci.bisection.v1.NthSectionSuspect.gitiles_commit:type_name -> buildbucket.v2.GitilesCommit
	9,  // 12: luci.bisection.v1.NthSectionSuspect.verification_details:type_name -> luci.bisection.v1.SuspectVerificationDetails
	8,  // 13: luci.bisection.v1.NthSectionSuspect.commit:type_name -> buildbucket.v2.GitilesCommit
	8,  // 14: luci.bisection.v1.RegressionRange.last_passed:type_name -> buildbucket.v2.GitilesCommit
	8,  // 15: luci.bisection.v1.RegressionRange.first_failed:type_name -> buildbucket.v2.GitilesCommit
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_init() }
func file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_init() {
	if File_go_chromium_org_luci_bisection_proto_v1_nthsection_proto != nil {
		return
	}
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDesc), len(file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_bisection_proto_v1_nthsection_proto = out.File
	file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_goTypes = nil
	file_go_chromium_org_luci_bisection_proto_v1_nthsection_proto_depIdxs = nil
}
