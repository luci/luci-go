// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/bisection/proto/v1/culprits.proto

package bisectionpb

import (
	proto "go.chromium.org/luci/buildbucket/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CulpritActionType int32

const (
	CulpritActionType_CULPRIT_ACTION_TYPE_UNSPECIFIED CulpritActionType = 0
	// No action has been taken with the culprit.
	CulpritActionType_NO_ACTION CulpritActionType = 1
	// The culprit was auto-reverted by LUCI Bisection.
	CulpritActionType_CULPRIT_AUTO_REVERTED CulpritActionType = 2
	// The revert CL for the culprit was created.
	// Maybe waiting for a human to review or for the verification process
	// to finish.
	CulpritActionType_REVERT_CL_CREATED CulpritActionType = 3
	// LUCI Bisection commented on the culprit CL.
	CulpritActionType_CULPRIT_CL_COMMENTED CulpritActionType = 4
	// LUCI Bisection commented on the bug for the failure.
	CulpritActionType_BUG_COMMENTED CulpritActionType = 5
	// LUCI Bisection commented on an existing revert CL for the culprit CL.
	CulpritActionType_EXISTING_REVERT_CL_COMMENTED CulpritActionType = 6
)

// Enum value maps for CulpritActionType.
var (
	CulpritActionType_name = map[int32]string{
		0: "CULPRIT_ACTION_TYPE_UNSPECIFIED",
		1: "NO_ACTION",
		2: "CULPRIT_AUTO_REVERTED",
		3: "REVERT_CL_CREATED",
		4: "CULPRIT_CL_COMMENTED",
		5: "BUG_COMMENTED",
		6: "EXISTING_REVERT_CL_COMMENTED",
	}
	CulpritActionType_value = map[string]int32{
		"CULPRIT_ACTION_TYPE_UNSPECIFIED": 0,
		"NO_ACTION":                       1,
		"CULPRIT_AUTO_REVERTED":           2,
		"REVERT_CL_CREATED":               3,
		"CULPRIT_CL_COMMENTED":            4,
		"BUG_COMMENTED":                   5,
		"EXISTING_REVERT_CL_COMMENTED":    6,
	}
)

func (x CulpritActionType) Enum() *CulpritActionType {
	p := new(CulpritActionType)
	*p = x
	return p
}

func (x CulpritActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CulpritActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_enumTypes[0].Descriptor()
}

func (CulpritActionType) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_enumTypes[0]
}

func (x CulpritActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CulpritActionType.Descriptor instead.
func (CulpritActionType) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescGZIP(), []int{0}
}

// CulpritInactionReason encapsulates common reasons for why culprits found by
// LUCI Bisection may not have resulted in any perceivable actions.
type CulpritInactionReason int32

const (
	CulpritInactionReason_CULPRIT_INACTION_REASON_UNSPECIFIED CulpritInactionReason = 0
	// The culprit has been reverted by LUCI Bisection.
	CulpritInactionReason_REVERTED_BY_BISECTION CulpritInactionReason = 1
	// The culprit has been reverted, but not by LUCI Bisection.
	CulpritInactionReason_REVERTED_MANUALLY CulpritInactionReason = 2
	// The culprit has an existing revert, yet to be merged, created by
	// LUCI Bisection.
	CulpritInactionReason_REVERT_OWNED_BY_BISECTION CulpritInactionReason = 3
	// The culprit's existing revert already has a comment from LUCI Bisection.
	CulpritInactionReason_REVERT_HAS_COMMENT CulpritInactionReason = 4
	// The culprit already has a comment from LUCI Bisection.
	CulpritInactionReason_CULPRIT_HAS_COMMENT CulpritInactionReason = 5
	// The analysis that resulted in the culprit has been canceled.
	CulpritInactionReason_ANALYSIS_CANCELED CulpritInactionReason = 6
	// Culprit actions have been disabled via configs.
	CulpritInactionReason_ACTIONS_DISABLED CulpritInactionReason = 7
	// The test being analysed is no longer having unexpected status.
	CulpritInactionReason_TEST_NO_LONGER_UNEXPECTED CulpritInactionReason = 8
)

// Enum value maps for CulpritInactionReason.
var (
	CulpritInactionReason_name = map[int32]string{
		0: "CULPRIT_INACTION_REASON_UNSPECIFIED",
		1: "REVERTED_BY_BISECTION",
		2: "REVERTED_MANUALLY",
		3: "REVERT_OWNED_BY_BISECTION",
		4: "REVERT_HAS_COMMENT",
		5: "CULPRIT_HAS_COMMENT",
		6: "ANALYSIS_CANCELED",
		7: "ACTIONS_DISABLED",
		8: "TEST_NO_LONGER_UNEXPECTED",
	}
	CulpritInactionReason_value = map[string]int32{
		"CULPRIT_INACTION_REASON_UNSPECIFIED": 0,
		"REVERTED_BY_BISECTION":               1,
		"REVERTED_MANUALLY":                   2,
		"REVERT_OWNED_BY_BISECTION":           3,
		"REVERT_HAS_COMMENT":                  4,
		"CULPRIT_HAS_COMMENT":                 5,
		"ANALYSIS_CANCELED":                   6,
		"ACTIONS_DISABLED":                    7,
		"TEST_NO_LONGER_UNEXPECTED":           8,
	}
)

func (x CulpritInactionReason) Enum() *CulpritInactionReason {
	p := new(CulpritInactionReason)
	*p = x
	return p
}

func (x CulpritInactionReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CulpritInactionReason) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_enumTypes[1].Descriptor()
}

func (CulpritInactionReason) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_enumTypes[1]
}

func (x CulpritInactionReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CulpritInactionReason.Descriptor instead.
func (CulpritInactionReason) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescGZIP(), []int{1}
}

type Culprit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The gitiles commit for the culprit.
	Commit *proto.GitilesCommit `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	// The review URL for the culprit.
	ReviewUrl string `protobuf:"bytes,2,opt,name=review_url,json=reviewUrl,proto3" json:"review_url,omitempty"`
	// The review title for the culprit.
	ReviewTitle string `protobuf:"bytes,3,opt,name=review_title,json=reviewTitle,proto3" json:"review_title,omitempty"`
	// Actions we have taken with the culprit.
	// More than one action may be taken, for example, reverting the culprit and
	// commenting on the bug.
	CulpritAction []*CulpritAction `protobuf:"bytes,4,rep,name=culprit_action,json=culpritAction,proto3" json:"culprit_action,omitempty"`
	// The details of suspect verification for the culprit.
	VerificationDetails *SuspectVerificationDetails `protobuf:"bytes,5,opt,name=verification_details,json=verificationDetails,proto3" json:"verification_details,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Culprit) Reset() {
	*x = Culprit{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Culprit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Culprit) ProtoMessage() {}

func (x *Culprit) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Culprit.ProtoReflect.Descriptor instead.
func (*Culprit) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescGZIP(), []int{0}
}

func (x *Culprit) GetCommit() *proto.GitilesCommit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *Culprit) GetReviewUrl() string {
	if x != nil {
		return x.ReviewUrl
	}
	return ""
}

func (x *Culprit) GetReviewTitle() string {
	if x != nil {
		return x.ReviewTitle
	}
	return ""
}

func (x *Culprit) GetCulpritAction() []*CulpritAction {
	if x != nil {
		return x.CulpritAction
	}
	return nil
}

func (x *Culprit) GetVerificationDetails() *SuspectVerificationDetails {
	if x != nil {
		return x.VerificationDetails
	}
	return nil
}

// An action that LUCI Bisection has taken with the culprit.
type CulpritAction struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	ActionType CulpritActionType      `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=luci.bisection.v1.CulpritActionType" json:"action_type,omitempty"`
	// URL to the revert CL for the culprit.
	RevertClUrl string `protobuf:"bytes,2,opt,name=revert_cl_url,json=revertClUrl,proto3" json:"revert_cl_url,omitempty"`
	// URL to the bug, if action_type = BUG_COMMENTED.
	BugUrl string `protobuf:"bytes,3,opt,name=bug_url,json=bugUrl,proto3" json:"bug_url,omitempty"`
	// Timestamp of when the culprit action was executed.
	ActionTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=action_time,json=actionTime,proto3" json:"action_time,omitempty"`
	// Optional reason for why no action was taken with the culprit, if
	// action_type = NO_ACTION.
	InactionReason CulpritInactionReason `protobuf:"varint,5,opt,name=inaction_reason,json=inactionReason,proto3,enum=luci.bisection.v1.CulpritInactionReason" json:"inaction_reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CulpritAction) Reset() {
	*x = CulpritAction{}
	mi := &file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CulpritAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CulpritAction) ProtoMessage() {}

func (x *CulpritAction) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CulpritAction.ProtoReflect.Descriptor instead.
func (*CulpritAction) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescGZIP(), []int{1}
}

func (x *CulpritAction) GetActionType() CulpritActionType {
	if x != nil {
		return x.ActionType
	}
	return CulpritActionType_CULPRIT_ACTION_TYPE_UNSPECIFIED
}

func (x *CulpritAction) GetRevertClUrl() string {
	if x != nil {
		return x.RevertClUrl
	}
	return ""
}

func (x *CulpritAction) GetBugUrl() string {
	if x != nil {
		return x.BugUrl
	}
	return ""
}

func (x *CulpritAction) GetActionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActionTime
	}
	return nil
}

func (x *CulpritAction) GetInactionReason() CulpritInactionReason {
	if x != nil {
		return x.InactionReason
	}
	return CulpritInactionReason_CULPRIT_INACTION_REASON_UNSPECIFIED
}

var File_go_chromium_org_luci_bisection_proto_v1_culprits_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDesc = string([]byte{
	0x0a, 0x36, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x6c, 0x70, 0x72, 0x69,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62,
	0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x67, 0x6f,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75,
	0x63, 0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x02, 0x0a, 0x07, 0x43, 0x75, 0x6c, 0x70,
	0x72, 0x69, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x0e,
	0x63, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x14, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x0d, 0x43, 0x75, 0x6c, 0x70,
	0x72, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x63, 0x6c, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x65, 0x72, 0x74, 0x43,
	0x6c, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x75, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x0f, 0x69, 0x6e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x62, 0x69, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x49,
	0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0e, 0x69,
	0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a, 0xc8, 0x01,
	0x0a, 0x11, 0x43, 0x75, 0x6c, 0x70, 0x72, 0x69, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x55, 0x4c, 0x50, 0x52, 0x49, 0x54, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x55, 0x4c, 0x50, 0x52,
	0x49, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x5f, 0x43, 0x4c, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x55, 0x4c,
	0x50, 0x52, 0x49, 0x54, 0x5f, 0x43, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x45,
	0x44, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x55, 0x47, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45,
	0x4e, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x20, 0x0a, 0x1c, 0x45, 0x58, 0x49, 0x53, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x5f, 0x43, 0x4c, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x06, 0x2a, 0x8e, 0x02, 0x0a, 0x15, 0x43, 0x75, 0x6c,
	0x70, 0x72, 0x69, 0x74, 0x49, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x55, 0x4c, 0x50, 0x52, 0x49, 0x54, 0x5f, 0x49, 0x4e,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x52,
	0x45, 0x56, 0x45, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x42, 0x49, 0x53, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54,
	0x45, 0x44, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x1d, 0x0a,
	0x19, 0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x44, 0x5f, 0x42, 0x59,
	0x5f, 0x42, 0x49, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x52, 0x45, 0x56, 0x45, 0x52, 0x54, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x55, 0x4c, 0x50, 0x52, 0x49, 0x54, 0x5f,
	0x48, 0x41, 0x53, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x15, 0x0a,
	0x11, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x53, 0x49, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x45,
	0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x45,
	0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x08, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63,
	0x69, 0x2f, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x69, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescData []byte
)

func file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDesc), len(file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDescData
}

var file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_goTypes = []any{
	(CulpritActionType)(0),             // 0: luci.bisection.v1.CulpritActionType
	(CulpritInactionReason)(0),         // 1: luci.bisection.v1.CulpritInactionReason
	(*Culprit)(nil),                    // 2: luci.bisection.v1.Culprit
	(*CulpritAction)(nil),              // 3: luci.bisection.v1.CulpritAction
	(*proto.GitilesCommit)(nil),        // 4: buildbucket.v2.GitilesCommit
	(*SuspectVerificationDetails)(nil), // 5: luci.bisection.v1.SuspectVerificationDetails
	(*timestamppb.Timestamp)(nil),      // 6: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_depIdxs = []int32{
	4, // 0: luci.bisection.v1.Culprit.commit:type_name -> buildbucket.v2.GitilesCommit
	3, // 1: luci.bisection.v1.Culprit.culprit_action:type_name -> luci.bisection.v1.CulpritAction
	5, // 2: luci.bisection.v1.Culprit.verification_details:type_name -> luci.bisection.v1.SuspectVerificationDetails
	0, // 3: luci.bisection.v1.CulpritAction.action_type:type_name -> luci.bisection.v1.CulpritActionType
	6, // 4: luci.bisection.v1.CulpritAction.action_time:type_name -> google.protobuf.Timestamp
	1, // 5: luci.bisection.v1.CulpritAction.inaction_reason:type_name -> luci.bisection.v1.CulpritInactionReason
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_init() }
func file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_init() {
	if File_go_chromium_org_luci_bisection_proto_v1_culprits_proto != nil {
		return
	}
	file_go_chromium_org_luci_bisection_proto_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDesc), len(file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_bisection_proto_v1_culprits_proto = out.File
	file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_goTypes = nil
	file_go_chromium_org_luci_bisection_proto_v1_culprits_proto_depIdxs = nil
}
