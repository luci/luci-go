// Copyright 2017 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/scheduler/appengine/internal/triggers.proto

package internal

import (
	v1 "go.chromium.org/luci/scheduler/api/scheduler/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Trigger can be emitted by the engine itself (e.g. on a schedule) or by
// triggering tasks (such as Gitiles tasks).
//
// One or multiple triggers are consumed to initiate a new invocation which has
// access to the properties of consumed triggers. For example, Buildbucket task
// knows about triggers produced by Gitiles tasks.
//
// This message is an internal representation of the trigger, as stored in
// the datastore. See also triggers.Trigger for public representation used in
// API calls.
type Trigger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique in time identifier of the trigger.
	//
	// It is used to deduplicate and hence provide idempotency for adding
	// a trigger. Must be provided by whoever emits the trigger.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of a job that emitted this trigger or "" if emitted by the engine.
	//
	// Set by the engine, can't be overridden.
	JobId string `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// ID of an invocation that emitted this trigger or 0 if emitted by the
	// engine.
	//
	// Set by the engine, can't be overridden.
	InvocationId int64 `protobuf:"varint,3,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// Timestamp when the trigger was created.
	//
	// Can be set by whoever emits the trigger if the trigger is based on some
	// external event. If not provided, the engine will set it to the current
	// time.
	//
	// Together with 'order_in_batch' used for weak ordering of triggers that
	// aren't directly comparable (e.g. git commits from different repositories).
	// This ordering shouldn't be considered reliable.
	Created *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	// If a bunch of triggers were emitted at the same moment in time (for example
	// through a single RPC or by a single invocation in a tight loop), a trigger
	// with smaller 'order_in_batch' is considered to be older. Value of
	// 'order_in_batch' for triggers with different 'created' timestamps are not
	// comparable.
	//
	// Should be set by whoever emits the trigger if 'created' timestamp was
	// supplied explicitly. Otherwise will be set by the engine based on the order
	// of EmitTrigger calls done by the invocation.
	//
	// Together with 'order_in_batch' used for weak ordering of triggers that
	// aren't directly comparable (e.g. git commits from different repositories).
	// This ordering shouldn't be considered reliable.
	OrderInBatch int64 `protobuf:"varint,7,opt,name=order_in_batch,json=orderInBatch,proto3" json:"order_in_batch,omitempty"`
	// User friendly name for this trigger that shows up in UI.
	//
	// Can be provided by whoever emits the trigger. Doesn't have to be unique.
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Optional HTTP link to display in UI.
	//
	// Can be provided by whoever emits the trigger. Doesn't have to be unique.
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	// For triggers emitted through public API or "Trigger" button, contains
	// identity of a user who submitted this trigger.
	//
	// Empty for triggers emitted by the service itself.
	EmittedByUser string `protobuf:"bytes,8,opt,name=emitted_by_user,json=emittedByUser,proto3" json:"emitted_by_user,omitempty"`
	// Actual trigger data that depends on type of the trigger.
	//
	// Types that are valid to be assigned to Payload:
	//
	//	*Trigger_Cron
	//	*Trigger_Webui
	//	*Trigger_Noop
	//	*Trigger_Gitiles
	//	*Trigger_Buildbucket
	Payload       isTrigger_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trigger) Reset() {
	*x = Trigger{}
	mi := &file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trigger) ProtoMessage() {}

func (x *Trigger) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trigger.ProtoReflect.Descriptor instead.
func (*Trigger) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescGZIP(), []int{0}
}

func (x *Trigger) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trigger) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Trigger) GetInvocationId() int64 {
	if x != nil {
		return x.InvocationId
	}
	return 0
}

func (x *Trigger) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Trigger) GetOrderInBatch() int64 {
	if x != nil {
		return x.OrderInBatch
	}
	return 0
}

func (x *Trigger) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Trigger) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Trigger) GetEmittedByUser() string {
	if x != nil {
		return x.EmittedByUser
	}
	return ""
}

func (x *Trigger) GetPayload() isTrigger_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Trigger) GetCron() *v1.CronTrigger {
	if x != nil {
		if x, ok := x.Payload.(*Trigger_Cron); ok {
			return x.Cron
		}
	}
	return nil
}

func (x *Trigger) GetWebui() *v1.WebUITrigger {
	if x != nil {
		if x, ok := x.Payload.(*Trigger_Webui); ok {
			return x.Webui
		}
	}
	return nil
}

func (x *Trigger) GetNoop() *v1.NoopTrigger {
	if x != nil {
		if x, ok := x.Payload.(*Trigger_Noop); ok {
			return x.Noop
		}
	}
	return nil
}

func (x *Trigger) GetGitiles() *v1.GitilesTrigger {
	if x != nil {
		if x, ok := x.Payload.(*Trigger_Gitiles); ok {
			return x.Gitiles
		}
	}
	return nil
}

func (x *Trigger) GetBuildbucket() *v1.BuildbucketTrigger {
	if x != nil {
		if x, ok := x.Payload.(*Trigger_Buildbucket); ok {
			return x.Buildbucket
		}
	}
	return nil
}

type isTrigger_Payload interface {
	isTrigger_Payload()
}

type Trigger_Cron struct {
	Cron *v1.CronTrigger `protobuf:"bytes,40,opt,name=cron,proto3,oneof"`
}

type Trigger_Webui struct {
	Webui *v1.WebUITrigger `protobuf:"bytes,41,opt,name=webui,proto3,oneof"`
}

type Trigger_Noop struct {
	Noop *v1.NoopTrigger `protobuf:"bytes,50,opt,name=noop,proto3,oneof"`
}

type Trigger_Gitiles struct {
	Gitiles *v1.GitilesTrigger `protobuf:"bytes,51,opt,name=gitiles,proto3,oneof"`
}

type Trigger_Buildbucket struct {
	Buildbucket *v1.BuildbucketTrigger `protobuf:"bytes,52,opt,name=buildbucket,proto3,oneof"`
}

func (*Trigger_Cron) isTrigger_Payload() {}

func (*Trigger_Webui) isTrigger_Payload() {}

func (*Trigger_Noop) isTrigger_Payload() {}

func (*Trigger_Gitiles) isTrigger_Payload() {}

func (*Trigger_Buildbucket) isTrigger_Payload() {}

// TriggerList is what we store in datastore entities.
type TriggerList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Triggers      []*Trigger             `protobuf:"bytes,1,rep,name=triggers,proto3" json:"triggers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerList) Reset() {
	*x = TriggerList{}
	mi := &file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerList) ProtoMessage() {}

func (x *TriggerList) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerList.ProtoReflect.Descriptor instead.
func (*TriggerList) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescGZIP(), []int{1}
}

func (x *TriggerList) GetTriggers() []*Trigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

var File_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDesc = string([]byte{
	0x0a, 0x40, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3e, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x04, 0x0a, 0x07, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x63, 0x72,
	0x6f, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x63, 0x72, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x77, 0x65, 0x62, 0x75,
	0x69, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x62, 0x55, 0x49, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x05, 0x77, 0x65, 0x62, 0x75, 0x69, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x6f,
	0x70, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x6f, 0x70, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6f, 0x70, 0x12, 0x35, 0x0a, 0x07, 0x67, 0x69, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x67, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x41,
	0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x34, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x2e,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x45, 0x0a, 0x0b,
	0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x73, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x73, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescData []byte
)

func file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDesc), len(file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDescData
}

var file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_goTypes = []any{
	(*Trigger)(nil),               // 0: internal.triggers.Trigger
	(*TriggerList)(nil),           // 1: internal.triggers.TriggerList
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*v1.CronTrigger)(nil),        // 3: scheduler.CronTrigger
	(*v1.WebUITrigger)(nil),       // 4: scheduler.WebUITrigger
	(*v1.NoopTrigger)(nil),        // 5: scheduler.NoopTrigger
	(*v1.GitilesTrigger)(nil),     // 6: scheduler.GitilesTrigger
	(*v1.BuildbucketTrigger)(nil), // 7: scheduler.BuildbucketTrigger
}
var file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_depIdxs = []int32{
	2, // 0: internal.triggers.Trigger.created:type_name -> google.protobuf.Timestamp
	3, // 1: internal.triggers.Trigger.cron:type_name -> scheduler.CronTrigger
	4, // 2: internal.triggers.Trigger.webui:type_name -> scheduler.WebUITrigger
	5, // 3: internal.triggers.Trigger.noop:type_name -> scheduler.NoopTrigger
	6, // 4: internal.triggers.Trigger.gitiles:type_name -> scheduler.GitilesTrigger
	7, // 5: internal.triggers.Trigger.buildbucket:type_name -> scheduler.BuildbucketTrigger
	0, // 6: internal.triggers.TriggerList.triggers:type_name -> internal.triggers.Trigger
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_init() }
func file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_init() {
	if File_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto != nil {
		return
	}
	file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes[0].OneofWrappers = []any{
		(*Trigger_Cron)(nil),
		(*Trigger_Webui)(nil),
		(*Trigger_Noop)(nil),
		(*Trigger_Gitiles)(nil),
		(*Trigger_Buildbucket)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDesc), len(file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto = out.File
	file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_goTypes = nil
	file_go_chromium_org_luci_scheduler_appengine_internal_triggers_proto_depIdxs = nil
}
