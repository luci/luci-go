// Code generated by cproto. DO NOT EDIT.

package testproto

import "go.chromium.org/luci/grpc/discovery"

import "google.golang.org/protobuf/types/descriptorpb"

func init() {
	discovery.RegisterDescriptorSetCompressed(
		[]string{
			"go.chromium.org.luci.grpc.logging.requestcheck.testproto.ExampleService",
		},
		[]byte{31, 139,
			8, 0, 0, 0, 0, 0, 0, 255, 164, 86, 81, 115, 219, 198,
			17, 6, 8, 138, 161, 47, 146, 165, 156, 108, 89, 81, 58, 206,
			70, 137, 99, 185, 165, 65, 85, 125, 168, 199, 238, 11, 72, 30,
			37, 164, 20, 192, 0, 160, 21, 229, 165, 3, 2, 71, 242, 38,
			32, 142, 61, 128, 114, 57, 157, 252, 128, 254, 141, 246, 173, 15,
			237, 15, 232, 76, 103, 250, 222, 255, 210, 199, 246, 165, 211, 206,
			29, 0, 137, 86, 236, 180, 227, 240, 69, 183, 187, 184, 111, 119,
			191, 91, 237, 46, 250, 207, 7, 232, 163, 41, 231, 211, 132, 182,
			23, 130, 231, 124, 188, 156, 180, 233, 124, 145, 175, 76, 37, 226,
			237, 194, 104, 86, 198, 195, 247, 208, 6, 145, 246, 206, 183, 104,
			55, 226, 115, 243, 150, 189, 131, 148, 117, 40, 197, 161, 254, 117,
			101, 158, 242, 36, 76, 167, 38, 23, 211, 27, 55, 249, 106, 65,
			179, 246, 55, 41, 127, 149, 22, 46, 23, 227, 127, 233, 250, 239,
			107, 198, 233, 176, 243, 199, 218, 195, 211, 226, 230, 176, 252, 220,
			188, 160, 73, 242, 75, 249, 113, 32, 239, 125, 241, 215, 29, 212,
			192, 245, 135, 218, 201, 14, 250, 251, 38, 210, 55, 177, 241, 80,
			195, 39, 127, 219, 4, 117, 33, 226, 9, 116, 150, 147, 9, 21,
			25, 60, 133, 2, 234, 113, 6, 113, 152, 135, 192, 210, 156, 138,
			104, 22, 166, 83, 10, 19, 46, 230, 97, 142, 160, 203, 23, 43,
			193, 166, 179, 28, 78, 142, 143, 159, 149, 23, 192, 78, 35, 19,
			192, 74, 18, 80, 182, 12, 4, 205, 168, 184, 162, 177, 137, 96,
			150, 231, 139, 236, 121, 187, 29, 211, 43, 154, 240, 5, 21, 89,
			149, 107, 196, 231, 69, 146, 17, 79, 158, 142, 139, 32, 218, 8,
			129, 71, 99, 150, 229, 130, 141, 151, 57, 227, 41, 132, 105, 12,
			203, 140, 2, 75, 33, 227, 75, 17, 81, 165, 25, 179, 52, 20,
			43, 21, 87, 214, 130, 87, 44, 159, 1, 23, 234, 47, 95, 230,
			8, 230, 60, 102, 19, 22, 133, 18, 161, 5, 161, 160, 176, 160,
			98, 206, 242, 156, 198, 176, 16, 252, 138, 197, 52, 134, 124, 22,
			230, 144, 207, 100, 118, 73, 194, 95, 177, 116, 10, 17, 79, 99,
			38, 47, 101, 242, 18, 130, 57, 205, 159, 35, 4, 242, 247, 227,
			91, 129, 101, 192, 39, 85, 68, 17, 143, 41, 204, 151, 89, 14,
			130, 230, 33, 75, 21, 106, 56, 230, 87, 210, 84, 50, 134, 32,
			229, 57, 139, 104, 11, 242, 25, 203, 32, 97, 89, 46, 17, 214,
			61, 166, 241, 173, 112, 98, 150, 69, 73, 200, 230, 84, 152, 111,
			11, 130, 165, 235, 92, 84, 65, 44, 4, 143, 151, 17, 189, 137,
			3, 221, 4, 242, 131, 226, 64, 80, 102, 23, 243, 104, 57, 167,
			105, 30, 86, 143, 212, 230, 2, 120, 62, 163, 2, 230, 97, 78,
			5, 11, 147, 236, 134, 106, 245, 64, 249, 140, 34, 88, 143, 254,
			58, 41, 135, 50, 117, 83, 2, 167, 225, 156, 202, 128, 214, 107,
			43, 229, 55, 54, 197, 59, 203, 51, 153, 81, 90, 64, 113, 145,
			193, 60, 92, 193, 152, 202, 74, 137, 33, 231, 64, 211, 152, 139,
			140, 202, 162, 88, 8, 62, 231, 57, 133, 130, 147, 60, 131, 152,
			10, 118, 69, 99, 152, 8, 62, 71, 5, 11, 25, 159, 228, 175,
			100, 153, 148, 21, 4, 217, 130, 70, 178, 130, 96, 33, 152, 44,
			44, 33, 107, 39, 45, 170, 40, 203, 84, 236, 8, 130, 51, 219,
			7, 223, 237, 7, 23, 150, 71, 192, 246, 97, 232, 185, 47, 237,
			30, 233, 65, 231, 18, 130, 51, 2, 93, 119, 120, 233, 217, 167,
			103, 1, 156, 185, 131, 30, 241, 124, 176, 156, 30, 116, 93, 39,
			240, 236, 206, 40, 112, 61, 31, 193, 161, 229, 131, 237, 31, 42,
			139, 229, 92, 2, 249, 106, 232, 17, 223, 7, 215, 3, 251, 124,
			56, 176, 73, 15, 46, 44, 207, 179, 156, 192, 38, 126, 11, 108,
			167, 59, 24, 245, 108, 231, 180, 5, 157, 81, 0, 142, 27, 32,
			24, 216, 231, 118, 64, 122, 16, 184, 45, 229, 246, 187, 247, 192,
			237, 195, 57, 241, 186, 103, 150, 19, 88, 29, 123, 96, 7, 151,
			202, 97, 223, 14, 28, 233, 172, 239, 122, 8, 44, 24, 90, 94,
			96, 119, 71, 3, 203, 131, 225, 200, 27, 186, 62, 1, 153, 89,
			207, 246, 187, 3, 203, 62, 39, 61, 19, 108, 7, 28, 23, 200,
			75, 226, 4, 224, 159, 89, 131, 193, 235, 137, 34, 112, 47, 28,
			226, 201, 232, 215, 211, 132, 14, 129, 129, 109, 117, 6, 68, 186,
			82, 121, 246, 108, 143, 116, 3, 153, 208, 205, 169, 107, 247, 136,
			19, 88, 131, 22, 2, 127, 72, 186, 182, 53, 104, 1, 249, 138,
			156, 15, 7, 150, 119, 217, 42, 65, 125, 242, 229, 136, 56, 129,
			109, 13, 160, 103, 157, 91, 167, 196, 135, 163, 255, 197, 202, 208,
			115, 187, 35, 143, 156, 203, 168, 221, 62, 248, 163, 142, 31, 216,
			193, 40, 32, 112, 234, 186, 61, 69, 182, 79, 188, 151, 118, 151,
			248, 47, 96, 224, 250, 138, 176, 145, 79, 90, 8, 122, 86, 96,
			41, 215, 67, 207, 237, 219, 129, 255, 66, 158, 59, 35, 223, 86,
			196, 217, 78, 64, 60, 111, 52, 12, 108, 215, 121, 2, 103, 238,
			5, 121, 73, 60, 232, 90, 35, 159, 244, 20, 195, 174, 35, 179,
			149, 181, 66, 92, 239, 82, 194, 74, 30, 212, 11, 180, 224, 226,
			140, 4, 103, 196, 147, 164, 42, 182, 44, 73, 131, 31, 120, 118,
			55, 88, 255, 204, 245, 32, 112, 189, 0, 173, 229, 9, 14, 57,
			29, 216, 167, 196, 233, 18, 105, 118, 37, 204, 133, 237, 147, 39,
			96, 121, 182, 47, 63, 176, 149, 99, 184, 176, 46, 193, 29, 169,
			172, 229, 67, 141, 124, 130, 138, 243, 90, 233, 182, 212, 123, 130,
			221, 7, 171, 247, 210, 150, 145, 151, 95, 15, 93, 223, 183, 203,
			114, 81, 180, 117, 207, 74, 206, 77, 132, 154, 72, 175, 97, 3,
			180, 125, 121, 106, 98, 227, 80, 35, 232, 14, 170, 53, 223, 47,
			142, 133, 242, 83, 173, 165, 148, 122, 113, 44, 148, 159, 105, 63,
			81, 202, 242, 88, 40, 31, 105, 135, 74, 137, 138, 99, 161, 252,
			92, 251, 68, 41, 63, 43, 142, 133, 242, 177, 246, 66, 41, 31,
			21, 199, 66, 121, 164, 125, 172, 148, 31, 23, 199, 191, 212, 80,
			173, 174, 97, 227, 68, 219, 57, 248, 115, 13, 44, 152, 210, 148,
			10, 22, 129, 154, 160, 48, 167, 89, 22, 78, 105, 49, 2, 86,
			124, 9, 81, 152, 130, 160, 79, 229, 160, 201, 57, 132, 87, 156,
			197, 16, 211, 9, 75, 85, 251, 91, 46, 18, 57, 76, 104, 140,
			94, 191, 175, 218, 239, 138, 47, 5, 88, 67, 59, 51, 193, 130,
			124, 181, 96, 81, 152, 0, 253, 77, 56, 95, 36, 20, 88, 38,
			241, 212, 252, 202, 33, 204, 84, 23, 19, 244, 215, 75, 154, 229,
			8, 202, 174, 38, 104, 182, 224, 169, 244, 188, 90, 168, 214, 23,
			166, 18, 79, 14, 159, 25, 143, 77, 232, 115, 1, 44, 205, 242,
			48, 141, 104, 53, 141, 228, 124, 101, 17, 133, 62, 231, 240, 219,
			66, 5, 32, 22, 17, 116, 66, 113, 116, 107, 215, 48, 213, 170,
			241, 68, 206, 166, 165, 72, 51, 120, 139, 253, 69, 1, 243, 45,
			146, 63, 163, 174, 233, 216, 56, 105, 110, 141, 27, 234, 179, 159,
			161, 127, 108, 162, 238, 148, 155, 209, 76, 240, 57, 91, 206, 213,
			142, 146, 44, 35, 214, 158, 138, 69, 212, 78, 248, 116, 202, 210,
			105, 187, 204, 45, 154, 209, 232, 155, 118, 78, 179, 92, 221, 86,
			167, 114, 83, 122, 118, 11, 196, 148, 32, 166, 4, 49, 75, 16,
			115, 29, 196, 188, 6, 57, 248, 190, 5, 236, 240, 71, 232, 160,
			195, 98, 38, 104, 36, 39, 75, 152, 248, 185, 160, 225, 220, 43,
			144, 14, 239, 163, 221, 110, 194, 104, 154, 127, 71, 237, 203, 69,
			69, 188, 174, 62, 69, 155, 35, 57, 82, 75, 25, 127, 140, 238,
			140, 195, 248, 87, 19, 70, 147, 120, 95, 7, 253, 168, 217, 169,
			237, 235, 94, 115, 28, 198, 125, 169, 195, 123, 168, 193, 166, 41,
			23, 116, 191, 6, 250, 209, 29, 175, 148, 78, 254, 109, 160, 187,
			164, 168, 4, 191, 120, 48, 252, 59, 29, 237, 190, 33, 80, 28,
			152, 239, 202, 139, 249, 246, 188, 15, 246, 110, 239, 157, 197, 91,
			31, 106, 71, 250, 177, 142, 87, 104, 115, 157, 21, 124, 254, 238,
			49, 188, 129, 221, 239, 115, 46, 93, 175, 51, 255, 67, 92, 191,
			225, 5, 223, 238, 250, 88, 199, 12, 109, 168, 215, 197, 253, 119,
			247, 185, 94, 30, 111, 119, 214, 121, 254, 245, 237, 106, 255, 191,
			255, 101, 190, 248, 231, 134, 92, 220, 235, 218, 135, 58, 250, 147,
			174, 22, 247, 186, 134, 79, 254, 160, 191, 182, 131, 159, 28, 67,
			48, 163, 224, 191, 10, 197, 92, 118, 42, 107, 153, 207, 184, 144,
			157, 232, 141, 203, 248, 40, 83, 253, 165, 92, 121, 110, 86, 87,
			150, 193, 148, 95, 81, 145, 210, 24, 198, 43, 213, 148, 172, 69,
			24, 205, 40, 92, 157, 152, 199, 144, 176, 136, 170, 254, 36, 187,
			165, 236, 148, 99, 138, 96, 194, 151, 105, 92, 109, 131, 3, 187,
			75, 28, 159, 192, 132, 37, 244, 122, 52, 52, 52, 171, 108, 206,
			77, 205, 173, 70, 67, 121, 52, 52, 108, 32, 237, 17, 66, 168,
			214, 208, 112, 125, 83, 251, 64, 151, 93, 167, 33, 187, 206, 102,
			115, 15, 189, 143, 234, 13, 173, 166, 97, 99, 171, 54, 65, 155,
			104, 67, 10, 58, 54, 182, 26, 31, 86, 210, 6, 54, 182, 14,
			160, 146, 106, 216, 216, 250, 228, 69, 37, 53, 176, 177, 213, 31,
			84, 146, 129, 141, 173, 243, 113, 9, 169, 99, 227, 110, 237, 203,
			210, 164, 75, 169, 129, 43, 105, 3, 27, 119, 119, 43, 7, 50,
			131, 187, 7, 79, 43, 201, 192, 198, 221, 103, 231, 37, 72, 13,
			27, 219, 215, 32, 18, 114, 251, 26, 68, 217, 118, 63, 175, 164,
			6, 54, 182, 127, 250, 243, 74, 50, 176, 177, 125, 13, 98, 96,
			99, 167, 246, 139, 210, 100, 232, 216, 216, 105, 188, 95, 73, 53,
			108, 236, 108, 238, 87, 146, 252, 242, 211, 103, 146, 54, 57, 210,
			118, 21, 109, 69, 131, 222, 109, 170, 161, 89, 215, 177, 113, 79,
			123, 168, 212, 50, 167, 123, 205, 143, 148, 186, 134, 141, 251, 165,
			90, 70, 121, 191, 249, 145, 36, 188, 110, 224, 250, 158, 172, 43,
			169, 151, 142, 247, 154, 247, 100, 76, 117, 67, 18, 254, 160, 246,
			68, 250, 149, 194, 134, 148, 26, 149, 164, 99, 227, 193, 123, 59,
			149, 100, 96, 227, 193, 238, 189, 74, 106, 98, 227, 193, 253, 35,
			180, 133, 26, 74, 146, 198, 189, 199, 37, 166, 142, 141, 253, 90,
			245, 165, 228, 120, 191, 214, 172, 36, 105, 187, 179, 93, 73, 6,
			54, 246, 241, 110, 53, 113, 254, 27, 0, 0, 255, 255, 236, 18,
			141, 83, 116, 15, 0, 0},
	)
}

// FileDescriptorSet returns a descriptor set for this proto package, which
// includes all defined services, and all transitive dependencies.
//
// Will not return nil.
//
// Do NOT modify the returned descriptor.
func FileDescriptorSet() *descriptorpb.FileDescriptorSet {
	// We just need ONE of the service names to look up the FileDescriptorSet.
	ret, err := discovery.GetDescriptorSet("go.chromium.org.luci.grpc.logging.requestcheck.testproto.ExampleService")
	if err != nil {
		panic(err)
	}
	return ret
}
