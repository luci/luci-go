// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/resultdb/proto/v1/instruction.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InstructionTarget int32

const (
	InstructionTarget_INSTRUCTION_TARGET_UNSPECIFIED InstructionTarget = 0
	// For running in a local machine.
	InstructionTarget_LOCAL InstructionTarget = 1
	// For running remotely.
	InstructionTarget_REMOTE InstructionTarget = 2
	// For prebuilt images.
	InstructionTarget_PREBUILT InstructionTarget = 3
)

// Enum value maps for InstructionTarget.
var (
	InstructionTarget_name = map[int32]string{
		0: "INSTRUCTION_TARGET_UNSPECIFIED",
		1: "LOCAL",
		2: "REMOTE",
		3: "PREBUILT",
	}
	InstructionTarget_value = map[string]int32{
		"INSTRUCTION_TARGET_UNSPECIFIED": 0,
		"LOCAL":                          1,
		"REMOTE":                         2,
		"PREBUILT":                       3,
	}
)

func (x InstructionTarget) Enum() *InstructionTarget {
	p := new(InstructionTarget)
	*p = x
	return p
}

func (x InstructionTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstructionTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_enumTypes[0].Descriptor()
}

func (InstructionTarget) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_enumTypes[0]
}

func (x InstructionTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstructionTarget.Descriptor instead.
func (InstructionTarget) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{0}
}

type InstructionType int32

const (
	InstructionType_INSTRUCTION_TYPE_UNSPECIFIED InstructionType = 0
	// Instruction for step.
	InstructionType_STEP_INSTRUCTION InstructionType = 1
	// Instruction for test result.
	InstructionType_TEST_RESULT_INSTRUCTION InstructionType = 2
)

// Enum value maps for InstructionType.
var (
	InstructionType_name = map[int32]string{
		0: "INSTRUCTION_TYPE_UNSPECIFIED",
		1: "STEP_INSTRUCTION",
		2: "TEST_RESULT_INSTRUCTION",
	}
	InstructionType_value = map[string]int32{
		"INSTRUCTION_TYPE_UNSPECIFIED": 0,
		"STEP_INSTRUCTION":             1,
		"TEST_RESULT_INSTRUCTION":      2,
	}
)

func (x InstructionType) Enum() *InstructionType {
	p := new(InstructionType)
	*p = x
	return p
}

func (x InstructionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstructionType) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_enumTypes[1].Descriptor()
}

func (InstructionType) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_enumTypes[1]
}

func (x InstructionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstructionType.Descriptor instead.
func (InstructionType) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{1}
}

// A collection of instructions.
// Used for step and test result instructions.
// Instructions may mixed between step and test instructions.
// This has a size limit of 1MB.
type Instructions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instructions  []*Instruction         `protobuf:"bytes,1,rep,name=instructions,proto3" json:"instructions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instructions) Reset() {
	*x = Instructions{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instructions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instructions) ProtoMessage() {}

func (x *Instructions) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instructions.ProtoReflect.Descriptor instead.
func (*Instructions) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{0}
}

func (x *Instructions) GetInstructions() []*Instruction {
	if x != nil {
		return x.Instructions
	}
	return nil
}

// Instruction is one failure reproduction instruction for a step or test result.
// Instruction can have different targets, like "local" or "remote".
// Instructions are stored in invocation level.
type Instruction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the instruction. Required.
	// It is consumer-defined and is unique within the an invocation.
	// The tuple (invocation_id, instruction_id) can uniquely identify an instruction.
	// At this moment, we only has use cases for instruction ID for step instructions,
	// but we also require test instruction to have ID, for possible features
	// or enhancements in the future.
	// Format [a-z][a-z0-9_\-:.]{0,99}
	// Limit: 100 bytes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Either step or test instruction.
	Type InstructionType `protobuf:"varint,2,opt,name=type,proto3,enum=luci.resultdb.v1.InstructionType" json:"type,omitempty"`
	// List of instruction for different targets.
	// There is at most 1 instruction per target.
	// If there is more than 1, an error will be returned.
	TargetedInstructions []*TargetedInstruction `protobuf:"bytes,3,rep,name=targeted_instructions,json=targetedInstructions,proto3" json:"targeted_instructions,omitempty"`
	// Specified the collection of test results that this instruction applies to.
	// For example, we can target all test results within a child invocation.
	// The consumer needs to make sure that any test result only has at most 1 instruction.
	// Otherwise, the behavior is undeterministic.
	// If no filter is applied, assume this applies to all test results contained
	// in this invocation and included invocations.
	// Only applicable for test instructions. This field will be ignored for step instructions.
	InstructionFilter *InstructionFilter `protobuf:"bytes,4,opt,name=instruction_filter,json=instructionFilter,proto3" json:"instruction_filter,omitempty"`
	// This is an output only field, representing the name of the instruction.
	// Format: invocations/<invocation_id>/instructions/<instruction_id>
	// If this field is set as input, it will be ignored.
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// The descriptive, human-readable name of the instruction.
	// It will be showed in the dependency section in MILO.
	// Limit: 100 bytes.
	DescriptiveName string `protobuf:"bytes,6,opt,name=descriptive_name,json=descriptiveName,proto3" json:"descriptive_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{1}
}

func (x *Instruction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Instruction) GetType() InstructionType {
	if x != nil {
		return x.Type
	}
	return InstructionType_INSTRUCTION_TYPE_UNSPECIFIED
}

func (x *Instruction) GetTargetedInstructions() []*TargetedInstruction {
	if x != nil {
		return x.TargetedInstructions
	}
	return nil
}

func (x *Instruction) GetInstructionFilter() *InstructionFilter {
	if x != nil {
		return x.InstructionFilter
	}
	return nil
}

func (x *Instruction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Instruction) GetDescriptiveName() string {
	if x != nil {
		return x.DescriptiveName
	}
	return ""
}

// InstructionFilter specifies the test results that this instruction applies to.
type InstructionFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TODO (nqmtuan): We may support filter by invocation tags if requested.
	//
	// Types that are valid to be assigned to FilterType:
	//
	//	*InstructionFilter_InvocationIds
	FilterType    isInstructionFilter_FilterType `protobuf_oneof:"filter_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstructionFilter) Reset() {
	*x = InstructionFilter{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstructionFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionFilter) ProtoMessage() {}

func (x *InstructionFilter) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionFilter.ProtoReflect.Descriptor instead.
func (*InstructionFilter) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{2}
}

func (x *InstructionFilter) GetFilterType() isInstructionFilter_FilterType {
	if x != nil {
		return x.FilterType
	}
	return nil
}

func (x *InstructionFilter) GetInvocationIds() *InstructionFilterByInvocationID {
	if x != nil {
		if x, ok := x.FilterType.(*InstructionFilter_InvocationIds); ok {
			return x.InvocationIds
		}
	}
	return nil
}

type isInstructionFilter_FilterType interface {
	isInstructionFilter_FilterType()
}

type InstructionFilter_InvocationIds struct {
	InvocationIds *InstructionFilterByInvocationID `protobuf:"bytes,1,opt,name=invocation_ids,json=invocationIds,proto3,oneof"`
}

func (*InstructionFilter_InvocationIds) isInstructionFilter_FilterType() {}

type InstructionFilterByInvocationID struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Only test results contained in these invocation IDs will be selected.
	InvocationIds []string `protobuf:"bytes,1,rep,name=invocation_ids,json=invocationIds,proto3" json:"invocation_ids,omitempty"`
	// Whether the check is recursive (i.e. whether it applies to test results
	// in included invocation).
	Recursive     bool `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstructionFilterByInvocationID) Reset() {
	*x = InstructionFilterByInvocationID{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstructionFilterByInvocationID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionFilterByInvocationID) ProtoMessage() {}

func (x *InstructionFilterByInvocationID) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionFilterByInvocationID.ProtoReflect.Descriptor instead.
func (*InstructionFilterByInvocationID) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{3}
}

func (x *InstructionFilterByInvocationID) GetInvocationIds() []string {
	if x != nil {
		return x.InvocationIds
	}
	return nil
}

func (x *InstructionFilterByInvocationID) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

// Instruction for specific targets.
// Instruction for different targets may have the same or different dependency
// and content.
type TargetedInstruction struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The targets that this instruction is for, like "LOCAL", "REMOTE" or "PREBUILT".
	// A targeted instruction can only depend on another instruction with the same target.
	// For example, a "LOCAL" instruction can only depend on another "LOCAL" instruction.
	Targets []InstructionTarget `protobuf:"varint,1,rep,packed,name=targets,proto3,enum=luci.resultdb.v1.InstructionTarget" json:"targets,omitempty"`
	// Another instruction that this instruction depends on.
	// At the moment, one instruction can have at most 1 dependency.
	// Make this repeated for forward compatibility.
	Dependencies []*InstructionDependency `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	// The content of the instruction, in markdown format.
	// Placeholders may be used and will be populated with real
	// information when displayed in the UI.
	// This will be limit to 10KB. If the content is longer than 10KB,
	// an error will be returned.
	// See go/luci-failure-reproduction-instructions-dd for details.
	Content       string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TargetedInstruction) Reset() {
	*x = TargetedInstruction{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TargetedInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetedInstruction) ProtoMessage() {}

func (x *TargetedInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetedInstruction.ProtoReflect.Descriptor instead.
func (*TargetedInstruction) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{4}
}

func (x *TargetedInstruction) GetTargets() []InstructionTarget {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *TargetedInstruction) GetDependencies() []*InstructionDependency {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *TargetedInstruction) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Specifies a dependency for instruction.
// An instruction being depended on needs to be step instruction, not test result instruction.
// If the dependency cannot be found, or the user does not have the ACL,
// the dependency chain will stop and Milo will not display the dependency.
// If a dependency cycle is detected, we will stop showing dependency once we detected the cycle.
type InstructionDependency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The invocation ID of the instruction being depended on.
	// Limit: 100 bytes
	InvocationId string `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// The instruction ID of the instruction being depended on.
	// (invocation_id, instruction_id) uniquely identify an invocation.
	InstructionId string `protobuf:"bytes,2,opt,name=instruction_id,json=instructionId,proto3" json:"instruction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstructionDependency) Reset() {
	*x = InstructionDependency{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstructionDependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstructionDependency) ProtoMessage() {}

func (x *InstructionDependency) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstructionDependency.ProtoReflect.Descriptor instead.
func (*InstructionDependency) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP(), []int{5}
}

func (x *InstructionDependency) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *InstructionDependency) GetInstructionId() string {
	if x != nil {
		return x.InstructionId
	}
	return ""
}

var File_go_chromium_org_luci_resultdb_proto_v1_instruction_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDesc = string([]byte{
	0x0a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x22, 0x51, 0x0a, 0x0c,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xc3, 0x02, 0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x35, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x52, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x11, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0e, 0x69, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x66, 0x0a, 0x1f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x49, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69, 0x76, 0x65, 0x22, 0xbb, 0x01,
	0x0a, 0x13, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x63, 0x0a, 0x15, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x2a, 0x5c, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x1e, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x52, 0x45, 0x42, 0x55, 0x49, 0x4c, 0x54, 0x10, 0x03, 0x2a, 0x66,
	0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x1c, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x45, 0x50, 0x5f, 0x49, 0x4e, 0x53, 0x54,
	0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x45, 0x53,
	0x54, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x42, 0x50, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_goTypes = []any{
	(InstructionTarget)(0),                  // 0: luci.resultdb.v1.InstructionTarget
	(InstructionType)(0),                    // 1: luci.resultdb.v1.InstructionType
	(*Instructions)(nil),                    // 2: luci.resultdb.v1.Instructions
	(*Instruction)(nil),                     // 3: luci.resultdb.v1.Instruction
	(*InstructionFilter)(nil),               // 4: luci.resultdb.v1.InstructionFilter
	(*InstructionFilterByInvocationID)(nil), // 5: luci.resultdb.v1.InstructionFilterByInvocationID
	(*TargetedInstruction)(nil),             // 6: luci.resultdb.v1.TargetedInstruction
	(*InstructionDependency)(nil),           // 7: luci.resultdb.v1.InstructionDependency
}
var file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_depIdxs = []int32{
	3, // 0: luci.resultdb.v1.Instructions.instructions:type_name -> luci.resultdb.v1.Instruction
	1, // 1: luci.resultdb.v1.Instruction.type:type_name -> luci.resultdb.v1.InstructionType
	6, // 2: luci.resultdb.v1.Instruction.targeted_instructions:type_name -> luci.resultdb.v1.TargetedInstruction
	4, // 3: luci.resultdb.v1.Instruction.instruction_filter:type_name -> luci.resultdb.v1.InstructionFilter
	5, // 4: luci.resultdb.v1.InstructionFilter.invocation_ids:type_name -> luci.resultdb.v1.InstructionFilterByInvocationID
	0, // 5: luci.resultdb.v1.TargetedInstruction.targets:type_name -> luci.resultdb.v1.InstructionTarget
	7, // 6: luci.resultdb.v1.TargetedInstruction.dependencies:type_name -> luci.resultdb.v1.InstructionDependency
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_instruction_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes[2].OneofWrappers = []any{
		(*InstructionFilter_InvocationIds)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_instruction_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_depIdxs = nil
}
