// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.32.0
// source: go.chromium.org/luci/resultdb/proto/v1/skipped_reason.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Provides structured explanation for why a test was skipped.
// It must be populated when the status is SKIP.
// Open to extension.
type SkippedReason_Kind int32

const (
	// Skipped reason was not specified. Do not use this value.
	SkippedReason_KIND_UNSPECIFIED SkippedReason_Kind = 0
	// Skipped by an annotation at the test declaration site.
	//
	// This includes:
	//   - JUnit4 @Ignore,
	//   - JUnit5 @Disabled, @DisabledIf/For/On... @EnabledIf/For/On...
	//     annotations.
	//   - GoogleTest DISABLED_ text prefix.
	//   - Tast test skips from the declared software or hardware
	//     dependencies being unsatisfied at runtime.
	//
	// and similar statically defined annotations at the test
	// declaration site.
	SkippedReason_DISABLED_AT_DECLARATION SkippedReason_Kind = 1
	// Test body began to run but determined the test should
	// not finish. For example, the test did not detect a valid
	// environment meeting the test assumptions.
	//
	// This covers:
	//   - a JUnit4 or JUnit5 assumption failure in the body of a test,
	//     from Assume.assumeThat(...) and similar methods.
	//   - Use of the GTEST_SKIP() macro within the body of a test.
	//   - Golang's t.Skip(...) in the body of a test.
	SkippedReason_SKIPPED_BY_TEST_BODY SkippedReason_Kind = 2
	// Used to indicate the test was skipped due to presubmit demotion
	// (e.g. because the test was too flaky).
	//
	// You must specify a human-readable detail message if you use this status.
	// Please explain the criteria that was met and how the user should get the
	// test undemoted or reference a link that explains more.
	SkippedReason_DEMOTED SkippedReason_Kind = 3
	// The test was skipped by some other reason.
	//
	// This includes:
	// - Blink web tests disabled in an expectation file.
	//
	// You must specify a human-readable detail message if you use this status.
	SkippedReason_OTHER SkippedReason_Kind = 4
)

// Enum value maps for SkippedReason_Kind.
var (
	SkippedReason_Kind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "DISABLED_AT_DECLARATION",
		2: "SKIPPED_BY_TEST_BODY",
		3: "DEMOTED",
		4: "OTHER",
	}
	SkippedReason_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED":        0,
		"DISABLED_AT_DECLARATION": 1,
		"SKIPPED_BY_TEST_BODY":    2,
		"DEMOTED":                 3,
		"OTHER":                   4,
	}
)

func (x SkippedReason_Kind) Enum() *SkippedReason_Kind {
	p := new(SkippedReason_Kind)
	*p = x
	return p
}

func (x SkippedReason_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkippedReason_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_enumTypes[0].Descriptor()
}

func (SkippedReason_Kind) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_enumTypes[0]
}

func (x SkippedReason_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkippedReason_Kind.Descriptor instead.
func (SkippedReason_Kind) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescGZIP(), []int{0, 0}
}

// SkippedReason helps a developer answer the questions:
// - Why was this test skipped?
// - How do I stop it being skipped?
type SkippedReason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind SkippedReason_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=luci.resultdb.v1.SkippedReason_Kind" json:"kind,omitempty"`
	// A human-readable message providing more context or details about why the
	// test was skipped. Limited to 1024 bytes of printable UTF-8.
	//
	// Required for skip kinds DEMOTED and OTHER, optional otherwise.
	//
	// For DISABLED_AT_DECLARATION, useful information would be:
	//   - For Tast, the Tast-provided skip reason (detailing the declared
	//     hardware/software dependencies that were unmet).
	//
	// For SKIPPED_BY_TEST_BODY, useful information would be:
	//   - For JUnit, the JUnit assumption failure that led to the skip.
	//   - For GoogleTest, the file and line where the GTEST_SKIP() macro was
	//     invoked and the message passed to it.
	//
	// For DEMOTED and OTHER, the criteria that led to the skip
	// and how the user might get the test running again.
	ReasonMessage string `protobuf:"bytes,2,opt,name=reason_message,json=reasonMessage,proto3" json:"reason_message,omitempty"`
}

func (x *SkippedReason) Reset() {
	*x = SkippedReason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkippedReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkippedReason) ProtoMessage() {}

func (x *SkippedReason) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkippedReason.ProtoReflect.Descriptor instead.
func (*SkippedReason) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescGZIP(), []int{0}
}

func (x *SkippedReason) GetKind() SkippedReason_Kind {
	if x != nil {
		return x.Kind
	}
	return SkippedReason_KIND_UNSPECIFIED
}

func (x *SkippedReason) GetReasonMessage() string {
	if x != nil {
		return x.ReasonMessage
	}
	return ""
}

var File_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x22,
	0xdd, 0x01, 0x0a, 0x0d, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x6b, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x49,
	0x4e, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f, 0x41, 0x54, 0x5f,
	0x44, 0x45, 0x43, 0x4c, 0x41, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a,
	0x14, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x54, 0x45, 0x53, 0x54,
	0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x4d, 0x4f, 0x54,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x04, 0x42,
	0x50, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x50, 0x01,
	0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescData = file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDesc
)

func file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescData)
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_goTypes = []interface{}{
	(SkippedReason_Kind)(0), // 0: luci.resultdb.v1.SkippedReason.Kind
	(*SkippedReason)(nil),   // 1: luci.resultdb.v1.SkippedReason
}
var file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_depIdxs = []int32{
	0, // 0: luci.resultdb.v1.SkippedReason.kind:type_name -> luci.resultdb.v1.SkippedReason.Kind
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkippedReason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_rawDesc = nil
	file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_skipped_reason_proto_depIdxs = nil
}
