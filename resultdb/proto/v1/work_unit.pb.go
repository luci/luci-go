// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.31.1
// source: go.chromium.org/luci/resultdb/proto/v1/work_unit.proto

package resultpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkUnit_State int32

const (
	// The default value. This value is used if the state is omitted.
	WorkUnit_STATE_UNSPECIFIED WorkUnit_State = 0
	// The work unit is mutable.
	WorkUnit_ACTIVE WorkUnit_State = 1
	// The work unit is in the process of moving to the FINALIZED state.
	// This will happen automatically soon after all of its directly or
	// indirectly included work units become inactive.
	//
	// In this state, the work unit itself is immutable, but its
	// contained work units may still be mutable. When the work unit
	// is immutable, the work unit record may not be updated, and
	// no test results, exonerations or artifacts be created
	// inside it.
	WorkUnit_FINALIZING WorkUnit_State = 2
	// The work unit is immutable and no longer accepts new results
	// directly or indirectly.
	WorkUnit_FINALIZED WorkUnit_State = 3
)

// Enum value maps for WorkUnit_State.
var (
	WorkUnit_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "ACTIVE",
		2: "FINALIZING",
		3: "FINALIZED",
	}
	WorkUnit_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"ACTIVE":            1,
		"FINALIZING":        2,
		"FINALIZED":         3,
	}
)

func (x WorkUnit_State) Enum() *WorkUnit_State {
	p := new(WorkUnit_State)
	*p = x
	return p
}

func (x WorkUnit_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WorkUnit_State) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_enumTypes[0].Descriptor()
}

func (WorkUnit_State) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_enumTypes[0]
}

func (x WorkUnit_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WorkUnit_State.Descriptor instead.
func (WorkUnit_State) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescGZIP(), []int{0, 0}
}

// A process step that contributes results to a root invocation.
// Work units contain test results, artifacts and exonerations. Work units may
// also contain other work units and (legacy) invocations.
type WorkUnit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of this work unit.
	// Format: `rootInvocations/{ROOT_INVOCATION_ID}/workUnits/{WORK_UNIT_ID}`
	// See also https://aip.dev/122.
	//
	// Output only.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The work unit identifier. This identifier is unique within
	// an enclosing root invocation, but not necessarily globally unique.
	//
	// Output only.
	WorkUnitId string `protobuf:"bytes,2,opt,name=work_unit_id,json=workUnitId,proto3" json:"work_unit_id,omitempty"`
	// Current state of the work unit.
	//
	// At creation time, this can be set to ACTIVE or FINALIZING (if all fields
	// are known at creation time). When updating or via the FinalizeWorkUnit
	// RPC, the state can also be updated from ACTIVE to FINALIZING.
	//
	// In all other cases, this field should be treated as output only. ResultDB
	// will automatically transition the work unit to FINALIZING when the provided
	// `deadline` expires (if the work unit is not already in FINALIZING state).
	// FINALIZING work units will transition onward to FINALIZED when all included
	// work units are FINALIZED.
	State WorkUnit_State `protobuf:"varint,3,opt,name=state,proto3,enum=luci.resultdb.v1.WorkUnit_State" json:"state,omitempty"`
	// The realm of the work unit. This controls the ACLs that apply to the
	// work unit and its contents.
	//
	// For example, 'chromium:try'.
	//
	// See go/luci-authorization for more information.
	Realm string `protobuf:"bytes,4,opt,name=realm,proto3" json:"realm,omitempty"`
	// When the work unit was created.
	// Output only.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// LUCI identity (e.g. "user:<email>") who created the work unit.
	// Typically, a LUCI service account (e.g.
	// "user:cr-buildbucket@appspot.gserviceaccount.com"), but can also be a user
	// (e.g. "user:johndoe@example.com").
	//
	// Output only.
	Creator string `protobuf:"bytes,6,opt,name=creator,proto3" json:"creator,omitempty"`
	// When the work unit started to finalize, i.e. transitioned to FINALIZING
	// state. This means the work unit is immutable but directly or indirectly
	// included work units may not be.
	//
	// Output only.
	FinalizeStartTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=finalize_start_time,json=finalizeStartTime,proto3" json:"finalize_start_time,omitempty"`
	// When the work unit was finalized, i.e. transitioned to FINALIZED state.
	// If this field is set, implies that the work units is finalized. This
	// means the work units and directly or indirectly included work units
	// are immutable.
	//
	// Output only.
	FinalizeTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=finalize_time,json=finalizeTime,proto3" json:"finalize_time,omitempty"`
	// Timestamp when the work unit will be forcefully finalized.
	// Can be extended with UpdateWorkUnit until finalized.
	Deadline *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deadline,proto3" json:"deadline,omitempty"`
	// The parent resource of this work unit. This is typically
	// another work unit, except for the root work unit, for which
	// it is the root invocation.
	Parent string `protobuf:"bytes,10,opt,name=parent,proto3" json:"parent,omitempty"`
	// Resource names of child work units.
	//
	// This field only covers children; to find grandchildren, great
	// grandchildren, etc. traverse recursively.
	//
	// To create a new child work unit, use Recorder.CreateWorkUnit
	// and specify this work unit as the parent.
	//
	// Output only (append via (Batch)CreateWorkUnit(s)).
	ChildWorkUnits []string `protobuf:"bytes,11,rep,name=child_work_units,json=childWorkUnits,proto3" json:"child_work_units,omitempty"`
	// Resource names of child (legacy) invocations.
	//
	// This field only covers children; to find grandchildren, great
	// grandchildren, etc. traverse recursively.
	//
	// Output only (append via UpdateIncludedInvocations).
	ChildInvocations []string `protobuf:"bytes,12,rep,name=child_invocations,json=childInvocations,proto3" json:"child_invocations,omitempty"`
	// The module this work unit is reporting results for.
	//
	// This must be set before any test results or test result artifacts can be
	// uploaded to this work unit. Test results and test result artifacts uploaded
	// to this work unit will need to match this module. Work unit-level artifacts
	// (not associated with a test result) are exempt, as are test results and
	// artifacts for test results using legacy (non-structured) test IDs.
	//
	// If results from multiple modules need to be reported, create a child
	// work unit for each module. This field may be left unset if this work unit
	// only has child work units and will not be uploading test results itself.
	//
	// Once this field is set to a non-empty value, it becomes invariant and may
	// not be changed.
	ModuleId *ModuleIdentifier `protobuf:"bytes,19,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// Full name of the resource that produced results in this work unit.
	// See also https://aip.dev/122#full-resource-names
	// Typical examples:
	// - Swarming task: "//chromium-swarm.appspot.com/tasks/deadbeef"
	// - Buildbucket build: "//cr-buildbucket.appspot.com/builds/1234567890".
	//
	// Setting this field requires resultdb.workUnits.setProducerResource permission.
	ProducerResource string `protobuf:"bytes,13,opt,name=producer_resource,json=producerResource,proto3" json:"producer_resource,omitempty"`
	// Work unit-level string key-value pairs.
	// A key can be repeated.
	//
	// Total size (as measured by proto.Size()) must be <= 16 KB.
	Tags []*StringPair `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty"`
	// Arbitrary JSON object that contains structured, domain-specific properties
	// of the work unit.
	//
	// The value must contain a field "@type" which is a URL/resource name that
	// uniquely identifies the type of the source protocol buffer message that
	// defines the schema of these properties. This string must contain at least
	// one "/" character. The last segment of the URL's path must represent the
	// fully qualified name of the type (e.g. foo.com/x/some.package.MyMessage).
	// See google.protobuf.Any for more information.
	//
	// N.B. We do not use google.protobuf.Any here to remove a requirement for
	// ResultDB to know the schema of customer-defined protos. We do however use
	// a format equivalent to google.protobuf.Any's JSON representation.
	//
	// The serialized size must be <= 16 KB.
	Properties *structpb.Struct `protobuf:"bytes,15,opt,name=properties,proto3" json:"properties,omitempty"`
	// Additional JSON object(s) that contain additional structured data about the
	// work unit. Unlike `properties` this field is not included (denormalized)
	// in the test results export, it is only available in the finalized
	// work units BigQuery export.
	//
	// All google.protobuf.Struct values must contain a field '@type' which is
	// a URL/resource name that uniquely identifies the type of the source
	// protocol buffer message. This string must contain at least
	// one "/" character. The last segment of the URL's path must represent the
	// fully qualified name of the type (e.g. foo.com/x/some.package.MyMessage)
	//
	// ResultDB will not validate the contents with respect to this schema, but
	// downstream systems may depend on the '@type' field to inform how the
	// contents are interpreted.
	//
	// Each key is limited to 63 characters matching
	// ^[a-z]([a-z0-9_]{0,61}[a-z0-9])?$.
	// The size of each value is limited to <= 512 KB.
	// The total size of the map (as measured by proto.Size())
	// is limited to <= 2 MB.
	//
	// The following paths can be used for field masks:
	// * "extended_properties" to target the whole extended_properties,
	// * "extended_properties.some_key" to target one key of extended_properties.
	ExtendedProperties map[string]*structpb.Struct `protobuf:"bytes,16,rep,name=extended_properties,json=extendedProperties,proto3" json:"extended_properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Reproduction instructions for steps and test results represented by
	// this work unit. It may also contain instructions for test results in
	// included work units.
	Instructions *Instructions `protobuf:"bytes,17,opt,name=instructions,proto3" json:"instructions,omitempty"`
	// Whether the work unit has been masked so that it includes only metadata.
	// The metadata fields for a WorkUnit are:
	// * name
	// * work_unit_id
	// * state
	// * realm
	// * create_time
	// * creator
	// * finalize_start_time
	// * finalize_time
	// * deadline
	// * module_id (all fields except `module_variant`)
	// * parent
	// * child_work_units
	// * child_invocations
	// * producer_resource
	//
	// Output only.
	IsMasked      bool `protobuf:"varint,18,opt,name=is_masked,json=isMasked,proto3" json:"is_masked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkUnit) Reset() {
	*x = WorkUnit{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkUnit) ProtoMessage() {}

func (x *WorkUnit) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkUnit.ProtoReflect.Descriptor instead.
func (*WorkUnit) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescGZIP(), []int{0}
}

func (x *WorkUnit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkUnit) GetWorkUnitId() string {
	if x != nil {
		return x.WorkUnitId
	}
	return ""
}

func (x *WorkUnit) GetState() WorkUnit_State {
	if x != nil {
		return x.State
	}
	return WorkUnit_STATE_UNSPECIFIED
}

func (x *WorkUnit) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *WorkUnit) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *WorkUnit) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *WorkUnit) GetFinalizeStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinalizeStartTime
	}
	return nil
}

func (x *WorkUnit) GetFinalizeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinalizeTime
	}
	return nil
}

func (x *WorkUnit) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *WorkUnit) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *WorkUnit) GetChildWorkUnits() []string {
	if x != nil {
		return x.ChildWorkUnits
	}
	return nil
}

func (x *WorkUnit) GetChildInvocations() []string {
	if x != nil {
		return x.ChildInvocations
	}
	return nil
}

func (x *WorkUnit) GetModuleId() *ModuleIdentifier {
	if x != nil {
		return x.ModuleId
	}
	return nil
}

func (x *WorkUnit) GetProducerResource() string {
	if x != nil {
		return x.ProducerResource
	}
	return ""
}

func (x *WorkUnit) GetTags() []*StringPair {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *WorkUnit) GetProperties() *structpb.Struct {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *WorkUnit) GetExtendedProperties() map[string]*structpb.Struct {
	if x != nil {
		return x.ExtendedProperties
	}
	return nil
}

func (x *WorkUnit) GetInstructions() *Instructions {
	if x != nil {
		return x.Instructions
	}
	return nil
}

func (x *WorkUnit) GetIsMasked() bool {
	if x != nil {
		return x.IsMasked
	}
	return false
}

var File_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDesc = string([]byte{
	0x0a, 0x36, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x6e,
	0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x09, 0x0a, 0x08, 0x57, 0x6f,
	0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x05,
	0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x05, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x05, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x05,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x13, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x11, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe0, 0x41, 0x03, 0xe0, 0x41, 0x05,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x57, 0x6f,
	0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x11, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x49, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x63, 0x0a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x12, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x61, 0x73, 0x6b, 0x65, 0x64, 0x1a, 0x5e, 0x0a,
	0x17, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x4e,
	0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4e,
	0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x42, 0x50, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x3b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_goTypes = []any{
	(WorkUnit_State)(0),           // 0: luci.resultdb.v1.WorkUnit.State
	(*WorkUnit)(nil),              // 1: luci.resultdb.v1.WorkUnit
	nil,                           // 2: luci.resultdb.v1.WorkUnit.ExtendedPropertiesEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*ModuleIdentifier)(nil),      // 4: luci.resultdb.v1.ModuleIdentifier
	(*StringPair)(nil),            // 5: luci.resultdb.v1.StringPair
	(*structpb.Struct)(nil),       // 6: google.protobuf.Struct
	(*Instructions)(nil),          // 7: luci.resultdb.v1.Instructions
}
var file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_depIdxs = []int32{
	0,  // 0: luci.resultdb.v1.WorkUnit.state:type_name -> luci.resultdb.v1.WorkUnit.State
	3,  // 1: luci.resultdb.v1.WorkUnit.create_time:type_name -> google.protobuf.Timestamp
	3,  // 2: luci.resultdb.v1.WorkUnit.finalize_start_time:type_name -> google.protobuf.Timestamp
	3,  // 3: luci.resultdb.v1.WorkUnit.finalize_time:type_name -> google.protobuf.Timestamp
	3,  // 4: luci.resultdb.v1.WorkUnit.deadline:type_name -> google.protobuf.Timestamp
	4,  // 5: luci.resultdb.v1.WorkUnit.module_id:type_name -> luci.resultdb.v1.ModuleIdentifier
	5,  // 6: luci.resultdb.v1.WorkUnit.tags:type_name -> luci.resultdb.v1.StringPair
	6,  // 7: luci.resultdb.v1.WorkUnit.properties:type_name -> google.protobuf.Struct
	2,  // 8: luci.resultdb.v1.WorkUnit.extended_properties:type_name -> luci.resultdb.v1.WorkUnit.ExtendedPropertiesEntry
	7,  // 9: luci.resultdb.v1.WorkUnit.instructions:type_name -> luci.resultdb.v1.Instructions
	6,  // 10: luci.resultdb.v1.WorkUnit.ExtendedPropertiesEntry.value:type_name -> google.protobuf.Struct
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_common_proto_init()
	file_go_chromium_org_luci_resultdb_proto_v1_instruction_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_work_unit_proto_depIdxs = nil
}
