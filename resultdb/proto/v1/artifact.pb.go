// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: go.chromium.org/luci/resultdb/proto/v1/artifact.proto

package resultpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArtifactLine_Severity int32

const (
	ArtifactLine_SEVERITY_UNSPECIFIED ArtifactLine_Severity = 0
	ArtifactLine_VERBOSE              ArtifactLine_Severity = 10
	ArtifactLine_TRACE                ArtifactLine_Severity = 20
	ArtifactLine_DEBUG                ArtifactLine_Severity = 30
	ArtifactLine_INFO                 ArtifactLine_Severity = 40
	ArtifactLine_NOTICE               ArtifactLine_Severity = 50
	ArtifactLine_WARNING              ArtifactLine_Severity = 60
	ArtifactLine_ERROR                ArtifactLine_Severity = 70
	ArtifactLine_CRITICAL             ArtifactLine_Severity = 80
	ArtifactLine_FATAL                ArtifactLine_Severity = 90
)

// Enum value maps for ArtifactLine_Severity.
var (
	ArtifactLine_Severity_name = map[int32]string{
		0:  "SEVERITY_UNSPECIFIED",
		10: "VERBOSE",
		20: "TRACE",
		30: "DEBUG",
		40: "INFO",
		50: "NOTICE",
		60: "WARNING",
		70: "ERROR",
		80: "CRITICAL",
		90: "FATAL",
	}
	ArtifactLine_Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"VERBOSE":              10,
		"TRACE":                20,
		"DEBUG":                30,
		"INFO":                 40,
		"NOTICE":               50,
		"WARNING":              60,
		"ERROR":                70,
		"CRITICAL":             80,
		"FATAL":                90,
	}
)

func (x ArtifactLine_Severity) Enum() *ArtifactLine_Severity {
	p := new(ArtifactLine_Severity)
	*p = x
	return p
}

func (x ArtifactLine_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArtifactLine_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_enumTypes[0].Descriptor()
}

func (ArtifactLine_Severity) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_enumTypes[0]
}

func (x ArtifactLine_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArtifactLine_Severity.Descriptor instead.
func (ArtifactLine_Severity) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescGZIP(), []int{1, 0}
}

// A file produced during a build/test, typically a test artifact.
// The parent resource is either a TestResult or an Invocation.
//
// An invocation-level artifact might be related to tests, or it might not, for
// example it may be used to store build step logs when streaming support is
// added.
// Next id: 16.
type Artifact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Can be used to refer to this artifact.
	// Format:
	//   - For work unit-level artifacts:
	//     "rootInvocations/{ROOT_INVOCATION_ID}/workUnits/{WORK_UNIT_ID}/artifacts/{ARTIFACT_ID}".
	//   - For test result-level artifacts:
	//     "rootInvocations/{ROOT_INVOCATION_ID}/workUnits/{WORK_UNIT_ID}/tests/{URL_ESCAPED_TEST_ID}/results/{RESULT_ID}/artifacts/{ARTIFACT_ID}".
	//
	// where URL_ESCAPED_TEST_ID is the test_id escaped with
	// https://golang.org/pkg/net/url/#PathEscape (see also https://aip.dev/122),
	// and ARTIFACT_ID is documented below.
	// Examples: "screenshot.png", "traces/a.txt".
	//
	// For artifacts in legacy invocations, the following formats are also used:
	//   - For invocation-level artifacts:
	//     "invocations/{INVOCATION_ID}/artifacts/{ARTIFACT_ID}".
	//   - For test-result-level artifacts:
	//     "invocations/{INVOCATION_ID}/tests/{URL_ESCAPED_TEST_ID}/results/{RESULT_ID}/artifacts/{ARTIFACT_ID}".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The structured test identifier. Uniquely identifies the test that was run.
	//
	// This field is only populated for test-result-level artifacts.
	//
	// MUST NOT set for legacy uploader where test id should be specified in the parent.
	TestIdStructured *TestIdentifier `protobuf:"bytes,12,opt,name=test_id_structured,json=testIdStructured,proto3" json:"test_id_structured,omitempty"`
	// A unique identifier of the test in a LUCI project, excluding variant.
	// Regex: ^[[::print::]]{1,512}$
	//
	// This is the flat-form encoding of the test_id_structured above,
	// only populated for test-result-level artifacts.
	// See TestIdentifier for details how a structured test identifier is converted
	// to flat test ID.
	//
	// Output only.
	TestId string `protobuf:"bytes,13,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// This field is only populated for test-result-level artifacts.
	// MUST set if test_id_structured is set.
	// MUST NOT set if test_id_structured is unset.
	ResultId string `protobuf:"bytes,14,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`
	// A local identifier of the artifact, unique within the parent resource.
	// MAY have slashes, but MUST NOT start with a slash.
	// SHOULD not use backslashes.
	// Regex: ^(?:[[:word:]]|\.)([\p{L}\p{M}\p{N}\p{P}\p{S}\p{Zs}]{0,254}[[:word:]])?$
	ArtifactId string `protobuf:"bytes,2,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// A signed short-lived URL to fetch the contents of the artifact.
	// See also fetch_url_expiration.
	//
	// While the fetch_url will be returned by default, in some cases it may introduce significantly
	// higher latency and potentially trigger errors if quota limits are exceeded.
	// Thus please mask fetch_url unless you are actually going to use it.
	FetchUrl string `protobuf:"bytes,3,opt,name=fetch_url,json=fetchUrl,proto3" json:"fetch_url,omitempty"`
	// When fetch_url expires. If expired, re-request this Artifact.
	FetchUrlExpiration *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=fetch_url_expiration,json=fetchUrlExpiration,proto3" json:"fetch_url_expiration,omitempty"`
	// Media type of the artifact.
	// Logs are typically "text/plain" and screenshots are typically "image/png".
	// Optional.
	ContentType string `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// Size of the file.
	// Can be used in UI to decide between displaying the artifact inline or only
	// showing a link if it is too large.
	//
	// If you are using the gcs_uri, the uploaded value is not verified, only
	// treated as a hint.
	//
	// Optional.
	SizeBytes int64 `protobuf:"varint,6,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// Contents of the artifact.
	// This is INPUT_ONLY, and taken by BatchCreateArtifacts().
	// All getter RPCs, such as ListArtifacts(), do not populate values into
	// the field in the response.
	// If specified, `gcs_uri` must be empty.
	Contents []byte `protobuf:"bytes,7,opt,name=contents,proto3" json:"contents,omitempty"`
	// The GCS URI of the artifact if it's stored in GCS. If specified, `contents`
	// and `rbe_uri` must be empty.
	GcsUri string `protobuf:"bytes,8,opt,name=gcs_uri,json=gcsUri,proto3" json:"gcs_uri,omitempty"`
	// Status of the test result that the artifact belongs to.
	// This is only applicable for test-level artifacts, not invocation-level artifacts.
	// Deprecated: This field is ignored by ResultDB and not set.
	//
	// Deprecated: Marked as deprecated in go.chromium.org/luci/resultdb/proto/v1/artifact.proto.
	TestStatus TestStatus `protobuf:"varint,9,opt,name=test_status,json=testStatus,proto3,enum=luci.resultdb.v1.TestStatus" json:"test_status,omitempty"`
	// Indicates whether ListArtifactLines RPC can be used with this artifact.
	//
	// Output only.
	HasLines bool `protobuf:"varint,11,opt,name=has_lines,json=hasLines,proto3" json:"has_lines,omitempty"`
	// The RBE URI of the artifact if it's stored in RBE. If specified, `contents`
	// and `gcs_uri` must be empty.
	// Format: "bytestream://<HOSTNAME>/projects/<PROJECT_ID>/instances/<INSTANCE_ID>/blobs/<HASH>/<SIZE_BYTES>"
	// Example: "bytestream://remotebuildexecution.googleapis.com/projects/luci-resultdb-dev/instances/artifacts/blobs/abcd1234/509"
	RbeUri        string `protobuf:"bytes,15,opt,name=rbe_uri,json=rbeUri,proto3" json:"rbe_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescGZIP(), []int{0}
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetTestIdStructured() *TestIdentifier {
	if x != nil {
		return x.TestIdStructured
	}
	return nil
}

func (x *Artifact) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *Artifact) GetResultId() string {
	if x != nil {
		return x.ResultId
	}
	return ""
}

func (x *Artifact) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *Artifact) GetFetchUrl() string {
	if x != nil {
		return x.FetchUrl
	}
	return ""
}

func (x *Artifact) GetFetchUrlExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.FetchUrlExpiration
	}
	return nil
}

func (x *Artifact) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Artifact) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *Artifact) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *Artifact) GetGcsUri() string {
	if x != nil {
		return x.GcsUri
	}
	return ""
}

// Deprecated: Marked as deprecated in go.chromium.org/luci/resultdb/proto/v1/artifact.proto.
func (x *Artifact) GetTestStatus() TestStatus {
	if x != nil {
		return x.TestStatus
	}
	return TestStatus_STATUS_UNSPECIFIED
}

func (x *Artifact) GetHasLines() bool {
	if x != nil {
		return x.HasLines
	}
	return false
}

func (x *Artifact) GetRbeUri() string {
	if x != nil {
		return x.RbeUri
	}
	return ""
}

type ArtifactLine struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The position of this line in the artifact.
	// The numbers start from 1.
	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// The extracted timestamp of the log line. Extraction is best effort only.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The extracted severity of the line. Extraction is best effort only.
	Severity ArtifactLine_Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=luci.resultdb.v1.ArtifactLine_Severity" json:"severity,omitempty"`
	// The content of the line as it is found in the log file.
	// Lines are split on the \n character and the character is included in the line content that immediately precedes it.
	// Empty lines will be included in the response.
	Content       []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactLine) Reset() {
	*x = ArtifactLine{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactLine) ProtoMessage() {}

func (x *ArtifactLine) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactLine.ProtoReflect.Descriptor instead.
func (*ArtifactLine) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescGZIP(), []int{1}
}

func (x *ArtifactLine) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ArtifactLine) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ArtifactLine) GetSeverity() ArtifactLine_Severity {
	if x != nil {
		return x.Severity
	}
	return ArtifactLine_SEVERITY_UNSPECIFIED
}

func (x *ArtifactLine) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_go_chromium_org_luci_resultdb_proto_v1_artifact_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDesc = "" +
	"\n" +
	"5go.chromium.org/luci/resultdb/proto/v1/artifact.proto\x12\x10luci.resultdb.v1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a8go.chromium.org/luci/resultdb/proto/v1/test_result.proto\x1a3go.chromium.org/luci/resultdb/proto/v1/common.proto\"\xce\x04\n" +
	"\bArtifact\x12\x1a\n" +
	"\x04name\x18\x01 \x01(\tB\x06\xe0A\x03\xe0A\x05R\x04name\x12S\n" +
	"\x12test_id_structured\x18\f \x01(\v2 .luci.resultdb.v1.TestIdentifierB\x03\xe0A\x05R\x10testIdStructured\x12\x1f\n" +
	"\atest_id\x18\r \x01(\tB\x06\xe0A\x03\xe0A\x05R\x06testId\x12 \n" +
	"\tresult_id\x18\x0e \x01(\tB\x03\xe0A\x05R\bresultId\x12\x1f\n" +
	"\vartifact_id\x18\x02 \x01(\tR\n" +
	"artifactId\x12 \n" +
	"\tfetch_url\x18\x03 \x01(\tB\x03\xe0A\x03R\bfetchUrl\x12Q\n" +
	"\x14fetch_url_expiration\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x03\xe0A\x03R\x12fetchUrlExpiration\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x06 \x01(\x03R\tsizeBytes\x12\x1f\n" +
	"\bcontents\x18\a \x01(\fB\x03\xe0A\x04R\bcontents\x12\x17\n" +
	"\agcs_uri\x18\b \x01(\tR\x06gcsUri\x12A\n" +
	"\vtest_status\x18\t \x01(\x0e2\x1c.luci.resultdb.v1.TestStatusB\x02\x18\x01R\n" +
	"testStatus\x12 \n" +
	"\thas_lines\x18\v \x01(\bB\x03\xe0A\x03R\bhasLines\x12\x17\n" +
	"\arbe_uri\x18\x0f \x01(\tR\x06rbeUri\"\xd0\x02\n" +
	"\fArtifactLine\x12\x16\n" +
	"\x06number\x18\x01 \x01(\x03R\x06number\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12C\n" +
	"\bseverity\x18\x03 \x01(\x0e2'.luci.resultdb.v1.ArtifactLine.SeverityR\bseverity\x12\x18\n" +
	"\acontent\x18\x04 \x01(\fR\acontent\"\x8e\x01\n" +
	"\bSeverity\x12\x18\n" +
	"\x14SEVERITY_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aVERBOSE\x10\n" +
	"\x12\t\n" +
	"\x05TRACE\x10\x14\x12\t\n" +
	"\x05DEBUG\x10\x1e\x12\b\n" +
	"\x04INFO\x10(\x12\n" +
	"\n" +
	"\x06NOTICE\x102\x12\v\n" +
	"\aWARNING\x10<\x12\t\n" +
	"\x05ERROR\x10F\x12\f\n" +
	"\bCRITICAL\x10P\x12\t\n" +
	"\x05FATAL\x10ZBP\n" +
	"\x1bcom.google.luci.resultdb.v1P\x01Z/go.chromium.org/luci/resultdb/proto/v1;resultpbb\x06proto3"

var (
	file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_goTypes = []any{
	(ArtifactLine_Severity)(0),    // 0: luci.resultdb.v1.ArtifactLine.Severity
	(*Artifact)(nil),              // 1: luci.resultdb.v1.Artifact
	(*ArtifactLine)(nil),          // 2: luci.resultdb.v1.ArtifactLine
	(*TestIdentifier)(nil),        // 3: luci.resultdb.v1.TestIdentifier
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(TestStatus)(0),               // 5: luci.resultdb.v1.TestStatus
}
var file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_depIdxs = []int32{
	3, // 0: luci.resultdb.v1.Artifact.test_id_structured:type_name -> luci.resultdb.v1.TestIdentifier
	4, // 1: luci.resultdb.v1.Artifact.fetch_url_expiration:type_name -> google.protobuf.Timestamp
	5, // 2: luci.resultdb.v1.Artifact.test_status:type_name -> luci.resultdb.v1.TestStatus
	4, // 3: luci.resultdb.v1.ArtifactLine.timestamp:type_name -> google.protobuf.Timestamp
	0, // 4: luci.resultdb.v1.ArtifactLine.severity:type_name -> luci.resultdb.v1.ArtifactLine.Severity
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_artifact_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_test_result_proto_init()
	file_go_chromium_org_luci_resultdb_proto_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_artifact_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_artifact_proto_depIdxs = nil
}
