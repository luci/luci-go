// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: go.chromium.org/luci/resultdb/proto/v1/test_aggregation.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestAggregation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The test identifier prefix represented by the test aggregate.
	Id *TestIdentifierPrefix `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The next (finer) aggregation level to use if drilling into this aggregate,
	// based on the currently defined scheme information.
	// Some schemes do not use one or both intermediate hierarchy levels, this
	// makes it easy to skip them.
	// If unset, no finer aggregation is available and the next finer level
	// is test verdicts.
	NextFinerLevel AggregationLevel `protobuf:"varint,2,opt,name=next_finer_level,json=nextFinerLevel,proto3,enum=luci.resultdb.v1.AggregationLevel" json:"next_finer_level,omitempty"`
	// The counts of test verdict statuses rolling up to this aggregation.
	VerdictCounts *TestAggregation_VerdictCounts `protobuf:"bytes,3,opt,name=verdict_counts,json=verdictCounts,proto3" json:"verdict_counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAggregation) Reset() {
	*x = TestAggregation{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAggregation) ProtoMessage() {}

func (x *TestAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAggregation.ProtoReflect.Descriptor instead.
func (*TestAggregation) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescGZIP(), []int{0}
}

func (x *TestAggregation) GetId() *TestIdentifierPrefix {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TestAggregation) GetNextFinerLevel() AggregationLevel {
	if x != nil {
		return x.NextFinerLevel
	}
	return AggregationLevel_AGGREGATION_LEVEL_UNSPECIFIED
}

func (x *TestAggregation) GetVerdictCounts() *TestAggregation_VerdictCounts {
	if x != nil {
		return x.VerdictCounts
	}
	return nil
}

// Counts of verdicts, by status v2.
type TestAggregation_VerdictCounts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of failed verdicts.
	// Count includes both exonerated and non-exonerated verdicts.
	Failed int32 `protobuf:"varint,1,opt,name=failed,proto3" json:"failed,omitempty"`
	// The number of flaky verdicts.
	Flaky int32 `protobuf:"varint,2,opt,name=flaky,proto3" json:"flaky,omitempty"`
	// The number of passed verdicts.
	Passed int32 `protobuf:"varint,3,opt,name=passed,proto3" json:"passed,omitempty"`
	// The number of skipped verdicts.
	Skipped int32 `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// The number of execution errored verdicts.
	// Count includes both exonerated and non-exonerated verdicts.
	ExecutionErrored int32 `protobuf:"varint,5,opt,name=execution_errored,json=executionErrored,proto3" json:"execution_errored,omitempty"`
	// The number of precluded verdicts.
	// Count includes both exonerated and non-exonerated verdicts.
	Precluded int32 `protobuf:"varint,6,opt,name=precluded,proto3" json:"precluded,omitempty"`
	// The number of failed verdicts with exonerations.
	FailedExonerated int32 `protobuf:"varint,7,opt,name=failed_exonerated,json=failedExonerated,proto3" json:"failed_exonerated,omitempty"`
	// The number of execution errored verdicts with exonerations.
	ExecutionErroredExonerated int32 `protobuf:"varint,8,opt,name=execution_errored_exonerated,json=executionErroredExonerated,proto3" json:"execution_errored_exonerated,omitempty"`
	// The number of precluded verdicts with exonerations.
	PrecludedExonerated int32 `protobuf:"varint,9,opt,name=precluded_exonerated,json=precludedExonerated,proto3" json:"precluded_exonerated,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TestAggregation_VerdictCounts) Reset() {
	*x = TestAggregation_VerdictCounts{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAggregation_VerdictCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAggregation_VerdictCounts) ProtoMessage() {}

func (x *TestAggregation_VerdictCounts) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAggregation_VerdictCounts.ProtoReflect.Descriptor instead.
func (*TestAggregation_VerdictCounts) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TestAggregation_VerdictCounts) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetFlaky() int32 {
	if x != nil {
		return x.Flaky
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetExecutionErrored() int32 {
	if x != nil {
		return x.ExecutionErrored
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetPrecluded() int32 {
	if x != nil {
		return x.Precluded
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetFailedExonerated() int32 {
	if x != nil {
		return x.FailedExonerated
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetExecutionErroredExonerated() int32 {
	if x != nil {
		return x.ExecutionErroredExonerated
	}
	return 0
}

func (x *TestAggregation_VerdictCounts) GetPrecludedExonerated() int32 {
	if x != nil {
		return x.PrecludedExonerated
	}
	return 0
}

var File_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc = "" +
	"\n" +
	"=go.chromium.org/luci/resultdb/proto/v1/test_aggregation.proto\x12\x10luci.resultdb.v1\x1a3go.chromium.org/luci/resultdb/proto/v1/common.proto\"\xce\x04\n" +
	"\x0fTestAggregation\x126\n" +
	"\x02id\x18\x01 \x01(\v2&.luci.resultdb.v1.TestIdentifierPrefixR\x02id\x12L\n" +
	"\x10next_finer_level\x18\x02 \x01(\x0e2\".luci.resultdb.v1.AggregationLevelR\x0enextFinerLevel\x12V\n" +
	"\x0everdict_counts\x18\x03 \x01(\v2/.luci.resultdb.v1.TestAggregation.VerdictCountsR\rverdictCounts\x1a\xdc\x02\n" +
	"\rVerdictCounts\x12\x16\n" +
	"\x06failed\x18\x01 \x01(\x05R\x06failed\x12\x14\n" +
	"\x05flaky\x18\x02 \x01(\x05R\x05flaky\x12\x16\n" +
	"\x06passed\x18\x03 \x01(\x05R\x06passed\x12\x18\n" +
	"\askipped\x18\x04 \x01(\x05R\askipped\x12+\n" +
	"\x11execution_errored\x18\x05 \x01(\x05R\x10executionErrored\x12\x1c\n" +
	"\tprecluded\x18\x06 \x01(\x05R\tprecluded\x12+\n" +
	"\x11failed_exonerated\x18\a \x01(\x05R\x10failedExonerated\x12@\n" +
	"\x1cexecution_errored_exonerated\x18\b \x01(\x05R\x1aexecutionErroredExonerated\x121\n" +
	"\x14precluded_exonerated\x18\t \x01(\x05R\x13precludedExoneratedBP\n" +
	"\x1bcom.google.luci.resultdb.v1P\x01Z/go.chromium.org/luci/resultdb/proto/v1;resultpbb\x06proto3"

var (
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_goTypes = []any{
	(*TestAggregation)(nil),               // 0: luci.resultdb.v1.TestAggregation
	(*TestAggregation_VerdictCounts)(nil), // 1: luci.resultdb.v1.TestAggregation.VerdictCounts
	(*TestIdentifierPrefix)(nil),          // 2: luci.resultdb.v1.TestIdentifierPrefix
	(AggregationLevel)(0),                 // 3: luci.resultdb.v1.AggregationLevel
}
var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_depIdxs = []int32{
	2, // 0: luci.resultdb.v1.TestAggregation.id:type_name -> luci.resultdb.v1.TestIdentifierPrefix
	3, // 1: luci.resultdb.v1.TestAggregation.next_finer_level:type_name -> luci.resultdb.v1.AggregationLevel
	1, // 2: luci.resultdb.v1.TestAggregation.verdict_counts:type_name -> luci.resultdb.v1.TestAggregation.VerdictCounts
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_depIdxs = nil
}
