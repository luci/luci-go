// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/resultdb/proto/v1/test_aggregation.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestAggregation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The test identifier prefix represented by the test aggregate.
	Id *TestIdentifierPrefix `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The next (finer) aggregation level to use if drilling into this aggregate,
	// based on the currently defined scheme information.
	// Some schemes do not use one or both intermediate hierarchy levels, this
	// makes it easy to skip them.
	// If unset, no finer aggregation is available and the next finer level
	// is test verdicts.
	NextFinerLevel AggregationLevel `protobuf:"varint,2,opt,name=next_finer_level,json=nextFinerLevel,proto3,enum=luci.resultdb.v1.AggregationLevel" json:"next_finer_level,omitempty"`
	// The counts of test verdict statuses rolling up to this aggregation.
	VerdictCounts *VerdictStatusCounts `protobuf:"bytes,3,opt,name=verdict_counts,json=verdictCounts,proto3" json:"verdict_counts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestAggregation) Reset() {
	*x = TestAggregation{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestAggregation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestAggregation) ProtoMessage() {}

func (x *TestAggregation) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestAggregation.ProtoReflect.Descriptor instead.
func (*TestAggregation) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescGZIP(), []int{0}
}

func (x *TestAggregation) GetId() *TestIdentifierPrefix {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TestAggregation) GetNextFinerLevel() AggregationLevel {
	if x != nil {
		return x.NextFinerLevel
	}
	return AggregationLevel_AGGREGATION_LEVEL_UNSPECIFIED
}

func (x *TestAggregation) GetVerdictCounts() *VerdictStatusCounts {
	if x != nil {
		return x.VerdictCounts
	}
	return nil
}

type VerdictStatusCounts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of failed verdicts.
	// Some of these may have been exonerated, see failed_exonerated for a breakout.
	Failed int32 `protobuf:"varint,1,opt,name=failed,proto3" json:"failed,omitempty"`
	// Total number of flaky verdicts.
	Flaky int32 `protobuf:"varint,2,opt,name=flaky,proto3" json:"flaky,omitempty"`
	// Total number of passed verdicts.
	Passed int32 `protobuf:"varint,3,opt,name=passed,proto3" json:"passed,omitempty"`
	// Total number of skipped verdicts.
	Skipped int32 `protobuf:"varint,4,opt,name=skipped,proto3" json:"skipped,omitempty"`
	// Total number of infra failed verdicts.
	// Some of these may have been exonerated, see infra_failed_exonerated for a breakout.
	InfraFailed int32 `protobuf:"varint,5,opt,name=infra_failed,json=infraFailed,proto3" json:"infra_failed,omitempty"`
	// Total number of failed verdicts with exonerations.
	// To work out how many failures have not been exonerated use
	// (failed - failed_exonerated).
	FailedExonerated int32 `protobuf:"varint,6,opt,name=failed_exonerated,json=failedExonerated,proto3" json:"failed_exonerated,omitempty"`
	// Total number of infra failed verdicts with exonerations.
	// To work out how many infra failures have not been exonerated use
	// (infra_failed - infra_failed_exonerated).
	InfraFailedExonerated int32 `protobuf:"varint,7,opt,name=infra_failed_exonerated,json=infraFailedExonerated,proto3" json:"infra_failed_exonerated,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *VerdictStatusCounts) Reset() {
	*x = VerdictStatusCounts{}
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerdictStatusCounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerdictStatusCounts) ProtoMessage() {}

func (x *VerdictStatusCounts) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerdictStatusCounts.ProtoReflect.Descriptor instead.
func (*VerdictStatusCounts) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescGZIP(), []int{1}
}

func (x *VerdictStatusCounts) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *VerdictStatusCounts) GetFlaky() int32 {
	if x != nil {
		return x.Flaky
	}
	return 0
}

func (x *VerdictStatusCounts) GetPassed() int32 {
	if x != nil {
		return x.Passed
	}
	return 0
}

func (x *VerdictStatusCounts) GetSkipped() int32 {
	if x != nil {
		return x.Skipped
	}
	return 0
}

func (x *VerdictStatusCounts) GetInfraFailed() int32 {
	if x != nil {
		return x.InfraFailed
	}
	return 0
}

func (x *VerdictStatusCounts) GetFailedExonerated() int32 {
	if x != nil {
		return x.FailedExonerated
	}
	return 0
}

func (x *VerdictStatusCounts) GetInfraFailedExonerated() int32 {
	if x != nil {
		return x.InfraFailedExonerated
	}
	return 0
}

var File_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc = string([]byte{
	0x0a, 0x3d, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x4c, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x0e, 0x6e, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x4c, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x64,
	0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x0d, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xfd,
	0x01, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6c, 0x61, 0x6b, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66,
	0x6c, 0x61, 0x6b, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x6f, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x6f, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x65, 0x78, 0x6f, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x45, 0x78, 0x6f, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x42, 0x50,
	0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a,
	0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_goTypes = []any{
	(*TestAggregation)(nil),      // 0: luci.resultdb.v1.TestAggregation
	(*VerdictStatusCounts)(nil),  // 1: luci.resultdb.v1.VerdictStatusCounts
	(*TestIdentifierPrefix)(nil), // 2: luci.resultdb.v1.TestIdentifierPrefix
	(AggregationLevel)(0),        // 3: luci.resultdb.v1.AggregationLevel
}
var file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_depIdxs = []int32{
	2, // 0: luci.resultdb.v1.TestAggregation.id:type_name -> luci.resultdb.v1.TestIdentifierPrefix
	3, // 1: luci.resultdb.v1.TestAggregation.next_finer_level:type_name -> luci.resultdb.v1.AggregationLevel
	1, // 2: luci.resultdb.v1.TestAggregation.verdict_counts:type_name -> luci.resultdb.v1.VerdictStatusCounts
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_test_aggregation_proto_depIdxs = nil
}
