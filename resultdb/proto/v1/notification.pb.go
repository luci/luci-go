// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v6.32.0
// source: go.chromium.org/luci/resultdb/proto/v1/notification.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A message notifying that an invocation has been finalized,
// i.e. that an invocation's test results are now immutable and are
// safe to be exported.
//
// The message is sent over the `v1.invocation_finalized` Cloud Pub/Sub
// topic in JSON-serialized form.
//
// Next id: 6.
type InvocationFinalizedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the invocation that was finalized.
	// Format: invocations/{INVOCATION_ID}.
	Invocation string `protobuf:"bytes,1,opt,name=invocation,proto3" json:"invocation,omitempty"`
	// The LUCI realm that owns the invocation.
	// E.g. "chromium:ci".
	Realm string `protobuf:"bytes,2,opt,name=realm,proto3" json:"realm,omitempty"`
	// Whether this invocation is a root of the invocation graph for export purposes.
	//
	// To help downstream systems (like LUCI Analysis) make sense of test results,
	// and gather overall context for a result, ResultDB data export is centered
	// around export roots.
	//
	// See more in invocation.proto.
	IsExportRoot bool `protobuf:"varint,3,opt,name=is_export_root,json=isExportRoot,proto3" json:"is_export_root,omitempty"`
	// The hostname of the luci.resultdb.v1.ResultDB service which
	// can be used to query more information about the invocation(s)
	// notified in this message.
	ResultdbHost string `protobuf:"bytes,4,opt,name=resultdb_host,json=resultdbHost,proto3" json:"resultdb_host,omitempty"`
	// When the invocation was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *InvocationFinalizedNotification) Reset() {
	*x = InvocationFinalizedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationFinalizedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationFinalizedNotification) ProtoMessage() {}

func (x *InvocationFinalizedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationFinalizedNotification.ProtoReflect.Descriptor instead.
func (*InvocationFinalizedNotification) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *InvocationFinalizedNotification) GetInvocation() string {
	if x != nil {
		return x.Invocation
	}
	return ""
}

func (x *InvocationFinalizedNotification) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *InvocationFinalizedNotification) GetIsExportRoot() bool {
	if x != nil {
		return x.IsExportRoot
	}
	return false
}

func (x *InvocationFinalizedNotification) GetResultdbHost() string {
	if x != nil {
		return x.ResultdbHost
	}
	return ""
}

func (x *InvocationFinalizedNotification) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

// A message notifying that a root invocation has been finalized,
// i.e. that a root invocation's test results are now immutable and are
// safe to be exported.
//
// The message is sent over the `v1.root_invocation_finalized` Cloud Pub/Sub
// topic in JSON-serialized form.
//
// Next id: 3
type RootInvocationFinalizedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The root invocation that was finalized.
	RootInvocation *RootInvocation `protobuf:"bytes,1,opt,name=root_invocation,json=rootInvocation,proto3" json:"root_invocation,omitempty"`
	// The hostname of the luci.resultdb.v1.ResultDB service which
	// can be used to query more information about the invocation(s)
	// notified in this message.
	ResultdbHost string `protobuf:"bytes,2,opt,name=resultdb_host,json=resultdbHost,proto3" json:"resultdb_host,omitempty"`
}

func (x *RootInvocationFinalizedNotification) Reset() {
	*x = RootInvocationFinalizedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootInvocationFinalizedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootInvocationFinalizedNotification) ProtoMessage() {}

func (x *RootInvocationFinalizedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootInvocationFinalizedNotification.ProtoReflect.Descriptor instead.
func (*RootInvocationFinalizedNotification) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *RootInvocationFinalizedNotification) GetRootInvocation() *RootInvocation {
	if x != nil {
		return x.RootInvocation
	}
	return nil
}

func (x *RootInvocationFinalizedNotification) GetResultdbHost() string {
	if x != nil {
		return x.ResultdbHost
	}
	return ""
}

// InvocationReadyForExportNotification notifies that the properties, test results
// and artifacts directly inside invocation `invocation`, within the context of
// export root `root_invocation`, are now immutable and ready for consumption
// by downstream systems.
//
// If a given invocation is included by multiple export roots, a message will
// be sent for each such root.
//
// When sent over v1.invocation_ready_for_export Cloud Pub/Sub, an attribute
// "luci_project" will be attached to the message, which will contain the
// LUCI Project of the `root_invocation_realm`.
//
// Next ID: 8.
type InvocationReadyForExportNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The hostname of the luci.resultdb.v1.ResultDB service which
	// can be used to query more information about the invocation(s)
	// notified in this message.
	ResultdbHost string `protobuf:"bytes,6,opt,name=resultdb_host,json=resultdbHost,proto3" json:"resultdb_host,omitempty"`
	// The export root with respect to which the export is occurring.
	//
	// Format: invocations/{ROOT_INVOCATION_ID}.
	RootInvocation string `protobuf:"bytes,1,opt,name=root_invocation,json=rootInvocation,proto3" json:"root_invocation,omitempty"`
	// The LUCI realm that owns the root invocation.
	RootInvocationRealm string `protobuf:"bytes,2,opt,name=root_invocation_realm,json=rootInvocationRealm,proto3" json:"root_invocation_realm,omitempty"`
	// When the root invocation was created.
	RootCreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=root_create_time,json=rootCreateTime,proto3" json:"root_create_time,omitempty"`
	// The name of the ResultDB invocation included by root_invocation whose
	// immediate properties, test results and artifacts are now immutable
	// (in FINALIZING OR FINALIZED state). Note that child invocations included
	// by `invocation` may not yet be immutable.
	//
	// This may be equal to root_invocation, to indicate test results, artifacts
	// and properties immediately inside root_invocation are immutable and ready
	// for ingestion.
	//
	// Format: invocations/{INVOCATION_ID}.
	Invocation string `protobuf:"bytes,3,opt,name=invocation,proto3" json:"invocation,omitempty"`
	// The LUCI realm that owns `invocation`.
	InvocationRealm string `protobuf:"bytes,4,opt,name=invocation_realm,json=invocationRealm,proto3" json:"invocation_realm,omitempty"`
	// The resolved sources for `invocation`, if any.
	//
	// As sources may be inherited, the sources resolved for the same
	// invocation may vary between export roots. This typically occurs when
	// a project uses testing task deduplication, and the different sources
	// deduplicate to the same testing task as they compile to
	// byte-for-byte-identical testing artifacts.
	Sources *Sources `protobuf:"bytes,5,opt,name=sources,proto3" json:"sources,omitempty"`
}

func (x *InvocationReadyForExportNotification) Reset() {
	*x = InvocationReadyForExportNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvocationReadyForExportNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationReadyForExportNotification) ProtoMessage() {}

func (x *InvocationReadyForExportNotification) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationReadyForExportNotification.ProtoReflect.Descriptor instead.
func (*InvocationReadyForExportNotification) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *InvocationReadyForExportNotification) GetResultdbHost() string {
	if x != nil {
		return x.ResultdbHost
	}
	return ""
}

func (x *InvocationReadyForExportNotification) GetRootInvocation() string {
	if x != nil {
		return x.RootInvocation
	}
	return ""
}

func (x *InvocationReadyForExportNotification) GetRootInvocationRealm() string {
	if x != nil {
		return x.RootInvocationRealm
	}
	return ""
}

func (x *InvocationReadyForExportNotification) GetRootCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RootCreateTime
	}
	return nil
}

func (x *InvocationReadyForExportNotification) GetInvocation() string {
	if x != nil {
		return x.Invocation
	}
	return ""
}

func (x *InvocationReadyForExportNotification) GetInvocationRealm() string {
	if x != nil {
		return x.InvocationRealm
	}
	return ""
}

func (x *InvocationReadyForExportNotification) GetSources() *Sources {
	if x != nil {
		return x.Sources
	}
	return nil
}

// A message to publish batches of test results from one or more work units
// within the same root invocation.
//
// The message is sent over the `v1.test_results` Cloud Pub/Sub topic in
// JSON-serialized form. The size limit of the message is 10MB.
//
// Next id: 5
type TestResultsNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of batches of test results grouped by work unit in the same root
	// invocation.
	TestResultsByWorkUnit []*TestResultsNotification_TestResultsByWorkUnit `protobuf:"bytes,1,rep,name=test_results_by_work_unit,json=testResultsByWorkUnit,proto3" json:"test_results_by_work_unit,omitempty"`
	// The hostname of the luci.resultdb.v1.ResultDB service which can be used
	// to query more information about the test results notified in this
	// message.
	ResultdbHost string `protobuf:"bytes,2,opt,name=resultdb_host,json=resultdbHost,proto3" json:"resultdb_host,omitempty"`
	// The code sources tested, if known. This field is sourced from the root
	// invocation.
	Sources *Sources `protobuf:"bytes,3,opt,name=sources,proto3" json:"sources,omitempty"`
	// A deduplication key identifying this batch of test results within the
	// same root invocation.
	DeduplicationKey string `protobuf:"bytes,4,opt,name=deduplication_key,json=deduplicationKey,proto3" json:"deduplication_key,omitempty"`
}

func (x *TestResultsNotification) Reset() {
	*x = TestResultsNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResultsNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResultsNotification) ProtoMessage() {}

func (x *TestResultsNotification) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResultsNotification.ProtoReflect.Descriptor instead.
func (*TestResultsNotification) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *TestResultsNotification) GetTestResultsByWorkUnit() []*TestResultsNotification_TestResultsByWorkUnit {
	if x != nil {
		return x.TestResultsByWorkUnit
	}
	return nil
}

func (x *TestResultsNotification) GetResultdbHost() string {
	if x != nil {
		return x.ResultdbHost
	}
	return ""
}

func (x *TestResultsNotification) GetSources() *Sources {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *TestResultsNotification) GetDeduplicationKey() string {
	if x != nil {
		return x.DeduplicationKey
	}
	return ""
}

// A message representing the batch of test results grouped by work unit.
// Next id: 3
type TestResultsNotification_TestResultsByWorkUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the work unit that the test results belong to.
	// Format: rootInvocations/{Root_INVOCATION_ID}/workUnits/{WORK_UNIT_ID}.
	WorkUnitName string `protobuf:"bytes,1,opt,name=work_unit_name,json=workUnitName,proto3" json:"work_unit_name,omitempty"`
	// A batch of test results in the same parent work units.
	TestResults []*TestResult `protobuf:"bytes,2,rep,name=test_results,json=testResults,proto3" json:"test_results,omitempty"`
}

func (x *TestResultsNotification_TestResultsByWorkUnit) Reset() {
	*x = TestResultsNotification_TestResultsByWorkUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResultsNotification_TestResultsByWorkUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResultsNotification_TestResultsByWorkUnit) ProtoMessage() {}

func (x *TestResultsNotification_TestResultsByWorkUnit) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResultsNotification_TestResultsByWorkUnit.ProtoReflect.Descriptor instead.
func (*TestResultsNotification_TestResultsByWorkUnit) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TestResultsNotification_TestResultsByWorkUnit) GetWorkUnitName() string {
	if x != nil {
		return x.WorkUnitName
	}
	return ""
}

func (x *TestResultsNotification_TestResultsByWorkUnit) GetTestResults() []*TestResult {
	if x != nil {
		return x.TestResults
	}
	return nil
}

var File_go_chromium_org_luci_resultdb_proto_v1_notification_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDesc = []byte{
	0x0a, 0x39, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdf, 0x01, 0x0a, 0x1f,
	0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x48, 0x6f, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x95, 0x01,
	0x0a, 0x23, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64,
	0x62, 0x48, 0x6f, 0x73, 0x74, 0x22, 0xee, 0x02, 0x0a, 0x24, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f,
	0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x6f, 0x6f,
	0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x6c, 0x6d,
	0x12, 0x44, 0x0a, 0x10, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x6c,
	0x6d, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x07, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x9b, 0x03, 0x0a, 0x17, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x79, 0x0a, 0x19, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0x79, 0x57, 0x6f,
	0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x15, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x42, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x64, 0x75, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x1a, 0x7e, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x42, 0x79, 0x57, 0x6f, 0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x55, 0x6e, 0x69, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x42, 0x50, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescData = file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDesc
)

func file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescData)
	})
	return file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_goTypes = []interface{}{
	(*InvocationFinalizedNotification)(nil),               // 0: luci.resultdb.v1.InvocationFinalizedNotification
	(*RootInvocationFinalizedNotification)(nil),           // 1: luci.resultdb.v1.RootInvocationFinalizedNotification
	(*InvocationReadyForExportNotification)(nil),          // 2: luci.resultdb.v1.InvocationReadyForExportNotification
	(*TestResultsNotification)(nil),                       // 3: luci.resultdb.v1.TestResultsNotification
	(*TestResultsNotification_TestResultsByWorkUnit)(nil), // 4: luci.resultdb.v1.TestResultsNotification.TestResultsByWorkUnit
	(*timestamppb.Timestamp)(nil),                         // 5: google.protobuf.Timestamp
	(*RootInvocation)(nil),                                // 6: luci.resultdb.v1.RootInvocation
	(*Sources)(nil),                                       // 7: luci.resultdb.v1.Sources
	(*TestResult)(nil),                                    // 8: luci.resultdb.v1.TestResult
}
var file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_depIdxs = []int32{
	5, // 0: luci.resultdb.v1.InvocationFinalizedNotification.create_time:type_name -> google.protobuf.Timestamp
	6, // 1: luci.resultdb.v1.RootInvocationFinalizedNotification.root_invocation:type_name -> luci.resultdb.v1.RootInvocation
	5, // 2: luci.resultdb.v1.InvocationReadyForExportNotification.root_create_time:type_name -> google.protobuf.Timestamp
	7, // 3: luci.resultdb.v1.InvocationReadyForExportNotification.sources:type_name -> luci.resultdb.v1.Sources
	4, // 4: luci.resultdb.v1.TestResultsNotification.test_results_by_work_unit:type_name -> luci.resultdb.v1.TestResultsNotification.TestResultsByWorkUnit
	7, // 5: luci.resultdb.v1.TestResultsNotification.sources:type_name -> luci.resultdb.v1.Sources
	8, // 6: luci.resultdb.v1.TestResultsNotification.TestResultsByWorkUnit.test_results:type_name -> luci.resultdb.v1.TestResult
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_v1_notification_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_v1_common_proto_init()
	file_go_chromium_org_luci_resultdb_proto_v1_root_invocation_proto_init()
	file_go_chromium_org_luci_resultdb_proto_v1_test_result_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationFinalizedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootInvocationFinalizedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvocationReadyForExportNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResultsNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResultsNotification_TestResultsByWorkUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_v1_notification_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_rawDesc = nil
	file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_v1_notification_proto_depIdxs = nil
}
