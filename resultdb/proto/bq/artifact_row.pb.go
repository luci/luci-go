// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/resultdb/proto/bq/artifact_row.proto

package resultpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This proto is deprecated. This is used in the old BigQuery artifact export.
// The reason we have not deleted it yet is that there still seems to be some tasks
// running this exporter, so we need to check and verify those tasks.
// TextArtifactRowLegacy represents a row in a BigQuery table for a text artifact.
type TextArtifactRowLegacy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Exported contains info of the exported invocation.
	//
	// Note: it's possible that this invocation is not the artifact's
	// immediate parent invocation, but the including invocation.
	// For example if the BigQuery table is for all artifacts of Chromium CI
	// builds, then the exported invocation is for a CI build, which includes
	// multiple invocations for swarming tasks within that build.
	Exported *InvocationRecord `protobuf:"bytes,1,opt,name=exported,proto3" json:"exported,omitempty"`
	// Parent contains info of the artifact's immediate parent invocation.
	Parent *InvocationRecord `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	// Test_id and result_id can identify the test result in the invocation
	// this artifact belongs to.
	// They will be empty if the artifact is an invocation-level artifact.
	TestId   string `protobuf:"bytes,3,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	ResultId string `protobuf:"bytes,4,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`
	// Id of the artifact.
	// Regex: ^[[:word:]]([[:print:]]{0,254}[[:word:]])?$
	//
	// Refer to luci.resultdb.v1.Artifact.artifact_id for details.
	ArtifactId string `protobuf:"bytes,5,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// Id of the artifact shard.
	// Row size limit is 5MB according to
	// https://cloud.google.com/bigquery/quotas#streaming_inserts
	// If the size of the artifact content is larger than that, the data will be
	// sharded at the nearest previous line break ("\r\n" first, if not exist
	// then "\n" or "\r").
	// Shard_id is monotonically increasing and starts at 0.
	ShardId int32 `protobuf:"varint,6,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	// Artifact shard content.
	// Encoded as UTF-8. Invalid characters are replaced with the replacement
	// character (U+FFFD).
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	// Partition_time is used to partition the table.
	// It is the time when exported invocation was created in Spanner.
	// Note: it is NOT the time when the row is inserted into BigQuery table.
	// https://cloud.google.com/bigquery/docs/creating-column-partitions#limitations
	// mentions "The partitioning column must be a top-level field."
	// So we keep this column here instead of adding the CreateTime to Invocation.
	PartitionTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=partition_time,json=partitionTime,proto3" json:"partition_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextArtifactRowLegacy) Reset() {
	*x = TextArtifactRowLegacy{}
	mi := &file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextArtifactRowLegacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextArtifactRowLegacy) ProtoMessage() {}

func (x *TextArtifactRowLegacy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextArtifactRowLegacy.ProtoReflect.Descriptor instead.
func (*TextArtifactRowLegacy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescGZIP(), []int{0}
}

func (x *TextArtifactRowLegacy) GetExported() *InvocationRecord {
	if x != nil {
		return x.Exported
	}
	return nil
}

func (x *TextArtifactRowLegacy) GetParent() *InvocationRecord {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *TextArtifactRowLegacy) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *TextArtifactRowLegacy) GetResultId() string {
	if x != nil {
		return x.ResultId
	}
	return ""
}

func (x *TextArtifactRowLegacy) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *TextArtifactRowLegacy) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *TextArtifactRowLegacy) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TextArtifactRowLegacy) GetPartitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PartitionTime
	}
	return nil
}

var File_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDesc = string([]byte{
	0x0a, 0x39, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x5f, 0x72, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x62, 0x71, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x02, 0x0a, 0x15, 0x54, 0x65, 0x78, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x6f, 0x77, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x12, 0x3e, 0x0a,
	0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e,
	0x62, 0x71, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x08, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x62, 0x71,
	0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x68, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x62, 0x71, 0x3b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_goTypes = []any{
	(*TextArtifactRowLegacy)(nil), // 0: luci.resultdb.bq.TextArtifactRowLegacy
	(*InvocationRecord)(nil),      // 1: luci.resultdb.bq.InvocationRecord
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_depIdxs = []int32{
	1, // 0: luci.resultdb.bq.TextArtifactRowLegacy.exported:type_name -> luci.resultdb.bq.InvocationRecord
	1, // 1: luci.resultdb.bq.TextArtifactRowLegacy.parent:type_name -> luci.resultdb.bq.InvocationRecord
	2, // 2: luci.resultdb.bq.TextArtifactRowLegacy.partition_time:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_init() }
func file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_init() {
	if File_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto != nil {
		return
	}
	file_go_chromium_org_luci_resultdb_proto_bq_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto = out.File
	file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_proto_bq_artifact_row_proto_depIdxs = nil
}
