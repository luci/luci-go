// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.resultdb.internal.tasks;

import "go.chromium.org/luci/resultdb/proto/v1/invocation.proto";
import "go.chromium.org/luci/resultdb/proto/v1/notification.proto";

option go_package = "go.chromium.org/luci/resultdb/internal/tasks/taskspb";

message TryFinalizeInvocation {
  string invocation_id = 1;
}

// SweepWorkUnitsForFinalization defines the payload for a task to
// batch finalize work units in a root invocation. The task transitions
// work units that are FINALIZING and have no ACTIVE descendant to FINALIZED.
message SweepWorkUnitsForFinalization {
  // The ID of the root invocation that contains work units to be finalized.
  string root_invocation_id = 1;

  // The sequence number of the current task. It is compared with the latest
  // task sequence number scheduled for the root invocation. If they don't match,
  // the task is stale and should be skipped to avoid task overruns.
  int64 sequence_number = 2;
}

message NotifyInvocationFinalized {
  // The message to publish to Cloud Pub/Sub.
  luci.resultdb.v1.InvocationFinalizedNotification message = 1;
}

message NotifyRootInvocationFinalized {
  // The message to publish to Cloud Pub/Sub.
  luci.resultdb.v1.RootInvocationFinalizedNotification message = 1;
}

message ExportInvocationTestResultsToBQ {
  string invocation_id = 1;
  luci.resultdb.v1.BigQueryExport bq_export = 2;
}

message ExportInvocationArtifactsToBQ {
  string invocation_id = 1;
  luci.resultdb.v1.BigQueryExport bq_export = 2;
}

message ExportInvocationToBQ {
  string invocation_id = 1;
}

message UpdateTestMetadata {
  string invocation_id = 1;
}

message MarkInvocationSubmitted {
  string invocation_id = 1;
}

message ExportArtifacts {
  string invocation_id = 1;
}

// RunExportNotifications dispatches "ready for export" notifications
// as appropriate. To do so, it maintains the export root information
// for each invocation, which is used to determine when all criteria for
// sending a notification has been met.
//
// This task must be created if an invocation encounters any of the
// following events:
// - An existing invocation:
//   - Had its source spec finalized.
//   - Enters finalizing state (become locally immutable).
//   - Has a new invocation included in it.
//   - Has an export root added or updated (task recurses via this mechanism).
// - A new invocation:
//   - Is created in finalizing state.
//   - Is created as an export root and with new invocations included in it.
message RunExportNotifications {
  // The invocation which had an event occur that may contribute to
  // the need for a "ready for export" notification.
  string invocation_id = 1;

  // If set, limits updates to the specified included invocations.
  // Should only be set if this task was created in response to the
  // inclusion of new invocations, to avoid unnecessary reads
  // on large invocations.
  // If empty, will propagate export roots to all included invocations.
  repeated string included_invocation_ids = 2;

  // The export roots for which to propagate roots and sources.
  // Should only be set if this task was created in response to
  // specified export roots being updated for this invocation.
  // If empty, will propagate all export roots.
  repeated string root_invocation_ids = 3;
}

message NotificationInvocationReadyForExport {
  // The message to publish to Cloud Pub/Sub.
  luci.resultdb.v1.InvocationReadyForExportNotification message = 1;
}
