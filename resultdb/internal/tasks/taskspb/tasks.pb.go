// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/resultdb/internal/tasks/taskspb/tasks.proto

package taskspb

import (
	v1 "go.chromium.org/luci/resultdb/proto/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TryFinalizeInvocation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TryFinalizeInvocation) Reset() {
	*x = TryFinalizeInvocation{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryFinalizeInvocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryFinalizeInvocation) ProtoMessage() {}

func (x *TryFinalizeInvocation) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryFinalizeInvocation.ProtoReflect.Descriptor instead.
func (*TryFinalizeInvocation) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *TryFinalizeInvocation) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

type NotifyInvocationFinalized struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The message to publish to Cloud Pub/Sub.
	Message       *v1.InvocationFinalizedNotification `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotifyInvocationFinalized) Reset() {
	*x = NotifyInvocationFinalized{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyInvocationFinalized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyInvocationFinalized) ProtoMessage() {}

func (x *NotifyInvocationFinalized) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyInvocationFinalized.ProtoReflect.Descriptor instead.
func (*NotifyInvocationFinalized) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{1}
}

func (x *NotifyInvocationFinalized) GetMessage() *v1.InvocationFinalizedNotification {
	if x != nil {
		return x.Message
	}
	return nil
}

type ExportInvocationTestResultsToBQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	BqExport      *v1.BigQueryExport     `protobuf:"bytes,2,opt,name=bq_export,json=bqExport,proto3" json:"bq_export,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportInvocationTestResultsToBQ) Reset() {
	*x = ExportInvocationTestResultsToBQ{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportInvocationTestResultsToBQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportInvocationTestResultsToBQ) ProtoMessage() {}

func (x *ExportInvocationTestResultsToBQ) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportInvocationTestResultsToBQ.ProtoReflect.Descriptor instead.
func (*ExportInvocationTestResultsToBQ) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{2}
}

func (x *ExportInvocationTestResultsToBQ) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *ExportInvocationTestResultsToBQ) GetBqExport() *v1.BigQueryExport {
	if x != nil {
		return x.BqExport
	}
	return nil
}

type ExportInvocationArtifactsToBQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	BqExport      *v1.BigQueryExport     `protobuf:"bytes,2,opt,name=bq_export,json=bqExport,proto3" json:"bq_export,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportInvocationArtifactsToBQ) Reset() {
	*x = ExportInvocationArtifactsToBQ{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportInvocationArtifactsToBQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportInvocationArtifactsToBQ) ProtoMessage() {}

func (x *ExportInvocationArtifactsToBQ) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportInvocationArtifactsToBQ.ProtoReflect.Descriptor instead.
func (*ExportInvocationArtifactsToBQ) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{3}
}

func (x *ExportInvocationArtifactsToBQ) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *ExportInvocationArtifactsToBQ) GetBqExport() *v1.BigQueryExport {
	if x != nil {
		return x.BqExport
	}
	return nil
}

type ExportInvocationToBQ struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportInvocationToBQ) Reset() {
	*x = ExportInvocationToBQ{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportInvocationToBQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportInvocationToBQ) ProtoMessage() {}

func (x *ExportInvocationToBQ) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportInvocationToBQ.ProtoReflect.Descriptor instead.
func (*ExportInvocationToBQ) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{4}
}

func (x *ExportInvocationToBQ) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

type UpdateTestMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTestMetadata) Reset() {
	*x = UpdateTestMetadata{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTestMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTestMetadata) ProtoMessage() {}

func (x *UpdateTestMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTestMetadata.ProtoReflect.Descriptor instead.
func (*UpdateTestMetadata) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTestMetadata) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

type MarkInvocationSubmitted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkInvocationSubmitted) Reset() {
	*x = MarkInvocationSubmitted{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkInvocationSubmitted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkInvocationSubmitted) ProtoMessage() {}

func (x *MarkInvocationSubmitted) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkInvocationSubmitted.ProtoReflect.Descriptor instead.
func (*MarkInvocationSubmitted) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{6}
}

func (x *MarkInvocationSubmitted) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

type ExportArtifacts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvocationId  string                 `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportArtifacts) Reset() {
	*x = ExportArtifacts{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportArtifacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportArtifacts) ProtoMessage() {}

func (x *ExportArtifacts) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportArtifacts.ProtoReflect.Descriptor instead.
func (*ExportArtifacts) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{7}
}

func (x *ExportArtifacts) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

// RunExportNotifications dispatches "ready for export" notifications
// as appropriate. To do so, it maintains the export root information
// for each invocation, which is used to determine when all criteria for
// sending a notification has been met.
//
// This task must be created if an invocation encounters any of the
// following events:
// - An existing invocation:
//   - Had its source spec finalized.
//   - Enters finalizing state (become locally immutable).
//   - Has a new invocation included in it.
//   - Has an export root added or updated (task recurses via this mechanism).
//
// - A new invocation:
//   - Is created in finalizing state.
//   - Is created as an export root and with new invocations included in it.
type RunExportNotifications struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The invocation which had an event occur that may contribute to
	// the need for a "ready for export" notification.
	InvocationId string `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// If set, limits updates to the specified included invocations.
	// Should only be set if this task was created in response to the
	// inclusion of new invocations, to avoid unnecessary reads
	// on large invocations.
	// If empty, will propagate export roots to all included invocations.
	IncludedInvocationIds []string `protobuf:"bytes,2,rep,name=included_invocation_ids,json=includedInvocationIds,proto3" json:"included_invocation_ids,omitempty"`
	// The export roots for which to propagate roots and sources.
	// Should only be set if this task was created in response to
	// specified export roots being updated for this invocation.
	// If empty, will propagate all export roots.
	RootInvocationIds []string `protobuf:"bytes,3,rep,name=root_invocation_ids,json=rootInvocationIds,proto3" json:"root_invocation_ids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RunExportNotifications) Reset() {
	*x = RunExportNotifications{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunExportNotifications) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunExportNotifications) ProtoMessage() {}

func (x *RunExportNotifications) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunExportNotifications.ProtoReflect.Descriptor instead.
func (*RunExportNotifications) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{8}
}

func (x *RunExportNotifications) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *RunExportNotifications) GetIncludedInvocationIds() []string {
	if x != nil {
		return x.IncludedInvocationIds
	}
	return nil
}

func (x *RunExportNotifications) GetRootInvocationIds() []string {
	if x != nil {
		return x.RootInvocationIds
	}
	return nil
}

type NotificationInvocationReadyForExport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The message to publish to Cloud Pub/Sub.
	Message       *v1.InvocationReadyForExportNotification `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationInvocationReadyForExport) Reset() {
	*x = NotificationInvocationReadyForExport{}
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationInvocationReadyForExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationInvocationReadyForExport) ProtoMessage() {}

func (x *NotificationInvocationReadyForExport) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationInvocationReadyForExport.ProtoReflect.Descriptor instead.
func (*NotificationInvocationReadyForExport) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP(), []int{9}
}

func (x *NotificationInvocationReadyForExport) GetMessage() *v1.InvocationReadyForExportNotification {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDesc = string([]byte{
	0x0a, 0x40, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x70, 0x62, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1c, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64,
	0x62, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x1a, 0x37, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x67, 0x6f, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x15, 0x54, 0x72, 0x79, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x68, 0x0a, 0x19, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12,
	0x4b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x1f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x54, 0x6f, 0x42, 0x51,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x62, 0x71, 0x5f, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x67, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x08, 0x62, 0x71, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63,
	0x74, 0x73, 0x54, 0x6f, 0x42, 0x51, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x09, 0x62,
	0x71, 0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x42, 0x69, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x08, 0x62, 0x71, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3b, 0x0a, 0x14, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x42, 0x51, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x3e, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x36, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x16, 0x52,
	0x75, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0x78, 0x0a, 0x24, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64,
	0x79, 0x46, 0x6f, 0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x50, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x6f,
	0x72, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x36, 0x5a, 0x34,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescData []byte
)

func file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDescData
}

var file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_goTypes = []any{
	(*TryFinalizeInvocation)(nil),                   // 0: luci.resultdb.internal.tasks.TryFinalizeInvocation
	(*NotifyInvocationFinalized)(nil),               // 1: luci.resultdb.internal.tasks.NotifyInvocationFinalized
	(*ExportInvocationTestResultsToBQ)(nil),         // 2: luci.resultdb.internal.tasks.ExportInvocationTestResultsToBQ
	(*ExportInvocationArtifactsToBQ)(nil),           // 3: luci.resultdb.internal.tasks.ExportInvocationArtifactsToBQ
	(*ExportInvocationToBQ)(nil),                    // 4: luci.resultdb.internal.tasks.ExportInvocationToBQ
	(*UpdateTestMetadata)(nil),                      // 5: luci.resultdb.internal.tasks.UpdateTestMetadata
	(*MarkInvocationSubmitted)(nil),                 // 6: luci.resultdb.internal.tasks.MarkInvocationSubmitted
	(*ExportArtifacts)(nil),                         // 7: luci.resultdb.internal.tasks.ExportArtifacts
	(*RunExportNotifications)(nil),                  // 8: luci.resultdb.internal.tasks.RunExportNotifications
	(*NotificationInvocationReadyForExport)(nil),    // 9: luci.resultdb.internal.tasks.NotificationInvocationReadyForExport
	(*v1.InvocationFinalizedNotification)(nil),      // 10: luci.resultdb.v1.InvocationFinalizedNotification
	(*v1.BigQueryExport)(nil),                       // 11: luci.resultdb.v1.BigQueryExport
	(*v1.InvocationReadyForExportNotification)(nil), // 12: luci.resultdb.v1.InvocationReadyForExportNotification
}
var file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_depIdxs = []int32{
	10, // 0: luci.resultdb.internal.tasks.NotifyInvocationFinalized.message:type_name -> luci.resultdb.v1.InvocationFinalizedNotification
	11, // 1: luci.resultdb.internal.tasks.ExportInvocationTestResultsToBQ.bq_export:type_name -> luci.resultdb.v1.BigQueryExport
	11, // 2: luci.resultdb.internal.tasks.ExportInvocationArtifactsToBQ.bq_export:type_name -> luci.resultdb.v1.BigQueryExport
	12, // 3: luci.resultdb.internal.tasks.NotificationInvocationReadyForExport.message:type_name -> luci.resultdb.v1.InvocationReadyForExportNotification
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_init() }
func file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_init() {
	if File_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDesc), len(file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto = out.File
	file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_goTypes = nil
	file_go_chromium_org_luci_resultdb_internal_tasks_taskspb_tasks_proto_depIdxs = nil
}
