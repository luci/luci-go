// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/deploy/api/modelpb/actuation.proto

package modelpb

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The state of this actuation.
type Actuation_State int32

const (
	Actuation_STATE_UNSPECIFIED Actuation_State = 0
	Actuation_EXECUTING         Actuation_State = 1 // the actuation is executing right now
	Actuation_SUCCEEDED         Actuation_State = 2 // the actuation finished successfully
	Actuation_FAILED            Actuation_State = 3 // the actuation failed (perhaps partially)
	Actuation_EXPIRED           Actuation_State = 4 // the actuator disappeared before reporting the outcome
)

// Enum value maps for Actuation_State.
var (
	Actuation_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "EXECUTING",
		2: "SUCCEEDED",
		3: "FAILED",
		4: "EXPIRED",
	}
	Actuation_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"EXECUTING":         1,
		"SUCCEEDED":         2,
		"FAILED":            3,
		"EXPIRED":           4,
	}
)

func (x Actuation_State) Enum() *Actuation_State {
	p := new(Actuation_State)
	*p = x
	return p
}

func (x Actuation_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Actuation_State) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[0].Descriptor()
}

func (Actuation_State) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[0]
}

func (x Actuation_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Actuation_State.Descriptor instead.
func (Actuation_State) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{0, 0}
}

// What kind of lock this is.
type ActuationLock_Kind int32

const (
	ActuationLock_KIND_UNSPECIFIED ActuationLock_Kind = 0
	ActuationLock_MANUAL           ActuationLock_Kind = 1 // created by an end-user via web UI or API
	ActuationLock_ANTISTOMP        ActuationLock_Kind = 2 // an automatically created anti-stomp lock
)

// Enum value maps for ActuationLock_Kind.
var (
	ActuationLock_Kind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "MANUAL",
		2: "ANTISTOMP",
	}
	ActuationLock_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED": 0,
		"MANUAL":           1,
		"ANTISTOMP":        2,
	}
)

func (x ActuationLock_Kind) Enum() *ActuationLock_Kind {
	p := new(ActuationLock_Kind)
	*p = x
	return p
}

func (x ActuationLock_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActuationLock_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[1].Descriptor()
}

func (ActuationLock_Kind) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[1]
}

func (x ActuationLock_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActuationLock_Kind.Descriptor instead.
func (ActuationLock_Kind) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{3, 0}
}

// The state of the lock.
type ActuationLock_State int32

const (
	ActuationLock_STATE_UNSPECIFIED ActuationLock_State = 0
	ActuationLock_ACTIVE            ActuationLock_State = 1 // the lock is still active
	ActuationLock_DISABLED          ActuationLock_State = 2 // the lock was explicitly disabled via web UI or API
	ActuationLock_EXPIRED           ActuationLock_State = 3 // the lock expired
)

// Enum value maps for ActuationLock_State.
var (
	ActuationLock_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "ACTIVE",
		2: "DISABLED",
		3: "EXPIRED",
	}
	ActuationLock_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"ACTIVE":            1,
		"DISABLED":          2,
		"EXPIRED":           3,
	}
)

func (x ActuationLock_State) Enum() *ActuationLock_State {
	p := new(ActuationLock_State)
	*p = x
	return p
}

func (x ActuationLock_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActuationLock_State) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[2].Descriptor()
}

func (ActuationLock_State) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[2]
}

func (x ActuationLock_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActuationLock_State.Descriptor instead.
func (ActuationLock_State) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{3, 1}
}

// What to do with an asset.
type ActuationDecision_Decision int32

const (
	ActuationDecision_DECISION_UNSPECIFIED ActuationDecision_Decision = 0
	ActuationDecision_ACTUATE_STALE        ActuationDecision_Decision = 1 // the asset appears to be stale and must be actuated
	ActuationDecision_ACTUATE_FORCE        ActuationDecision_Decision = 2 // the asset must be actuated even if it is up-to-date
	ActuationDecision_SKIP_UPTODATE        ActuationDecision_Decision = 3 // the asset is up-to-date and should not be actuated
	ActuationDecision_SKIP_DISABLED        ActuationDecision_Decision = 4 // the actuation is disabled in the config
	ActuationDecision_SKIP_LOCKED          ActuationDecision_Decision = 5 // the actuation of this asset is locked
	ActuationDecision_SKIP_BROKEN          ActuationDecision_Decision = 6 // something is broken, the asset should not be touched
)

// Enum value maps for ActuationDecision_Decision.
var (
	ActuationDecision_Decision_name = map[int32]string{
		0: "DECISION_UNSPECIFIED",
		1: "ACTUATE_STALE",
		2: "ACTUATE_FORCE",
		3: "SKIP_UPTODATE",
		4: "SKIP_DISABLED",
		5: "SKIP_LOCKED",
		6: "SKIP_BROKEN",
	}
	ActuationDecision_Decision_value = map[string]int32{
		"DECISION_UNSPECIFIED": 0,
		"ACTUATE_STALE":        1,
		"ACTUATE_FORCE":        2,
		"SKIP_UPTODATE":        3,
		"SKIP_DISABLED":        4,
		"SKIP_LOCKED":          5,
		"SKIP_BROKEN":          6,
	}
)

func (x ActuationDecision_Decision) Enum() *ActuationDecision_Decision {
	p := new(ActuationDecision_Decision)
	*p = x
	return p
}

func (x ActuationDecision_Decision) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActuationDecision_Decision) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[3].Descriptor()
}

func (ActuationDecision_Decision) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes[3]
}

func (x ActuationDecision_Decision) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActuationDecision_Decision.Descriptor instead.
func (ActuationDecision_Decision) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{4, 0}
}

// An inflight or finished actuation of some deployment.
//
// Initiated by BeginActuation RPC and finalized by EndActuation RPC or
// by timeout.
type Actuation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique ID of the actuation.
	//
	// Generated by the actuator when it starts an actuation attempt. Can be an
	// arbitrary string under 40 chars (as long as it is sufficiently random).
	//
	// Used to make BeginActuation and EndActuation calls idempotent and to pair
	// them with each other.
	Id    string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State Actuation_State `protobuf:"varint,2,opt,name=state,proto3,enum=deploy.model.Actuation_State" json:"state,omitempty"`
	// The deployment being actuated.
	Deployment *Deployment `protobuf:"bytes,3,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// The actuator that performs the actuation.
	Actuator *ActuatorInfo `protobuf:"bytes,4,opt,name=actuator,proto3" json:"actuator,omitempty"`
	// The list of triggers if the actuation attempt was triggered by the backend.
	Triggers []*ActuationTrigger `protobuf:"bytes,5,rep,name=triggers,proto3" json:"triggers,omitempty"`
	// When the actuation was created.
	Created *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	// When the actuation finished (successfully or not).
	Finished *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=finished,proto3" json:"finished,omitempty"`
	// When the actuation expires.
	Expiry *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// Error details if the actuation failed or expired.
	Status *status.Status `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	// Link to a human-readable actuation log (if available).
	LogUrl        string `protobuf:"bytes,10,opt,name=log_url,json=logUrl,proto3" json:"log_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Actuation) Reset() {
	*x = Actuation{}
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Actuation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actuation) ProtoMessage() {}

func (x *Actuation) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actuation.ProtoReflect.Descriptor instead.
func (*Actuation) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{0}
}

func (x *Actuation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Actuation) GetState() Actuation_State {
	if x != nil {
		return x.State
	}
	return Actuation_STATE_UNSPECIFIED
}

func (x *Actuation) GetDeployment() *Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *Actuation) GetActuator() *ActuatorInfo {
	if x != nil {
		return x.Actuator
	}
	return nil
}

func (x *Actuation) GetTriggers() []*ActuationTrigger {
	if x != nil {
		return x.Triggers
	}
	return nil
}

func (x *Actuation) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Actuation) GetFinished() *timestamppb.Timestamp {
	if x != nil {
		return x.Finished
	}
	return nil
}

func (x *Actuation) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *Actuation) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Actuation) GetLogUrl() string {
	if x != nil {
		return x.LogUrl
	}
	return ""
}

// Information about the agent that performs the actuation.
type ActuatorInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The RPC identity of the actuator.
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Buildbucket host hosting the builder.
	Buildbucket string `protobuf:"bytes,2,opt,name=buildbucket,proto3" json:"buildbucket,omitempty"`
	// Buildbucket builder running the actuation, as "project/bucket/name".
	BuildbucketBuilder string `protobuf:"bytes,3,opt,name=buildbucket_builder,json=buildbucketBuilder,proto3" json:"buildbucket_builder,omitempty"`
	// Buildbucket build ID of the build running the actuation.
	BuildbucketBuild int64 `protobuf:"varint,4,opt,name=buildbucket_build,json=buildbucketBuild,proto3" json:"buildbucket_build,omitempty"`
	// Scheduler host hosting the job.
	Scheduler string `protobuf:"bytes,5,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	// Scheduler job ID that triggered the build, as "project/name".
	SchedulerJob string `protobuf:"bytes,6,opt,name=scheduler_job,json=schedulerJob,proto3" json:"scheduler_job,omitempty"`
	// Scheduler invocation ID that triggered the build.
	SchedulerInvocation int64 `protobuf:"varint,7,opt,name=scheduler_invocation,json=schedulerInvocation,proto3" json:"scheduler_invocation,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ActuatorInfo) Reset() {
	*x = ActuatorInfo{}
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuatorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuatorInfo) ProtoMessage() {}

func (x *ActuatorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuatorInfo.ProtoReflect.Descriptor instead.
func (*ActuatorInfo) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{1}
}

func (x *ActuatorInfo) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *ActuatorInfo) GetBuildbucket() string {
	if x != nil {
		return x.Buildbucket
	}
	return ""
}

func (x *ActuatorInfo) GetBuildbucketBuilder() string {
	if x != nil {
		return x.BuildbucketBuilder
	}
	return ""
}

func (x *ActuatorInfo) GetBuildbucketBuild() int64 {
	if x != nil {
		return x.BuildbucketBuild
	}
	return 0
}

func (x *ActuatorInfo) GetScheduler() string {
	if x != nil {
		return x.Scheduler
	}
	return ""
}

func (x *ActuatorInfo) GetSchedulerJob() string {
	if x != nil {
		return x.SchedulerJob
	}
	return ""
}

func (x *ActuatorInfo) GetSchedulerInvocation() int64 {
	if x != nil {
		return x.SchedulerInvocation
	}
	return 0
}

// ActuationTrigger is round-tripped through LUCI when triggering actuations.
//
// It is converted to google.protobuf.Struct and used as `properties` in
// scheduler.BuildbucketTrigger when calling Scheduler's EmitTriggers RPC.
type ActuationTrigger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuationTrigger) Reset() {
	*x = ActuationTrigger{}
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuationTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuationTrigger) ProtoMessage() {}

func (x *ActuationTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuationTrigger.ProtoReflect.Descriptor instead.
func (*ActuationTrigger) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{2}
}

// Describes why an actuation must **not** be attempted.
//
// Multiple assets may refer to a single lock by its ID.
type ActuationLock struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique global auto-generated ID.
	Id    string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Kind  ActuationLock_Kind  `protobuf:"varint,2,opt,name=kind,proto3,enum=deploy.model.ActuationLock_Kind" json:"kind,omitempty"`
	State ActuationLock_State `protobuf:"varint,3,opt,name=state,proto3,enum=deploy.model.ActuationLock_State" json:"state,omitempty"`
	// A short human readable message describing why the lock exists.
	ReasonText string `protobuf:"bytes,4,opt,name=reason_text,json=reasonText,proto3" json:"reason_text,omitempty"`
	// An HTTP URL to the full justification (e.g. a bug or some status page).
	ReasonUrl string `protobuf:"bytes,5,opt,name=reason_url,json=reasonUrl,proto3" json:"reason_url,omitempty"`
	// When the lock was created.
	Created *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created,proto3" json:"created,omitempty"`
	// When the lock was removed (if it was).
	Removed *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=removed,proto3" json:"removed,omitempty"`
	// When the lock expires (if it is).
	Expiry *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expiry,proto3" json:"expiry,omitempty"`
	// User that created the lock (if any).
	CreatedBy string `protobuf:"bytes,9,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// User that removed the lock (if any).
	RemovedBy     string `protobuf:"bytes,10,opt,name=removed_by,json=removedBy,proto3" json:"removed_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuationLock) Reset() {
	*x = ActuationLock{}
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuationLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuationLock) ProtoMessage() {}

func (x *ActuationLock) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuationLock.ProtoReflect.Descriptor instead.
func (*ActuationLock) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{3}
}

func (x *ActuationLock) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ActuationLock) GetKind() ActuationLock_Kind {
	if x != nil {
		return x.Kind
	}
	return ActuationLock_KIND_UNSPECIFIED
}

func (x *ActuationLock) GetState() ActuationLock_State {
	if x != nil {
		return x.State
	}
	return ActuationLock_STATE_UNSPECIFIED
}

func (x *ActuationLock) GetReasonText() string {
	if x != nil {
		return x.ReasonText
	}
	return ""
}

func (x *ActuationLock) GetReasonUrl() string {
	if x != nil {
		return x.ReasonUrl
	}
	return ""
}

func (x *ActuationLock) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ActuationLock) GetRemoved() *timestamppb.Timestamp {
	if x != nil {
		return x.Removed
	}
	return nil
}

func (x *ActuationLock) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *ActuationLock) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ActuationLock) GetRemovedBy() string {
	if x != nil {
		return x.RemovedBy
	}
	return ""
}

// Defines what the actuator should do with an asset.
type ActuationDecision struct {
	state    protoimpl.MessageState     `protogen:"open.v1"`
	Decision ActuationDecision_Decision `protobuf:"varint,1,opt,name=decision,proto3,enum=deploy.model.ActuationDecision_Decision" json:"decision,omitempty"`
	// Error details for SKIP_BROKEN decision.
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// The list of active locks for this asset (if any).
	Locks         []*ActuationLock `protobuf:"bytes,3,rep,name=locks,proto3" json:"locks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuationDecision) Reset() {
	*x = ActuationDecision{}
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuationDecision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuationDecision) ProtoMessage() {}

func (x *ActuationDecision) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuationDecision.ProtoReflect.Descriptor instead.
func (*ActuationDecision) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{4}
}

func (x *ActuationDecision) GetDecision() ActuationDecision_Decision {
	if x != nil {
		return x.Decision
	}
	return ActuationDecision_DECISION_UNSPECIFIED
}

func (x *ActuationDecision) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ActuationDecision) GetLocks() []*ActuationLock {
	if x != nil {
		return x.Locks
	}
	return nil
}

// Records the decisions made when the actuation was started.
type ActuationDecisions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Per-asset decision whether to proceed with the actuation or to skip it.
	Decisions     map[string]*ActuationDecision `protobuf:"bytes,1,rep,name=decisions,proto3" json:"decisions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuationDecisions) Reset() {
	*x = ActuationDecisions{}
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuationDecisions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuationDecisions) ProtoMessage() {}

func (x *ActuationDecisions) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuationDecisions.ProtoReflect.Descriptor instead.
func (*ActuationDecisions) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP(), []int{5}
}

func (x *ActuationDecisions) GetDecisions() map[string]*ActuationDecision {
	if x != nil {
		return x.Decisions
	}
	return nil
}

var File_go_chromium_org_luci_deploy_api_modelpb_actuation_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDesc = string([]byte{
	0x0a, 0x37, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x04, 0x0a, 0x09,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x38,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x3a, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x73, 0x12, 0x34, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f,
	0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67,
	0x55, 0x72, 0x6c, 0x22, 0x55, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0b, 0x0a,
	0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x31, 0x0a, 0x14, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x12, 0x0a,
	0x10, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x22, 0xac, 0x04, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x2e, 0x4b,
	0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x32,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x79,
	0x22, 0x37, 0x0a, 0x04, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e,
	0x54, 0x49, 0x53, 0x54, 0x4f, 0x4d, 0x50, 0x10, 0x02, 0x22, 0x45, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54,
	0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x03,
	0x22, 0xcd, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x08,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x43, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x54, 0x55, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x54, 0x55, 0x41, 0x54, 0x45,
	0x5f, 0x46, 0x4f, 0x52, 0x43, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x4b, 0x49, 0x50,
	0x5f, 0x55, 0x50, 0x54, 0x4f, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x4b, 0x49, 0x50, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0f,
	0x0a, 0x0b, 0x53, 0x4b, 0x49, 0x50, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x05, 0x12,
	0x0f, 0x0a, 0x0b, 0x53, 0x4b, 0x49, 0x50, 0x5f, 0x42, 0x52, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x06,
	0x22, 0xc2, 0x01, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4d, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x64, 0x65, 0x63,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5d, 0x0a, 0x0e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescData []byte
)

func file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDesc), len(file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDescData
}

var file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_goTypes = []any{
	(Actuation_State)(0),            // 0: deploy.model.Actuation.State
	(ActuationLock_Kind)(0),         // 1: deploy.model.ActuationLock.Kind
	(ActuationLock_State)(0),        // 2: deploy.model.ActuationLock.State
	(ActuationDecision_Decision)(0), // 3: deploy.model.ActuationDecision.Decision
	(*Actuation)(nil),               // 4: deploy.model.Actuation
	(*ActuatorInfo)(nil),            // 5: deploy.model.ActuatorInfo
	(*ActuationTrigger)(nil),        // 6: deploy.model.ActuationTrigger
	(*ActuationLock)(nil),           // 7: deploy.model.ActuationLock
	(*ActuationDecision)(nil),       // 8: deploy.model.ActuationDecision
	(*ActuationDecisions)(nil),      // 9: deploy.model.ActuationDecisions
	nil,                             // 10: deploy.model.ActuationDecisions.DecisionsEntry
	(*Deployment)(nil),              // 11: deploy.model.Deployment
	(*timestamppb.Timestamp)(nil),   // 12: google.protobuf.Timestamp
	(*status.Status)(nil),           // 13: google.rpc.Status
}
var file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_depIdxs = []int32{
	0,  // 0: deploy.model.Actuation.state:type_name -> deploy.model.Actuation.State
	11, // 1: deploy.model.Actuation.deployment:type_name -> deploy.model.Deployment
	5,  // 2: deploy.model.Actuation.actuator:type_name -> deploy.model.ActuatorInfo
	6,  // 3: deploy.model.Actuation.triggers:type_name -> deploy.model.ActuationTrigger
	12, // 4: deploy.model.Actuation.created:type_name -> google.protobuf.Timestamp
	12, // 5: deploy.model.Actuation.finished:type_name -> google.protobuf.Timestamp
	12, // 6: deploy.model.Actuation.expiry:type_name -> google.protobuf.Timestamp
	13, // 7: deploy.model.Actuation.status:type_name -> google.rpc.Status
	1,  // 8: deploy.model.ActuationLock.kind:type_name -> deploy.model.ActuationLock.Kind
	2,  // 9: deploy.model.ActuationLock.state:type_name -> deploy.model.ActuationLock.State
	12, // 10: deploy.model.ActuationLock.created:type_name -> google.protobuf.Timestamp
	12, // 11: deploy.model.ActuationLock.removed:type_name -> google.protobuf.Timestamp
	12, // 12: deploy.model.ActuationLock.expiry:type_name -> google.protobuf.Timestamp
	3,  // 13: deploy.model.ActuationDecision.decision:type_name -> deploy.model.ActuationDecision.Decision
	13, // 14: deploy.model.ActuationDecision.status:type_name -> google.rpc.Status
	7,  // 15: deploy.model.ActuationDecision.locks:type_name -> deploy.model.ActuationLock
	10, // 16: deploy.model.ActuationDecisions.decisions:type_name -> deploy.model.ActuationDecisions.DecisionsEntry
	8,  // 17: deploy.model.ActuationDecisions.DecisionsEntry.value:type_name -> deploy.model.ActuationDecision
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_init() }
func file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_init() {
	if File_go_chromium_org_luci_deploy_api_modelpb_actuation_proto != nil {
		return
	}
	file_go_chromium_org_luci_deploy_api_modelpb_deployment_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDesc), len(file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_deploy_api_modelpb_actuation_proto = out.File
	file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_goTypes = nil
	file_go_chromium_org_luci_deploy_api_modelpb_actuation_proto_depIdxs = nil
}
