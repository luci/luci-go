// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/deploy/api/rpcpb/actuations.proto

package rpcpb

import (
	modelpb "go.chromium.org/luci/deploy/api/modelpb"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sent the actuator before it starts updating a deployment.
type BeginActuationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A new actuation to perform.
	//
	// Must have a new unique ID and be in EXECUTING state. If an actuation with
	// such ID already exists, this request is assumed to be a retry and handled
	// as such (perhaps producing FAILED_PRECONDITION response if something
	// doesn't add up).
	Actuation *modelpb.Actuation `protobuf:"bytes,1,opt,name=actuation,proto3" json:"actuation,omitempty"`
	// Assets to be actuated as a map asset_id => AssetToActuate.
	//
	// For each asset the BeginActuationResponse would contain the corresponding
	// ActuationDecision.
	Assets map[string]*AssetToActuate `protobuf:"bytes,2,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Metadata of all artifacts referenced in `assets`.
	Artifacts     []*modelpb.Artifact `protobuf:"bytes,3,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginActuationRequest) Reset() {
	*x = BeginActuationRequest{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginActuationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginActuationRequest) ProtoMessage() {}

func (x *BeginActuationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginActuationRequest.ProtoReflect.Descriptor instead.
func (*BeginActuationRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP(), []int{0}
}

func (x *BeginActuationRequest) GetActuation() *modelpb.Actuation {
	if x != nil {
		return x.Actuation
	}
	return nil
}

func (x *BeginActuationRequest) GetAssets() map[string]*AssetToActuate {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *BeginActuationRequest) GetArtifacts() []*modelpb.Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// AssetToActuate describes an asset the actuator is considering for actuation.
//
// Meaning of fields matches deploy.model.Asset message, see its doc for
// details.
//
// Fields `deployment` and `actuator` of AssetState will be populated based on
// corresponding fields in BeginActuationRequest and can be omitted here.
type AssetToActuate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Asset configuration as defined in the IaC repo.
	Config *modelpb.AssetConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// The intended state of the asset as defined in the IaC repo.
	IntendedState *modelpb.AssetState `protobuf:"bytes,2,opt,name=intended_state,json=intendedState,proto3" json:"intended_state,omitempty"`
	// The actual state of the asset (as scanned by the actuator).
	ReportedState *modelpb.AssetState `protobuf:"bytes,3,opt,name=reported_state,json=reportedState,proto3" json:"reported_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssetToActuate) Reset() {
	*x = AssetToActuate{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssetToActuate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetToActuate) ProtoMessage() {}

func (x *AssetToActuate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetToActuate.ProtoReflect.Descriptor instead.
func (*AssetToActuate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP(), []int{1}
}

func (x *AssetToActuate) GetConfig() *modelpb.AssetConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AssetToActuate) GetIntendedState() *modelpb.AssetState {
	if x != nil {
		return x.IntendedState
	}
	return nil
}

func (x *AssetToActuate) GetReportedState() *modelpb.AssetState {
	if x != nil {
		return x.ReportedState
	}
	return nil
}

// Describes what to to with assets reported in BeginActuationRequest.
type BeginActuationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Per-asset decision whether to proceed with the actuation or to skip it.
	Decisions     map[string]*modelpb.ActuationDecision `protobuf:"bytes,1,rep,name=decisions,proto3" json:"decisions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeginActuationResponse) Reset() {
	*x = BeginActuationResponse{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeginActuationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginActuationResponse) ProtoMessage() {}

func (x *BeginActuationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginActuationResponse.ProtoReflect.Descriptor instead.
func (*BeginActuationResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP(), []int{2}
}

func (x *BeginActuationResponse) GetDecisions() map[string]*modelpb.ActuationDecision {
	if x != nil {
		return x.Decisions
	}
	return nil
}

// Reports the outcome of an actuation.
type EndActuationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the actuation that was passed to BeginActuation RPC previously.
	ActuationId string `protobuf:"bytes,1,opt,name=actuation_id,json=actuationId,proto3" json:"actuation_id,omitempty"`
	// Error details if the actuation failed (perhaps partially).
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Link to a human-readable actuation log (if available).
	LogUrl string `protobuf:"bytes,3,opt,name=log_url,json=logUrl,proto3" json:"log_url,omitempty"`
	// The state of the actuated (non-skipped) assets post-actuation.
	Assets        map[string]*ActuatedAsset `protobuf:"bytes,4,rep,name=assets,proto3" json:"assets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndActuationRequest) Reset() {
	*x = EndActuationRequest{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndActuationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndActuationRequest) ProtoMessage() {}

func (x *EndActuationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndActuationRequest.ProtoReflect.Descriptor instead.
func (*EndActuationRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP(), []int{3}
}

func (x *EndActuationRequest) GetActuationId() string {
	if x != nil {
		return x.ActuationId
	}
	return ""
}

func (x *EndActuationRequest) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *EndActuationRequest) GetLogUrl() string {
	if x != nil {
		return x.LogUrl
	}
	return ""
}

func (x *EndActuationRequest) GetAssets() map[string]*ActuatedAsset {
	if x != nil {
		return x.Assets
	}
	return nil
}

// The state of the actuated asset post-actuation.
type ActuatedAsset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The actual state of the asset post actuation (as scanned by the actuator).
	State         *modelpb.AssetState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActuatedAsset) Reset() {
	*x = ActuatedAsset{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActuatedAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActuatedAsset) ProtoMessage() {}

func (x *ActuatedAsset) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActuatedAsset.ProtoReflect.Descriptor instead.
func (*ActuatedAsset) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP(), []int{4}
}

func (x *ActuatedAsset) GetState() *modelpb.AssetState {
	if x != nil {
		return x.State
	}
	return nil
}

// EndActuation RPC response.
type EndActuationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EndActuationResponse) Reset() {
	*x = EndActuationResponse{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndActuationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndActuationResponse) ProtoMessage() {}

func (x *EndActuationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndActuationResponse.ProtoReflect.Descriptor instead.
func (*EndActuationResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP(), []int{5}
}

var File_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDesc = string([]byte{
	0x0a, 0x36, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x37, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x70, 0x62, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x15, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x09,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x73, 0x1a, 0x59, 0x0a, 0x0b, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x54, 0x6f, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xc5, 0x01, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x6f,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xcc, 0x01, 0x0a,
	0x16, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x64, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5d, 0x0a, 0x0e,
	0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa0, 0x02, 0x0a, 0x13,
	0x45, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x47, 0x0a, 0x06, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64,
	0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x1a, 0x58, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x65, 0x64, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f,
	0x0a, 0x0d, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x2e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x16, 0x0a, 0x14, 0x45, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xc8, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5f, 0x0a, 0x0e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41,
	0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x41, 0x63,
	0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6e,
	0x64, 0x41, 0x63, 0x74, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescData []byte
)

func file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDesc), len(file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDescData
}

var file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_goTypes = []any{
	(*BeginActuationRequest)(nil),     // 0: deploy.service.BeginActuationRequest
	(*AssetToActuate)(nil),            // 1: deploy.service.AssetToActuate
	(*BeginActuationResponse)(nil),    // 2: deploy.service.BeginActuationResponse
	(*EndActuationRequest)(nil),       // 3: deploy.service.EndActuationRequest
	(*ActuatedAsset)(nil),             // 4: deploy.service.ActuatedAsset
	(*EndActuationResponse)(nil),      // 5: deploy.service.EndActuationResponse
	nil,                               // 6: deploy.service.BeginActuationRequest.AssetsEntry
	nil,                               // 7: deploy.service.BeginActuationResponse.DecisionsEntry
	nil,                               // 8: deploy.service.EndActuationRequest.AssetsEntry
	(*modelpb.Actuation)(nil),         // 9: deploy.model.Actuation
	(*modelpb.Artifact)(nil),          // 10: deploy.model.Artifact
	(*modelpb.AssetConfig)(nil),       // 11: deploy.model.AssetConfig
	(*modelpb.AssetState)(nil),        // 12: deploy.model.AssetState
	(*status.Status)(nil),             // 13: google.rpc.Status
	(*modelpb.ActuationDecision)(nil), // 14: deploy.model.ActuationDecision
}
var file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_depIdxs = []int32{
	9,  // 0: deploy.service.BeginActuationRequest.actuation:type_name -> deploy.model.Actuation
	6,  // 1: deploy.service.BeginActuationRequest.assets:type_name -> deploy.service.BeginActuationRequest.AssetsEntry
	10, // 2: deploy.service.BeginActuationRequest.artifacts:type_name -> deploy.model.Artifact
	11, // 3: deploy.service.AssetToActuate.config:type_name -> deploy.model.AssetConfig
	12, // 4: deploy.service.AssetToActuate.intended_state:type_name -> deploy.model.AssetState
	12, // 5: deploy.service.AssetToActuate.reported_state:type_name -> deploy.model.AssetState
	7,  // 6: deploy.service.BeginActuationResponse.decisions:type_name -> deploy.service.BeginActuationResponse.DecisionsEntry
	13, // 7: deploy.service.EndActuationRequest.status:type_name -> google.rpc.Status
	8,  // 8: deploy.service.EndActuationRequest.assets:type_name -> deploy.service.EndActuationRequest.AssetsEntry
	12, // 9: deploy.service.ActuatedAsset.state:type_name -> deploy.model.AssetState
	1,  // 10: deploy.service.BeginActuationRequest.AssetsEntry.value:type_name -> deploy.service.AssetToActuate
	14, // 11: deploy.service.BeginActuationResponse.DecisionsEntry.value:type_name -> deploy.model.ActuationDecision
	4,  // 12: deploy.service.EndActuationRequest.AssetsEntry.value:type_name -> deploy.service.ActuatedAsset
	0,  // 13: deploy.service.Actuations.BeginActuation:input_type -> deploy.service.BeginActuationRequest
	3,  // 14: deploy.service.Actuations.EndActuation:input_type -> deploy.service.EndActuationRequest
	2,  // 15: deploy.service.Actuations.BeginActuation:output_type -> deploy.service.BeginActuationResponse
	5,  // 16: deploy.service.Actuations.EndActuation:output_type -> deploy.service.EndActuationResponse
	15, // [15:17] is the sub-list for method output_type
	13, // [13:15] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_init() }
func file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_init() {
	if File_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDesc), len(file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto = out.File
	file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_goTypes = nil
	file_go_chromium_org_luci_deploy_api_rpcpb_actuations_proto_depIdxs = nil
}
