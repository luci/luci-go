// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/deploy/api/rpcpb/assets.proto

package rpcpb

import (
	modelpb "go.chromium.org/luci/deploy/api/modelpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAssetRequest specifies what asset to fetch.
type GetAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetRequest) Reset() {
	*x = GetAssetRequest{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetRequest) ProtoMessage() {}

func (x *GetAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetRequest.ProtoReflect.Descriptor instead.
func (*GetAssetRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescGZIP(), []int{0}
}

func (x *GetAssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

// ListAssetsRequest specifies what assets to list.
//
// Empty request means to list all available assets.
type ListAssetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescGZIP(), []int{1}
}

// ListAssetsResponse contains asset listing.
type ListAssetsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Assets in order of their IDs.
	Assets        []*modelpb.Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssetsResponse) Reset() {
	*x = ListAssetsResponse{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsResponse) ProtoMessage() {}

func (x *ListAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetsResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescGZIP(), []int{2}
}

func (x *ListAssetsResponse) GetAssets() []*modelpb.Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

// ListAssetHistoryRequest specifies what historical records to fetch.
//
// AssetHistory records have consecutive integer IDs. Newer entries have larger
// IDs. Oldest entries are periodically trimmed. As a result, possible IDs lie
// in an interval `[oldest_retained_id, last_recorded_id]`, where both ends can
// increase any time when older entries are trimmed and newer entries are
// recorded.
//
// ListAssetHistory fetches entries in reverse chronological order (the most
// recent entries with highest ID come first).
//
// If `latest_history_id` is given, it defines a range of records to fetch as
// `(latest_history_id-limit, latest_history_id]`. The response will contain
// records from intersection of this interval with interval of all possible
// IDs (as defined above).
//
// If `latest_history_id` is absent, it is assumed to be `last_recorded_id`.
//
// If `limit` is absent, it is assumed to be some default page size. It is also
// silently capped by some largish value.
type ListAssetHistoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of an asset to fetch the history of.
	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	// ID of the most recent historical entry to fetch (for pagination).
	LatestHistoryId int64 `protobuf:"varint,2,opt,name=latest_history_id,json=latestHistoryId,proto3" json:"latest_history_id,omitempty"`
	// Limit on the number of entries to fetch.
	Limit         int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssetHistoryRequest) Reset() {
	*x = ListAssetHistoryRequest{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetHistoryRequest) ProtoMessage() {}

func (x *ListAssetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListAssetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescGZIP(), []int{3}
}

func (x *ListAssetHistoryRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *ListAssetHistoryRequest) GetLatestHistoryId() int64 {
	if x != nil {
		return x.LatestHistoryId
	}
	return 0
}

func (x *ListAssetHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ListAssetHistoryResponse contains an asset and its actuation history.
type ListAssetHistoryResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Asset at its current state.
	Asset *modelpb.Asset `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	// A historical entry being recorded right now, if any.
	Current *modelpb.AssetHistory `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	// ID of the most recently recorded and committed entry (for pagination back).
	LastRecordedHistoryId int64 `protobuf:"varint,3,opt,name=last_recorded_history_id,json=lastRecordedHistoryId,proto3" json:"last_recorded_history_id,omitempty"`
	// Historical records starting with `latest_history_id`.
	History       []*modelpb.AssetHistory `protobuf:"bytes,4,rep,name=history,proto3" json:"history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssetHistoryResponse) Reset() {
	*x = ListAssetHistoryResponse{}
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetHistoryResponse) ProtoMessage() {}

func (x *ListAssetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListAssetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescGZIP(), []int{4}
}

func (x *ListAssetHistoryResponse) GetAsset() *modelpb.Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *ListAssetHistoryResponse) GetCurrent() *modelpb.AssetHistory {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *ListAssetHistoryResponse) GetLastRecordedHistoryId() int64 {
	if x != nil {
		return x.LastRecordedHistoryId
	}
	return 0
}

func (x *ListAssetHistoryResponse) GetHistory() []*modelpb.AssetHistory {
	if x != nil {
		return x.History
	}
	return nil
}

var File_go_chromium_org_luci_deploy_api_rpcpb_assets_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDesc = string([]byte{
	0x0a, 0x32, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x70, 0x62, 0x2f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22,
	0x76, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x34, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x32, 0x86, 0x02, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x40, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x21, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x27, 0x5a,
	0x25, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescData []byte
)

func file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDesc), len(file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDescData
}

var file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_goTypes = []any{
	(*GetAssetRequest)(nil),          // 0: deploy.service.GetAssetRequest
	(*ListAssetsRequest)(nil),        // 1: deploy.service.ListAssetsRequest
	(*ListAssetsResponse)(nil),       // 2: deploy.service.ListAssetsResponse
	(*ListAssetHistoryRequest)(nil),  // 3: deploy.service.ListAssetHistoryRequest
	(*ListAssetHistoryResponse)(nil), // 4: deploy.service.ListAssetHistoryResponse
	(*modelpb.Asset)(nil),            // 5: deploy.model.Asset
	(*modelpb.AssetHistory)(nil),     // 6: deploy.model.AssetHistory
}
var file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_depIdxs = []int32{
	5, // 0: deploy.service.ListAssetsResponse.assets:type_name -> deploy.model.Asset
	5, // 1: deploy.service.ListAssetHistoryResponse.asset:type_name -> deploy.model.Asset
	6, // 2: deploy.service.ListAssetHistoryResponse.current:type_name -> deploy.model.AssetHistory
	6, // 3: deploy.service.ListAssetHistoryResponse.history:type_name -> deploy.model.AssetHistory
	0, // 4: deploy.service.Assets.GetAsset:input_type -> deploy.service.GetAssetRequest
	1, // 5: deploy.service.Assets.ListAssets:input_type -> deploy.service.ListAssetsRequest
	3, // 6: deploy.service.Assets.ListAssetHistory:input_type -> deploy.service.ListAssetHistoryRequest
	5, // 7: deploy.service.Assets.GetAsset:output_type -> deploy.model.Asset
	2, // 8: deploy.service.Assets.ListAssets:output_type -> deploy.service.ListAssetsResponse
	4, // 9: deploy.service.Assets.ListAssetHistory:output_type -> deploy.service.ListAssetHistoryResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_init() }
func file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_init() {
	if File_go_chromium_org_luci_deploy_api_rpcpb_assets_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDesc), len(file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_deploy_api_rpcpb_assets_proto = out.File
	file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_goTypes = nil
	file_go_chromium_org_luci_deploy_api_rpcpb_assets_proto_depIdxs = nil
}
