runtime: go123

# This is needed to use GAE Mail API via `mailer` module.
# app_engine_apis: true

# Note: this is interpreted by gae.py, it maps the app ID being deployed to
# values of ${...} vars.
#
# This configuration is only used for developer testing. The
# configuration used for development and production instances is
# contained in the infradata/gae repo. Refer to LUCI GAE Automatic
# Deployment for more (go/luci/how_to_deploy.md) (Googlers only).
luci_gae_vars:
  luci-tree-status-dev:
    AUTH_SERVICE_HOST: chrome-infra-auth-dev.appspot.com
    CRON_AUTHORIZED_CALLER: cloud-scheduler-jobs@luci-tree-status-dev.iam.gserviceaccount.com
    CONFIG_SERVICE_HOST: config.luci.app
    OAUTH_CLIENT_ID: 713057630411-eqah8ap1ptgnf4nnepk10sutqg0msiv1.apps.googleusercontent.com
    SPANNER_DB: projects/luci-tree-status-dev/instances/dev/databases/luci-tree-status-dev
    TQ_PUSH_AS: cloud-tasks-pusher@luci-tree-status-dev.iam.gserviceaccount.com
    TQ_TARGET_HOST: staging.treestatus.api.luci.app

handlers:
- url: /.*
  script: auto
  secure: always

inbound_services:
- warmup

entrypoint: >
  main
  -auth-service-host ${AUTH_SERVICE_HOST}
  -config-service-host ${CONFIG_SERVICE_HOST}
  -cron-authorized-caller ${CRON_AUTHORIZED_CALLER}
  -frontend-client-id ${OAUTH_CLIENT_ID}
  -gerrit-auth-signer-account gerritcodereview@system.gserviceaccount.com
  -gerrit-auth-signer-account git-gerrit@system.gserviceaccount.com
  -gerrit-auth-audience https://api.cr.dev
  -spanner-database ${SPANNER_DB}
  -tq-default-target-host ${TQ_TARGET_HOST}
  -tq-push-as ${TQ_PUSH_AS}
  -tq-sweep-initiation-launcher ${CRON_AUTHORIZED_CALLER}
