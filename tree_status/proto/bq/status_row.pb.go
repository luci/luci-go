// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/tree_status/proto/bq/status_row.proto

package bqpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a row in the table `luci-tree-status.internal.statuses`.
type StatusRow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the tree, e.g. chromium.
	TreeName string `protobuf:"bytes,1,opt,name=tree_name,json=treeName,proto3" json:"tree_name,omitempty"`
	// Possible values: 'open', 'closed', 'throttled' or 'maintenance'.
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// The message provided with the status update.
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	// If the status was created by a bot (service account), it will contain the service account.
	// Otherwise, it will just contain "user", as we don't want BigQuery to contain PII.
	CreateUser string `protobuf:"bytes,4,opt,name=create_user,json=createUser,proto3" json:"create_user,omitempty"`
	// The timestamp when this status was posted.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The LUCI builder name that caused the tree to close.
	// Only applicable if the status is 'closed'.
	ClosingBuilder *Builder `protobuf:"bytes,6,opt,name=closing_builder,json=closingBuilder,proto3" json:"closing_builder,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StatusRow) Reset() {
	*x = StatusRow{}
	mi := &file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRow) ProtoMessage() {}

func (x *StatusRow) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRow.ProtoReflect.Descriptor instead.
func (*StatusRow) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescGZIP(), []int{0}
}

func (x *StatusRow) GetTreeName() string {
	if x != nil {
		return x.TreeName
	}
	return ""
}

func (x *StatusRow) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusRow) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusRow) GetCreateUser() string {
	if x != nil {
		return x.CreateUser
	}
	return ""
}

func (x *StatusRow) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *StatusRow) GetClosingBuilder() *Builder {
	if x != nil {
		return x.ClosingBuilder
	}
	return nil
}

// Represents a LUCI builder.
type Builder struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI project (e.g. chromium).
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The LUCI bucket (e.g. ci).
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// The LUCI builder name (e.g. linux-rel).
	Builder       string `protobuf:"bytes,3,opt,name=builder,proto3" json:"builder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Builder) Reset() {
	*x = Builder{}
	mi := &file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Builder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Builder) ProtoMessage() {}

func (x *Builder) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Builder.ProtoReflect.Descriptor instead.
func (*Builder) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescGZIP(), []int{1}
}

func (x *Builder) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Builder) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *Builder) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

var File_go_chromium_org_luci_tree_status_proto_bq_status_row_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDesc = string([]byte{
	0x0a, 0x3a, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x72, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x62,
	0x71, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xff, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x6f, 0x77,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x45, 0x0a,
	0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x74, 0x72,
	0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x07, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x42, 0x30, 0x5a, 0x2e, 0x67,
	0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c,
	0x75, 0x63, 0x69, 0x2f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x3b, 0x62, 0x71, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDesc), len(file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDescData
}

var file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_goTypes = []any{
	(*StatusRow)(nil),             // 0: luci.tree_status.bq.StatusRow
	(*Builder)(nil),               // 1: luci.tree_status.bq.Builder
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_depIdxs = []int32{
	2, // 0: luci.tree_status.bq.StatusRow.create_time:type_name -> google.protobuf.Timestamp
	1, // 1: luci.tree_status.bq.StatusRow.closing_builder:type_name -> luci.tree_status.bq.Builder
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_init() }
func file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_init() {
	if File_go_chromium_org_luci_tree_status_proto_bq_status_row_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDesc), len(file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_tree_status_proto_bq_status_row_proto = out.File
	file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_goTypes = nil
	file_go_chromium_org_luci_tree_status_proto_bq_status_row_proto_depIdxs = nil
}
