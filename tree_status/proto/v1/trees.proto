// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.tree_status.v1;

option go_package = "go.chromium.org/luci/tree_status/proto/v1";

// Service to list valid LUCI trees.
//
// Use of LUCI is subject to the Google [Terms of Service](https://policies.google.com/terms)
// and [Privacy Policy](https://policies.google.com/privacy).
service Trees {
  // Get information of a tree.
  rpc GetTree(GetTreeRequest) returns (Tree) {};
  // Query tree for a LUCI project.
  rpc QueryTrees(QueryTreesRequest) returns (QueryTreesResponse) {};
}

message GetTreeRequest {
  // Format: "trees/{tree_id}"
  string name = 1;
}

message QueryTreesRequest {
  // The LUCI project to query tree name.
  string project = 1;
}

message QueryTreesResponse {
  // List of trees attached to the project.
  // If there are more than 1 tree attached to a project, the results
  // will be sorted ascendingly based on tree name.
  repeated Tree trees = 1;
}

message Tree {
  // Name of the tree, in format "trees/{tree_id}".
  string name = 1;
  // The LUCI projects that the tree applies to..
  // The first project in this list is the primary project. This means:
  //   1. Its "<project>:<subrealm>" realm will be used to check
  //      for ACL for the tree, if the tree uses realm-based ACL.
  //   2. If the tree is access without a LUCI project context, the primary project
  //      will be displayed at the top left of LUCI UI.
  repeated string projects = 2;
}
