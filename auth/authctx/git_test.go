// Copyright 2019 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package authctx

import (
	"os"
	"path/filepath"
	"testing"

	"go.chromium.org/luci/common/testing/ftt"
	"go.chromium.org/luci/common/testing/truth/assert"
	"go.chromium.org/luci/common/testing/truth/should"
)

func TestGitConfig(t *testing.T) {
	t.Parallel()

	ftt.Run("Works", t, func(t *ftt.Test) {
		tmp, err := os.MkdirTemp("", "")
		assert.Loosely(t, err, should.BeNil)
		defer os.RemoveAll(tmp)

		gen := func(name string, cfg gitConfig) string {
			assert.Loosely(t, cfg.Write(filepath.Join(tmp, name)), should.BeNil)
			body, err := os.ReadFile(filepath.Join(tmp, name))
			assert.Loosely(t, err, should.BeNil)
			return string(body)
		}

		cfg := gitConfig{
			IsWindows:           false,
			UserEmail:           "email@example.com",
			UserName:            "name",
			UseCredentialHelper: true,
			KnownGerritHosts:    []string{"host-a", "host-b"},
		}

		assert.Loosely(t, gen("unix", cfg), should.Equal(`# Autogenerated.

[user]
  email = email@example.com
  name = name

[core]
  deltaBaseCacheLimit = 2g

[pack]
  packSizeLimit = 2g

# Reduce noise.
[advice]
  detachedHead = false

[http]
  version = HTTP/1.1
  # Request the GFE return debug headers as an encrypted blob in
  # X-Encrypted-Debug-Headers.
  extraheader = X-Return-Encrypted-Headers: all

[gc]
  autodetach = false

[credential]
  helper =
  helper = luci

[url "https://host-a/a/"]
  insteadOf = https://host-a/a/
  insteadOf = https://host-a/

[url "https://host-b/a/"]
  insteadOf = https://host-b/a/
  insteadOf = https://host-b/
`))

		cfg.IsWindows = true
		assert.Loosely(t, gen("win", cfg), should.Equal(`# Autogenerated.

[user]
  email = email@example.com
  name = name

[core]
  deltaBaseCacheLimit = 2g
  fscache = true
  symlinks = false
  autocrlf = false
  filemode = false

[pack]
  packSizeLimit = 2g

# Reduce noise.
[advice]
  detachedHead = false

[http]
  version = HTTP/1.1
  # Request the GFE return debug headers as an encrypted blob in
  # X-Encrypted-Debug-Headers.
  extraheader = X-Return-Encrypted-Headers: all

[diff "astextplain"]
  textconv = astextplain

[gc]
  autodetach = false

[credential]
  helper =
  helper = luci

[url "https://host-a/a/"]
  insteadOf = https://host-a/a/
  insteadOf = https://host-a/

[url "https://host-b/a/"]
  insteadOf = https://host-b/a/
  insteadOf = https://host-b/
`))
	})
}
