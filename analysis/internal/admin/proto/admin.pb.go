// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/analysis/internal/admin/proto/admin.proto

package adminpb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A request to backfill the test_results BigQuery table.
type BackfillTestResultsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The first day to backfill (inclusive).
	StartDay *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_day,json=startDay,proto3" json:"start_day,omitempty"`
	// The last day to backfill (exclusive).
	EndDay        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_day,json=endDay,proto3" json:"end_day,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackfillTestResultsRequest) Reset() {
	*x = BackfillTestResultsRequest{}
	mi := &file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackfillTestResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillTestResultsRequest) ProtoMessage() {}

func (x *BackfillTestResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillTestResultsRequest.ProtoReflect.Descriptor instead.
func (*BackfillTestResultsRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescGZIP(), []int{0}
}

func (x *BackfillTestResultsRequest) GetStartDay() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDay
	}
	return nil
}

func (x *BackfillTestResultsRequest) GetEndDay() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDay
	}
	return nil
}

// A response for BackfillTestResults RPC.
type BackfillTestResultsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of days for which backfill was scheduled.
	DaysScheduled int32 `protobuf:"varint,1,opt,name=days_scheduled,json=daysScheduled,proto3" json:"days_scheduled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackfillTestResultsResponse) Reset() {
	*x = BackfillTestResultsResponse{}
	mi := &file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackfillTestResultsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackfillTestResultsResponse) ProtoMessage() {}

func (x *BackfillTestResultsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackfillTestResultsResponse.ProtoReflect.Descriptor instead.
func (*BackfillTestResultsResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescGZIP(), []int{1}
}

func (x *BackfillTestResultsResponse) GetDaysScheduled() int32 {
	if x != nil {
		return x.DaysScheduled
	}
	return 0
}

var File_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDesc = string([]byte{
	0x0a, 0x3e, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1c, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8a, 0x01, 0x0a, 0x1a, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x79, 0x12, 0x33, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x22, 0x44, 0x0a, 0x1b,
	0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x61, 0x79, 0x73, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x61, 0x79, 0x73, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x32, 0x96, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x8c, 0x01, 0x0a,
	0x13, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x12, 0x38, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x42, 0x61,
	0x63, 0x6b, 0x66, 0x69, 0x6c, 0x6c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67,
	0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c,
	0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDesc), len(file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_goTypes = []any{
	(*BackfillTestResultsRequest)(nil),  // 0: luci.analysis.internal.admin.BackfillTestResultsRequest
	(*BackfillTestResultsResponse)(nil), // 1: luci.analysis.internal.admin.BackfillTestResultsResponse
	(*timestamppb.Timestamp)(nil),       // 2: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_depIdxs = []int32{
	2, // 0: luci.analysis.internal.admin.BackfillTestResultsRequest.start_day:type_name -> google.protobuf.Timestamp
	2, // 1: luci.analysis.internal.admin.BackfillTestResultsRequest.end_day:type_name -> google.protobuf.Timestamp
	0, // 2: luci.analysis.internal.admin.Admin.BackfillTestResults:input_type -> luci.analysis.internal.admin.BackfillTestResultsRequest
	1, // 3: luci.analysis.internal.admin.Admin.BackfillTestResults:output_type -> luci.analysis.internal.admin.BackfillTestResultsResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_init() }
func file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_init() {
	if File_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDesc), len(file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto = out.File
	file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_internal_admin_proto_admin_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	// Initiates backfill of test results in the test_results BigQuery table.
	BackfillTestResults(ctx context.Context, in *BackfillTestResultsRequest, opts ...grpc.CallOption) (*BackfillTestResultsResponse, error)
}
type adminPRPCClient struct {
	client *prpc.Client
}

func NewAdminPRPCClient(client *prpc.Client) AdminClient {
	return &adminPRPCClient{client}
}

func (c *adminPRPCClient) BackfillTestResults(ctx context.Context, in *BackfillTestResultsRequest, opts ...grpc.CallOption) (*BackfillTestResultsResponse, error) {
	out := new(BackfillTestResultsResponse)
	err := c.client.Call(ctx, "luci.analysis.internal.admin.Admin", "BackfillTestResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type adminClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminClient(cc grpc.ClientConnInterface) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) BackfillTestResults(ctx context.Context, in *BackfillTestResultsRequest, opts ...grpc.CallOption) (*BackfillTestResultsResponse, error) {
	out := new(BackfillTestResultsResponse)
	err := c.cc.Invoke(ctx, "/luci.analysis.internal.admin.Admin/BackfillTestResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	// Initiates backfill of test results in the test_results BigQuery table.
	BackfillTestResults(context.Context, *BackfillTestResultsRequest) (*BackfillTestResultsResponse, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) BackfillTestResults(context.Context, *BackfillTestResultsRequest) (*BackfillTestResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackfillTestResults not implemented")
}

func RegisterAdminServer(s prpc.Registrar, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_BackfillTestResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackfillTestResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).BackfillTestResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.internal.admin.Admin/BackfillTestResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).BackfillTestResults(ctx, req.(*BackfillTestResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.analysis.internal.admin.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BackfillTestResults",
			Handler:    _Admin_BackfillTestResults_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/analysis/internal/admin/proto/admin.proto",
}
