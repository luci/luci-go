// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/analysis/internal/ingestion/control/proto/control.proto

package controlpb

import (
	v1 "go.chromium.org/luci/analysis/proto/v1"
	proto "go.chromium.org/luci/buildbucket/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BuildResult represents the information about a buildbucket build
// that should be passed to the result ingestion task.
//
// NextId: 15.
type BuildResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Buildbucket build ID, unique per Buildbucket instance.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Buildbucket host, e.g. "cr-buildbucket.appspot.com".
	Host string `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// The time the build was created.
	CreationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	// The LUCI Project to which the build belongs.
	Project string `protobuf:"bytes,4,opt,name=project,proto3" json:"project,omitempty"`
	// The bucket the builder is a part of. E.g. "try".
	Bucket string `protobuf:"bytes,13,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// The builder this build was a part of.
	Builder string `protobuf:"bytes,5,opt,name=builder,proto3" json:"builder,omitempty"`
	// The ending status of the build. E.g. Canceled, Success, Failure, Infra failure.
	Status v1.BuildStatus `protobuf:"varint,6,opt,name=status,proto3,enum=luci.analysis.v1.BuildStatus" json:"status,omitempty"`
	// The version of code (excluding any unsubmitted changelists) that was
	// tested by the build. This is the base commit ontop of which any
	// changelists are applied.
	Commit *proto.GitilesCommit `protobuf:"bytes,8,opt,name=commit,proto3" json:"commit,omitempty"`
	// Whether this buildbucket build has a ResultDB invocation. If true,
	// the invocation is named "build-{id}".
	HasInvocation bool `protobuf:"varint,9,opt,name=has_invocation,json=hasInvocation,proto3" json:"has_invocation,omitempty"`
	// The ResultDB host which contains the ResultDB invocation of this
	// build. Only populated if has_invocation is set.
	ResultdbHost string `protobuf:"bytes,10,opt,name=resultdb_host,json=resultdbHost,proto3" json:"resultdb_host,omitempty"`
	// The changelists that were tested by the build.
	Changelists []*v1.Changelist `protobuf:"bytes,12,rep,name=changelists,proto3" json:"changelists,omitempty"`
	// The gardener rotations corresponding to this build. This corresponds to
	// the "sheriff_rotations" field of the build input properties.
	GardenerRotations []string `protobuf:"bytes,14,rep,name=gardener_rotations,json=gardenerRotations,proto3" json:"gardener_rotations,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BuildResult) Reset() {
	*x = BuildResult{}
	mi := &file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResult) ProtoMessage() {}

func (x *BuildResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResult.ProtoReflect.Descriptor instead.
func (*BuildResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescGZIP(), []int{0}
}

func (x *BuildResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuildResult) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *BuildResult) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *BuildResult) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *BuildResult) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *BuildResult) GetBuilder() string {
	if x != nil {
		return x.Builder
	}
	return ""
}

func (x *BuildResult) GetStatus() v1.BuildStatus {
	if x != nil {
		return x.Status
	}
	return v1.BuildStatus(0)
}

func (x *BuildResult) GetCommit() *proto.GitilesCommit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *BuildResult) GetHasInvocation() bool {
	if x != nil {
		return x.HasInvocation
	}
	return false
}

func (x *BuildResult) GetResultdbHost() string {
	if x != nil {
		return x.ResultdbHost
	}
	return ""
}

func (x *BuildResult) GetChangelists() []*v1.Changelist {
	if x != nil {
		return x.Changelists
	}
	return nil
}

func (x *BuildResult) GetGardenerRotations() []string {
	if x != nil {
		return x.GardenerRotations
	}
	return nil
}

// PresubmitResult represents the result from the presubmit pub/sub
// that should be passed to the result ingestion task.
type PresubmitResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identity of the presubmit run. If the ingestion does not relate to test
	// results obtained in a presubmit run, this field should not be set.
	PresubmitRunId *v1.PresubmitRunId `protobuf:"bytes,1,opt,name=presubmit_run_id,json=presubmitRunId,proto3" json:"presubmit_run_id,omitempty"`
	// The ending status of the presubmit run. E.g. Canceled, Success, Failure.
	Status v1.PresubmitRunStatus `protobuf:"varint,9,opt,name=status,proto3,enum=luci.analysis.v1.PresubmitRunStatus" json:"status,omitempty"`
	// The presubmit run mode.
	// E.g. FULL_RUN, DRY_RUN, QUICK_DRY_RUN.
	Mode v1.PresubmitRunMode `protobuf:"varint,8,opt,name=mode,proto3,enum=luci.analysis.v1.PresubmitRunMode" json:"mode,omitempty"`
	// The owner of the presubmit run (if any).
	// This is the owner of the CL on which CQ+1/CQ+2 was clicked
	// (even in case of presubmit run with multiple CLs).
	// There is scope for this field to become an email address if privacy
	// approval is obtained, until then it is "automation" (for automation
	// service accounts) and "user" otherwise.
	Owner string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
	// The time the presubmit was created.
	CreationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	// Whether the build was critical to the completion of the presubmit run.
	// True if the failure of the build would cause the presubmit run to fail.
	Critical      bool `protobuf:"varint,7,opt,name=critical,proto3" json:"critical,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresubmitResult) Reset() {
	*x = PresubmitResult{}
	mi := &file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresubmitResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresubmitResult) ProtoMessage() {}

func (x *PresubmitResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresubmitResult.ProtoReflect.Descriptor instead.
func (*PresubmitResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescGZIP(), []int{1}
}

func (x *PresubmitResult) GetPresubmitRunId() *v1.PresubmitRunId {
	if x != nil {
		return x.PresubmitRunId
	}
	return nil
}

func (x *PresubmitResult) GetStatus() v1.PresubmitRunStatus {
	if x != nil {
		return x.Status
	}
	return v1.PresubmitRunStatus(0)
}

func (x *PresubmitResult) GetMode() v1.PresubmitRunMode {
	if x != nil {
		return x.Mode
	}
	return v1.PresubmitRunMode(0)
}

func (x *PresubmitResult) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *PresubmitResult) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

func (x *PresubmitResult) GetCritical() bool {
	if x != nil {
		return x.Critical
	}
	return false
}

// InvocationResult represents the result from the invocation finalization
// pub/sub that should be passed to the result ingestion task.
type InvocationResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ResultDB host which contains this ResultDB invocation.
	ResultdbHost string `protobuf:"bytes,1,opt,name=resultdb_host,json=resultdbHost,proto3" json:"resultdb_host,omitempty"`
	// The id of this invocation.
	InvocationId string `protobuf:"bytes,2,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// The time the invocation was created.
	CreationTime  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=creation_time,json=creationTime,proto3" json:"creation_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvocationResult) Reset() {
	*x = InvocationResult{}
	mi := &file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvocationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvocationResult) ProtoMessage() {}

func (x *InvocationResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvocationResult.ProtoReflect.Descriptor instead.
func (*InvocationResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescGZIP(), []int{2}
}

func (x *InvocationResult) GetResultdbHost() string {
	if x != nil {
		return x.ResultdbHost
	}
	return ""
}

func (x *InvocationResult) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *InvocationResult) GetCreationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationTime
	}
	return nil
}

var File_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDesc = string([]byte{
	0x0a, 0x4c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x67, 0x6f, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x03, 0x0a, 0x0b, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x76, 0x32, 0x2e, 0x47, 0x69, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x5f, 0x68, 0x6f, 0x73, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x65, 0x72,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x11, 0x67, 0x61, 0x72, 0x64, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x75,
	0x6e, 0x49, 0x64, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x75,
	0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x75, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x4a, 0x04, 0x08, 0x02,
	0x10, 0x03, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x07, 0x22, 0x9d,
	0x01, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x64, 0x62, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x64, 0x62, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x4a,
	0x5a, 0x48, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDesc), len(file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_goTypes = []any{
	(*BuildResult)(nil),           // 0: luci.analysis.internal.ingestion.control.BuildResult
	(*PresubmitResult)(nil),       // 1: luci.analysis.internal.ingestion.control.PresubmitResult
	(*InvocationResult)(nil),      // 2: luci.analysis.internal.ingestion.control.InvocationResult
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(v1.BuildStatus)(0),           // 4: luci.analysis.v1.BuildStatus
	(*proto.GitilesCommit)(nil),   // 5: buildbucket.v2.GitilesCommit
	(*v1.Changelist)(nil),         // 6: luci.analysis.v1.Changelist
	(*v1.PresubmitRunId)(nil),     // 7: luci.analysis.v1.PresubmitRunId
	(v1.PresubmitRunStatus)(0),    // 8: luci.analysis.v1.PresubmitRunStatus
	(v1.PresubmitRunMode)(0),      // 9: luci.analysis.v1.PresubmitRunMode
}
var file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_depIdxs = []int32{
	3, // 0: luci.analysis.internal.ingestion.control.BuildResult.creation_time:type_name -> google.protobuf.Timestamp
	4, // 1: luci.analysis.internal.ingestion.control.BuildResult.status:type_name -> luci.analysis.v1.BuildStatus
	5, // 2: luci.analysis.internal.ingestion.control.BuildResult.commit:type_name -> buildbucket.v2.GitilesCommit
	6, // 3: luci.analysis.internal.ingestion.control.BuildResult.changelists:type_name -> luci.analysis.v1.Changelist
	7, // 4: luci.analysis.internal.ingestion.control.PresubmitResult.presubmit_run_id:type_name -> luci.analysis.v1.PresubmitRunId
	8, // 5: luci.analysis.internal.ingestion.control.PresubmitResult.status:type_name -> luci.analysis.v1.PresubmitRunStatus
	9, // 6: luci.analysis.internal.ingestion.control.PresubmitResult.mode:type_name -> luci.analysis.v1.PresubmitRunMode
	3, // 7: luci.analysis.internal.ingestion.control.PresubmitResult.creation_time:type_name -> google.protobuf.Timestamp
	3, // 8: luci.analysis.internal.ingestion.control.InvocationResult.creation_time:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_init() }
func file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_init() {
	if File_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDesc), len(file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto = out.File
	file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_internal_ingestion_control_proto_control_proto_depIdxs = nil
}
