// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/analysis/proto/bq/failure_attribute_row.proto

package bqpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FailureAttributeRow represents a row in a BigQuery table,
// `failure_attrbiutes`, that records the additional attributes of a test
// failure.
// Next ID: 7.
type FailureAttributeRow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI project that the test failure belongs to.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The test results system from which the test originated.
	//
	// Currently, the only valid value is "resultdb".
	TestResultSystem string `protobuf:"bytes,2,opt,name=test_result_system,json=testResultSystem,proto3" json:"test_result_system,omitempty"`
	// The invocation from which this test result was ingested. This is
	// the top-level invocation that was ingested, an "invocation" being
	// a container of test results as identified by the source test result
	// system.
	//
	// For ResultDB, LUCI Analysis ingests invocations corresponding to
	// buildbucket builds.
	//
	// All test results ingested from the same invocation (i.e. with the
	// same ingested_invocation_id) will have the same partition time.
	IngestedInvocationId string `protobuf:"bytes,3,opt,name=ingested_invocation_id,json=ingestedInvocationId,proto3" json:"ingested_invocation_id,omitempty"`
	// The identity of the test result in the test results system. Together
	// with the test results sytstem, this uniquely identifies the test result
	// that was clustered.
	//
	// For test results in ResultDB, the format is:
	// "invocations/{INVOCATION_ID}/tests/{URL_ESCAPED_TEST_ID}/results/{RESULT_ID}"
	// Where INVOCATION_ID, URL_ESCAPED_TEST_ID and RESULT_ID are values
	// defined in ResultDB.
	//
	// Note that the test result ID is split over two fields (test_result_system,
	// test_result_id), rather than as one field with a record type, so that
	// BigQuery clustering can be defined over the ID (not possible if a
	// record type was used).
	TestResultId string `protobuf:"bytes,4,opt,name=test_result_id,json=testResultId,proto3" json:"test_result_id,omitempty"`
	// The test result partition time identifies the beginning of the test
	// result retention period, and is equal to the time the ingested invocation
	// was created in Spanner.
	PartitionTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=partition_time,json=partitionTime,proto3" json:"partition_time,omitempty"`
	// The number of test runs that filtered out the test due to this failure.
	//
	// Conceptually, a test scheduler may decide to filter out certain tests when
	// it sees the tests failed in some places. This field records the number of
	// test runs that filerterd out the test due to this failure. The exact
	// attribution rule (to determine which failures triggered the test filtering)
	// is up to the implementation.
	//
	// For now, this field records the number of skipped runs caused by
	// go/cros-test-filtering, and the attribution rule is defined in
	// go/attribute-test-filtering-events-to-failures.
	AttributedFilteredRunCount int64 `protobuf:"varint,6,opt,name=attributed_filtered_run_count,json=attributedFilteredRunCount,proto3" json:"attributed_filtered_run_count,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *FailureAttributeRow) Reset() {
	*x = FailureAttributeRow{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureAttributeRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureAttributeRow) ProtoMessage() {}

func (x *FailureAttributeRow) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureAttributeRow.ProtoReflect.Descriptor instead.
func (*FailureAttributeRow) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescGZIP(), []int{0}
}

func (x *FailureAttributeRow) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *FailureAttributeRow) GetTestResultSystem() string {
	if x != nil {
		return x.TestResultSystem
	}
	return ""
}

func (x *FailureAttributeRow) GetIngestedInvocationId() string {
	if x != nil {
		return x.IngestedInvocationId
	}
	return ""
}

func (x *FailureAttributeRow) GetTestResultId() string {
	if x != nil {
		return x.TestResultId
	}
	return ""
}

func (x *FailureAttributeRow) GetPartitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PartitionTime
	}
	return nil
}

func (x *FailureAttributeRow) GetAttributedFilteredRunCount() int64 {
	if x != nil {
		return x.AttributedFilteredRunCount
	}
	return 0
}

var File_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDesc = string([]byte{
	0x0a, 0x42, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x02, 0x0a, 0x13, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x6f, 0x77, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x75,
	0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x6f, 0x2e,
	0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63,
	0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x62, 0x71, 0x3b, 0x62, 0x71, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_goTypes = []any{
	(*FailureAttributeRow)(nil),   // 0: luci.analysis.bq.FailureAttributeRow
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_depIdxs = []int32{
	1, // 0: luci.analysis.bq.FailureAttributeRow.partition_time:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_init() }
func file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto = out.File
	file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_bq_failure_attribute_row_proto_depIdxs = nil
}
