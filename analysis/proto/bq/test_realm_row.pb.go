// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/analysis/proto/bq/test_realm_row.proto

package bqpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a distinct (test, realm) pair observed in a LUCI Project.
// Supports the test search implementation.
//
// Primary key (test_variant_segments): project, test_id, realm.
type TestRealmRow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI Project. E.g. "chromium".
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// A unique identifier of the test in a LUCI project, excluding variant.
	//
	// This is the flat-form encoding of the structured test variant ID above.
	TestId string `protobuf:"bytes,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// The realm within the project that this test was found.
	Realm string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	// A unique identifier of the test in a LUCI project, excluding variant,
	// in lower case.
	// For case-insensitive matching.
	TestIdLower string `protobuf:"bytes,4,opt,name=test_id_lower,json=testIdLower,proto3" json:"test_id_lower,omitempty"`
	// The structured test identifier, excluding variant information.
	// For structured test ID search.
	TestIdStructured *TestIdentifierBase `protobuf:"bytes,5,opt,name=test_id_structured,json=testIdStructured,proto3" json:"test_id_structured,omitempty"`
	// The structured test identifier in lower case, excluding variant information.
	// For case-insensitive structured test ID search.
	TestIdStructuredLower *TestIdentifierBase `protobuf:"bytes,6,opt,name=test_id_structured_lower,json=testIdStructuredLower,proto3" json:"test_id_structured_lower,omitempty"`
	// The partition time of the last test result observed for this test realm.
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestRealmRow) Reset() {
	*x = TestRealmRow{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRealmRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRealmRow) ProtoMessage() {}

func (x *TestRealmRow) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRealmRow.ProtoReflect.Descriptor instead.
func (*TestRealmRow) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescGZIP(), []int{0}
}

func (x *TestRealmRow) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *TestRealmRow) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *TestRealmRow) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *TestRealmRow) GetTestIdLower() string {
	if x != nil {
		return x.TestIdLower
	}
	return ""
}

func (x *TestRealmRow) GetTestIdStructured() *TestIdentifierBase {
	if x != nil {
		return x.TestIdStructured
	}
	return nil
}

func (x *TestRealmRow) GetTestIdStructuredLower() *TestIdentifierBase {
	if x != nil {
		return x.TestIdStructuredLower
	}
	return nil
}

func (x *TestRealmRow) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

var File_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDesc = string([]byte{
	0x0a, 0x3b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x6c, 0x6d, 0x5f, 0x72, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c,
	0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x33, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x02, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x61, 0x6c, 0x6d, 0x52, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61,
	0x6c, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12,
	0x22, 0x0a, 0x0d, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x4c, 0x6f,
	0x77, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x12, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x62, 0x71, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x10, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x18, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x15, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x64, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73,
	0x65, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x42,
	0x2d, 0x5a, 0x2b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x3b, 0x62, 0x71, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_goTypes = []any{
	(*TestRealmRow)(nil),          // 0: luci.analysis.bq.TestRealmRow
	(*TestIdentifierBase)(nil),    // 1: luci.analysis.bq.TestIdentifierBase
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_depIdxs = []int32{
	1, // 0: luci.analysis.bq.TestRealmRow.test_id_structured:type_name -> luci.analysis.bq.TestIdentifierBase
	1, // 1: luci.analysis.bq.TestRealmRow.test_id_structured_lower:type_name -> luci.analysis.bq.TestIdentifierBase
	2, // 2: luci.analysis.bq.TestRealmRow.last_seen:type_name -> google.protobuf.Timestamp
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_init() }
func file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto != nil {
		return
	}
	file_go_chromium_org_luci_analysis_proto_bq_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto = out.File
	file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_bq_test_realm_row_proto_depIdxs = nil
}
