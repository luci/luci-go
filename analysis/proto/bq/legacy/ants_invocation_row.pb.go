// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/analysis/proto/bq/legacy/ants_invocation_row.proto

package bqpb

import (
	_ "go.chromium.org/luci/common/bq/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The possible states an Invocation or WorkUnit can be in. `COMPLETED`, `ERROR`,
// and `CANCELLED` states are considered final states.
type AntsInvocationRow_SchedulerState int32

const (
	AntsInvocationRow_SCHEDULER_STATE_UNSPECIFIED AntsInvocationRow_SchedulerState = 0
	AntsInvocationRow_QUEUED                      AntsInvocationRow_SchedulerState = 1
	// Invocation or WorkUnit is currently running tests.
	AntsInvocationRow_RUNNING AntsInvocationRow_SchedulerState = 2
	// Invocation or WorkUnit finished running tests and reported an error. This is
	// considered a final state.
	AntsInvocationRow_ERROR AntsInvocationRow_SchedulerState = 3
	// Invocation or WorkUnit finished running tests without an error. This is
	// considered a final state.
	AntsInvocationRow_COMPLETED AntsInvocationRow_SchedulerState = 4
	// Invocation or WorkUnit was cancelled before it could finish. This could be
	// due to a user cancelling a test or due to a timeout. This is considered a
	// final state.
	AntsInvocationRow_CANCELLED AntsInvocationRow_SchedulerState = 5
	// Invocation is pending to be picked up.
	AntsInvocationRow_PENDING AntsInvocationRow_SchedulerState = 6
)

// Enum value maps for AntsInvocationRow_SchedulerState.
var (
	AntsInvocationRow_SchedulerState_name = map[int32]string{
		0: "SCHEDULER_STATE_UNSPECIFIED",
		1: "QUEUED",
		2: "RUNNING",
		3: "ERROR",
		4: "COMPLETED",
		5: "CANCELLED",
		6: "PENDING",
	}
	AntsInvocationRow_SchedulerState_value = map[string]int32{
		"SCHEDULER_STATE_UNSPECIFIED": 0,
		"QUEUED":                      1,
		"RUNNING":                     2,
		"ERROR":                       3,
		"COMPLETED":                   4,
		"CANCELLED":                   5,
		"PENDING":                     6,
	}
)

func (x AntsInvocationRow_SchedulerState) Enum() *AntsInvocationRow_SchedulerState {
	p := new(AntsInvocationRow_SchedulerState)
	*p = x
	return p
}

func (x AntsInvocationRow_SchedulerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AntsInvocationRow_SchedulerState) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_enumTypes[0].Descriptor()
}

func (AntsInvocationRow_SchedulerState) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_enumTypes[0]
}

func (x AntsInvocationRow_SchedulerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AntsInvocationRow_SchedulerState.Descriptor instead.
func (AntsInvocationRow_SchedulerState) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescGZIP(), []int{0, 0}
}

// AntsInvocationRow represents a row in a BigQuery table for an AnTS invocation.
// Next ID: 18.
type AntsInvocationRow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The build ID associated with this invocation.
	BuildId string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	// The unique identifier for this invocation.
	InvocationId string `protobuf:"bytes,2,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// The state of the invocation.
	SchedulerState AntsInvocationRow_SchedulerState `protobuf:"varint,3,opt,name=scheduler_state,json=schedulerState,proto3,enum=luci.analysis.bq.legacy.AntsInvocationRow_SchedulerState" json:"scheduler_state,omitempty"`
	// A TestDefinition describes how to identify an Invocation.
	Test *Test `protobuf:"bytes,4,opt,name=test,proto3" json:"test,omitempty"`
	// Generic key-value properties associated with the invocation.
	Properties []*StringPair `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty"`
	// Labels associated with the test.
	TestLabels []string `protobuf:"bytes,6,rep,name=test_labels,json=testLabels,proto3" json:"test_labels,omitempty"`
	// The primary Android build being tested.
	PrimaryBuild *AntsInvocationRow_AndroidBuild `protobuf:"bytes,7,opt,name=primary_build,json=primaryBuild,proto3" json:"primary_build,omitempty"`
	// Additional Android builds used in the test.
	ExtraBuilds []*AntsInvocationRow_AndroidBuild `protobuf:"bytes,8,rep,name=extra_builds,json=extraBuilds,proto3" json:"extra_builds,omitempty"`
	// Timing information for the invocation.
	Timing *AntsInvocationRow_Timing `protobuf:"bytes,9,opt,name=timing,proto3" json:"timing,omitempty"`
	// The runner that executed the invocation.
	Runner string `protobuf:"bytes,10,opt,name=runner,proto3" json:"runner,omitempty"`
	// The scheduler that managed the invocation.
	Scheduler string `protobuf:"bytes,11,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	// A summary of the invocation.
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	// The trigger for this invocation.
	Trigger string `protobuf:"bytes,13,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// Users associated with this invocation.
	Users []string `protobuf:"bytes,14,rep,name=users,proto3" json:"users,omitempty"`
	// Tags associated with the invocation.
	Tags []string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	// The ID of the test definition.
	TestDefinitionId string `protobuf:"bytes,16,opt,name=test_definition_id,json=testDefinitionId,proto3" json:"test_definition_id,omitempty"`
	// The completion time of the invocation, same as timing.complete_timestamp.
	// Use to partition the BigQuery table.
	CompletionTime *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=completion_time,json=completionTime,proto3" json:"completion_time,omitempty"`
	// The time when BigQuery started inserting the row into the BigQuery table.
	//
	// While this is approximately the same as the time the row became visible in the
	// BigQuery table, it will not match exactly due factors such as:
	// - BigQuery server processing delay,
	// - BigQuery server clock drift.
	// For these reasons, a row with a later insert_time may actually have
	// been visible before a row with an earlier insert_time.
	//
	// If you require timestamping that lines up with table visibility, e.g.
	// for incremental extracts, you may better off using the APPENDS Table-valued
	// function that is part of the BigQuery change history feature:
	// https://cloud.google.com/bigquery/docs/change-history
	InsertTime    *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=insert_time,json=insertTime,proto3" json:"insert_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AntsInvocationRow) Reset() {
	*x = AntsInvocationRow{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntsInvocationRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntsInvocationRow) ProtoMessage() {}

func (x *AntsInvocationRow) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntsInvocationRow.ProtoReflect.Descriptor instead.
func (*AntsInvocationRow) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescGZIP(), []int{0}
}

func (x *AntsInvocationRow) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *AntsInvocationRow) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *AntsInvocationRow) GetSchedulerState() AntsInvocationRow_SchedulerState {
	if x != nil {
		return x.SchedulerState
	}
	return AntsInvocationRow_SCHEDULER_STATE_UNSPECIFIED
}

func (x *AntsInvocationRow) GetTest() *Test {
	if x != nil {
		return x.Test
	}
	return nil
}

func (x *AntsInvocationRow) GetProperties() []*StringPair {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *AntsInvocationRow) GetTestLabels() []string {
	if x != nil {
		return x.TestLabels
	}
	return nil
}

func (x *AntsInvocationRow) GetPrimaryBuild() *AntsInvocationRow_AndroidBuild {
	if x != nil {
		return x.PrimaryBuild
	}
	return nil
}

func (x *AntsInvocationRow) GetExtraBuilds() []*AntsInvocationRow_AndroidBuild {
	if x != nil {
		return x.ExtraBuilds
	}
	return nil
}

func (x *AntsInvocationRow) GetTiming() *AntsInvocationRow_Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *AntsInvocationRow) GetRunner() string {
	if x != nil {
		return x.Runner
	}
	return ""
}

func (x *AntsInvocationRow) GetScheduler() string {
	if x != nil {
		return x.Scheduler
	}
	return ""
}

func (x *AntsInvocationRow) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AntsInvocationRow) GetTrigger() string {
	if x != nil {
		return x.Trigger
	}
	return ""
}

func (x *AntsInvocationRow) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *AntsInvocationRow) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *AntsInvocationRow) GetTestDefinitionId() string {
	if x != nil {
		return x.TestDefinitionId
	}
	return ""
}

func (x *AntsInvocationRow) GetCompletionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletionTime
	}
	return nil
}

func (x *AntsInvocationRow) GetInsertTime() *timestamppb.Timestamp {
	if x != nil {
		return x.InsertTime
	}
	return nil
}

// Describes an Android Build that is being tested.
// Next ID: 5
type AntsInvocationRow_AndroidBuild struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The build provider. For example, `androidbuild`.
	BuildProvider string `protobuf:"bytes,1,opt,name=build_provider,json=buildProvider,proto3" json:"build_provider,omitempty"`
	// The branch. For example, `git_master`.
	Branch string `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`
	// The build target. For example, `walleye-userdebug`.
	BuildTarget string `protobuf:"bytes,3,opt,name=build_target,json=buildTarget,proto3" json:"build_target,omitempty"`
	// The build ID.
	BuildId       string `protobuf:"bytes,4,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AntsInvocationRow_AndroidBuild) Reset() {
	*x = AntsInvocationRow_AndroidBuild{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntsInvocationRow_AndroidBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntsInvocationRow_AndroidBuild) ProtoMessage() {}

func (x *AntsInvocationRow_AndroidBuild) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntsInvocationRow_AndroidBuild.ProtoReflect.Descriptor instead.
func (*AntsInvocationRow_AndroidBuild) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AntsInvocationRow_AndroidBuild) GetBuildProvider() string {
	if x != nil {
		return x.BuildProvider
	}
	return ""
}

func (x *AntsInvocationRow_AndroidBuild) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *AntsInvocationRow_AndroidBuild) GetBuildTarget() string {
	if x != nil {
		return x.BuildTarget
	}
	return ""
}

func (x *AntsInvocationRow_AndroidBuild) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

// The timing of a particular Invocation.
// Next ID: 3
type AntsInvocationRow_Timing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The time the resource started running. This is in UTC Epoch time in milliseconds.
	CreationTimestamp int64 `protobuf:"varint,1,opt,name=creation_timestamp,json=creationTimestamp,proto3" json:"creation_timestamp,omitempty"`
	// Indicates the time when the operation finished. This is in UTC Epoch time in milliseconds.
	CompleteTimestamp int64 `protobuf:"varint,2,opt,name=complete_timestamp,json=completeTimestamp,proto3" json:"complete_timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AntsInvocationRow_Timing) Reset() {
	*x = AntsInvocationRow_Timing{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AntsInvocationRow_Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AntsInvocationRow_Timing) ProtoMessage() {}

func (x *AntsInvocationRow_Timing) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AntsInvocationRow_Timing.ProtoReflect.Descriptor instead.
func (*AntsInvocationRow_Timing) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AntsInvocationRow_Timing) GetCreationTimestamp() int64 {
	if x != nil {
		return x.CreationTimestamp
	}
	return 0
}

func (x *AntsInvocationRow_Timing) GetCompleteTimestamp() int64 {
	if x != nil {
		return x.CompleteTimestamp
	}
	return 0
}

var File_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDesc = string([]byte{
	0x0a, 0x47, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2f,
	0x61, 0x6e, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x62, 0x71, 0x2f, 0x70, 0x62, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x48, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x2f, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad,
	0x0a, 0x0a, 0x11, 0x41, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x62, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71,
	0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x65, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x04, 0x74, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e,
	0x62, 0x71, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x5c, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x6f, 0x77, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x5a, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x2e,
	0x41, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f,
	0x77, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x0b,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x12, 0x49, 0x0a, 0x06, 0x74,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x2e, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x2e, 0x41, 0x6e, 0x74, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x6f, 0x77, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0f,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x56, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x19,
	0xe2, 0xbc, 0x24, 0x15, 0x12, 0x13, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x28, 0x29, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x8b, 0x01, 0x0a, 0x0c, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x49, 0x64, 0x1a, 0x66, 0x0a, 0x06, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x80, 0x01, 0x0a, 0x0e,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x1b, 0x53, 0x43, 0x48, 0x45, 0x44, 0x55, 0x4c, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x3b,
	0x62, 0x71, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_goTypes = []any{
	(AntsInvocationRow_SchedulerState)(0),  // 0: luci.analysis.bq.legacy.AntsInvocationRow.SchedulerState
	(*AntsInvocationRow)(nil),              // 1: luci.analysis.bq.legacy.AntsInvocationRow
	(*AntsInvocationRow_AndroidBuild)(nil), // 2: luci.analysis.bq.legacy.AntsInvocationRow.AndroidBuild
	(*AntsInvocationRow_Timing)(nil),       // 3: luci.analysis.bq.legacy.AntsInvocationRow.Timing
	(*Test)(nil),                           // 4: luci.analysis.bq.legacy.Test
	(*StringPair)(nil),                     // 5: luci.analysis.bq.legacy.StringPair
	(*timestamppb.Timestamp)(nil),          // 6: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_depIdxs = []int32{
	0, // 0: luci.analysis.bq.legacy.AntsInvocationRow.scheduler_state:type_name -> luci.analysis.bq.legacy.AntsInvocationRow.SchedulerState
	4, // 1: luci.analysis.bq.legacy.AntsInvocationRow.test:type_name -> luci.analysis.bq.legacy.Test
	5, // 2: luci.analysis.bq.legacy.AntsInvocationRow.properties:type_name -> luci.analysis.bq.legacy.StringPair
	2, // 3: luci.analysis.bq.legacy.AntsInvocationRow.primary_build:type_name -> luci.analysis.bq.legacy.AntsInvocationRow.AndroidBuild
	2, // 4: luci.analysis.bq.legacy.AntsInvocationRow.extra_builds:type_name -> luci.analysis.bq.legacy.AntsInvocationRow.AndroidBuild
	3, // 5: luci.analysis.bq.legacy.AntsInvocationRow.timing:type_name -> luci.analysis.bq.legacy.AntsInvocationRow.Timing
	6, // 6: luci.analysis.bq.legacy.AntsInvocationRow.completion_time:type_name -> google.protobuf.Timestamp
	6, // 7: luci.analysis.bq.legacy.AntsInvocationRow.insert_time:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_init() }
func file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto != nil {
		return
	}
	file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_test_result_row_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto = out.File
	file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_bq_legacy_ants_invocation_row_proto_depIdxs = nil
}
