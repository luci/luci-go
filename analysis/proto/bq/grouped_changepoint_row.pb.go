// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: go.chromium.org/luci/analysis/proto/bq/grouped_changepoint_row.proto

package bqpb

import (
	v1 "go.chromium.org/luci/analysis/proto/v1"
	_ "go.chromium.org/luci/common/bq/pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a grouped changepoint of a test variant on a source branch at a point in time.
type GroupedChangepointRow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI Project. E.g. "chromium".
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The identity of the test.
	TestId string `protobuf:"bytes,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// Hash of the variant, as 16 lowercase hexadecimal characters.
	// E.g. "96c68dc946ab4068".
	VariantHash string `protobuf:"bytes,3,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	// Hash of the source branch, as 16 lowercase hexadecimal characters.
	RefHash string `protobuf:"bytes,4,opt,name=ref_hash,json=refHash,proto3" json:"ref_hash,omitempty"`
	// Describes one specific way of running the test, e.g. a specific bucket,
	// builder and a test suite.
	//
	// This will be encoded as a JSON object like
	// {"builder":"linux-rel","os":"Ubuntu-18.04",...}
	// to take advantage of BigQuery's JSON support, so that the query will only
	// be billed for the variant keys it reads.
	//
	// In the protocol buffer, it must be a string as per
	// https://cloud.google.com/bigquery/docs/write-api#data_type_conversions
	Variant string `protobuf:"bytes,5,opt,name=variant,proto3" json:"variant,omitempty"`
	// The branch in source control.
	Ref *v1.SourceRef `protobuf:"bytes,6,opt,name=ref,proto3" json:"ref,omitempty"`
	// Unexpected source verdict rate after this changepoint.
	UnexpectedSourceVerdictRate float64 `protobuf:"fixed64,7,opt,name=unexpected_source_verdict_rate,json=unexpectedSourceVerdictRate,proto3" json:"unexpected_source_verdict_rate,omitempty"`
	// Unexpected source verdict rate of the segment before this changepoint.
	PreviousUnexpectedSourceVerdictRate float64 `protobuf:"fixed64,8,opt,name=previous_unexpected_source_verdict_rate,json=previousUnexpectedSourceVerdictRate,proto3" json:"previous_unexpected_source_verdict_rate,omitempty"`
	// This nominal end position of the segment before this changepoint.
	PreviousNominalEndPosition int64 `protobuf:"varint,9,opt,name=previous_nominal_end_position,json=previousNominalEndPosition,proto3" json:"previous_nominal_end_position,omitempty"`
	// The nominal start position of the segment after this changepoint.
	// In other words, the nominal position of this changepoint.
	StartPosition int64 `protobuf:"varint,10,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	// The lower bound of the changepoint position in a 99% two-tailed
	// confidence interval. Inclusive.
	StartPositionLowerBound_99Th int64 `protobuf:"varint,11,opt,name=start_position_lower_bound_99th,json=startPositionLowerBound99th,proto3" json:"start_position_lower_bound_99th,omitempty"`
	// The upper bound of the changepoint position in a 99% two-tailed
	// confidence interval. Inclusive.
	StartPositionUpperBound_99Th int64 `protobuf:"varint,12,opt,name=start_position_upper_bound_99th,json=startPositionUpperBound99th,proto3" json:"start_position_upper_bound_99th,omitempty"`
	// The nominal start hour of the segment after this changepoint.
	// In other words, the nominal hour of this changepoint.
	StartHour *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
	// start_hour_week is a timestamp representing the start of a week (Sunday at 00:00:00 AM UTC)
	// A week in this context refers to the period from Sunday 00:00:00 AM UTC (inclusive)
	// to the following Sunday 00:00:00 AM UTC (exclusive).
	StartHourWeek *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=start_hour_week,json=startHourWeek,proto3" json:"start_hour_week,omitempty"`
	// Ranking of the test ID within the LUCI project, sorted alphabetically by test ID.
	TestIdNum int64 `protobuf:"varint,15,opt,name=test_id_num,json=testIdNum,proto3" json:"test_id_num,omitempty"`
	// Identifier of the changepoint group.
	// Rows belong to the same changepoint group if they have the same version and group_id.
	// This identifier is a concatenation of the lexicographically smallest
	// (project, test_id, variant_hash, ref_hash, start_position) tuple within this group.
	GroupId string `protobuf:"bytes,16,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// Server timestamp for the version of grouping used.
	// All rows exported in the same task share the same version.
	// This field is used to identify the latest grouped changepoint rows.
	Version       *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupedChangepointRow) Reset() {
	*x = GroupedChangepointRow{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupedChangepointRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupedChangepointRow) ProtoMessage() {}

func (x *GroupedChangepointRow) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupedChangepointRow.ProtoReflect.Descriptor instead.
func (*GroupedChangepointRow) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescGZIP(), []int{0}
}

func (x *GroupedChangepointRow) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GroupedChangepointRow) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *GroupedChangepointRow) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *GroupedChangepointRow) GetRefHash() string {
	if x != nil {
		return x.RefHash
	}
	return ""
}

func (x *GroupedChangepointRow) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *GroupedChangepointRow) GetRef() *v1.SourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *GroupedChangepointRow) GetUnexpectedSourceVerdictRate() float64 {
	if x != nil {
		return x.UnexpectedSourceVerdictRate
	}
	return 0
}

func (x *GroupedChangepointRow) GetPreviousUnexpectedSourceVerdictRate() float64 {
	if x != nil {
		return x.PreviousUnexpectedSourceVerdictRate
	}
	return 0
}

func (x *GroupedChangepointRow) GetPreviousNominalEndPosition() int64 {
	if x != nil {
		return x.PreviousNominalEndPosition
	}
	return 0
}

func (x *GroupedChangepointRow) GetStartPosition() int64 {
	if x != nil {
		return x.StartPosition
	}
	return 0
}

func (x *GroupedChangepointRow) GetStartPositionLowerBound_99Th() int64 {
	if x != nil {
		return x.StartPositionLowerBound_99Th
	}
	return 0
}

func (x *GroupedChangepointRow) GetStartPositionUpperBound_99Th() int64 {
	if x != nil {
		return x.StartPositionUpperBound_99Th
	}
	return 0
}

func (x *GroupedChangepointRow) GetStartHour() *timestamppb.Timestamp {
	if x != nil {
		return x.StartHour
	}
	return nil
}

func (x *GroupedChangepointRow) GetStartHourWeek() *timestamppb.Timestamp {
	if x != nil {
		return x.StartHourWeek
	}
	return nil
}

func (x *GroupedChangepointRow) GetTestIdNum() int64 {
	if x != nil {
		return x.TestIdNum
	}
	return 0
}

func (x *GroupedChangepointRow) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupedChangepointRow) GetVersion() *timestamppb.Timestamp {
	if x != nil {
		return x.Version
	}
	return nil
}

var File_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDesc = string([]byte{
	0x0a, 0x44, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x77,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x62, 0x71, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x67, 0x6f, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2f, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x71, 0x2f,
	0x70, 0x62, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xde, 0x06, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x07, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xe2, 0xbc,
	0x24, 0x06, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x52, 0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x03, 0x72, 0x65, 0x66,
	0x12, 0x43, 0x0a, 0x1e, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x1b, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63,
	0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x54, 0x0a, 0x27, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x5f, 0x75, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x23, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x55, 0x6e, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x1f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x39, 0x39, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x39, 0x39, 0x74, 0x68, 0x12, 0x44, 0x0a, 0x1f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x39, 0x39, 0x74, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x1b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x39, 0x39, 0x74,
	0x68, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x42, 0x0a, 0x0f,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x57, 0x65, 0x65, 0x6b,
	0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x4e, 0x75, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x71, 0x3b, 0x62, 0x71, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_goTypes = []any{
	(*GroupedChangepointRow)(nil), // 0: luci.analysis.bq.GroupedChangepointRow
	(*v1.SourceRef)(nil),          // 1: luci.analysis.v1.SourceRef
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_depIdxs = []int32{
	1, // 0: luci.analysis.bq.GroupedChangepointRow.ref:type_name -> luci.analysis.v1.SourceRef
	2, // 1: luci.analysis.bq.GroupedChangepointRow.start_hour:type_name -> google.protobuf.Timestamp
	2, // 2: luci.analysis.bq.GroupedChangepointRow.start_hour_week:type_name -> google.protobuf.Timestamp
	2, // 3: luci.analysis.bq.GroupedChangepointRow.version:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_init() }
func file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto = out.File
	file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_bq_grouped_changepoint_row_proto_depIdxs = nil
}
