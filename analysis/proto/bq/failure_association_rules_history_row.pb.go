// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: go.chromium.org/luci/analysis/proto/bq/failure_association_rules_history_row.proto

package bqpb

import (
	v1 "go.chromium.org/luci/analysis/proto/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BigQuery representation of a failure association rule.
// NextID: 16.
type FailureAssociationRulesHistoryRow struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the failure association rule.
	// Can be used to refer to this rule, e.g. in Rules.Get RPC.
	// Format: projects/{project}/rules/{rule_id}.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The LUCI Project this bug belongs to.
	Project string `protobuf:"bytes,2,opt,name=project,proto3" json:"project,omitempty"`
	// The unique identifier for the rule. This rule_id corresponds to the cluster_id
	// in the clustered_failures table.
	RuleId string `protobuf:"bytes,3,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	// The rule predicate, defining which failures are being associated.
	RuleDefinition string `protobuf:"bytes,4,opt,name=rule_definition,json=ruleDefinition,proto3" json:"rule_definition,omitempty"`
	// The last time either rule_definition or is_active is changed.
	PredicateLastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=predicate_last_update_time,json=predicateLastUpdateTime,proto3" json:"predicate_last_update_time,omitempty"`
	// The system and the id of where the bug is tracked.
	Bug *FailureAssociationRulesHistoryRow_Bug `protobuf:"bytes,6,opt,name=bug,proto3" json:"bug,omitempty"`
	// Whether the bug must still be updated by LUCI Analysis, and whether
	// failures should still be matched against this rule.
	IsActive bool `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	// Whether this rule should manage the priority and verified status
	// of the associated bug based on the impact of the cluster defined
	// by this rule.
	IsManagingBug bool `protobuf:"varint,8,opt,name=is_managing_bug,json=isManagingBug,proto3" json:"is_managing_bug,omitempty"`
	// Indicates whether we should update the priority of the bug
	// that is associated with this rule based on the cluster's impact.
	// This toggle has must have no effect if the is_managing_bug toggle is off.
	IsManagingBugPriority bool `protobuf:"varint,9,opt,name=is_managing_bug_priority,json=isManagingBugPriority,proto3" json:"is_managing_bug_priority,omitempty"`
	// Tracks when the field is_managing_bug_priority was last updated.
	IsManagingBugPriorityLastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=is_managing_bug_priority_last_update_time,json=isManagingBugPriorityLastUpdateTime,proto3" json:"is_managing_bug_priority_last_update_time,omitempty"`
	// This suggested cluster this rule was created from.
	// Until re-clustering is complete (and the residual impact of the source
	// cluster has reduced to zero), source_cluster.algorithm and source_cluster.id
	// tell bug filing to ignore the source suggested cluster when
	// determining whether new bugs need to be filed.
	SourceCluster *v1.ClusterId `protobuf:"bytes,11,opt,name=source_cluster,json=sourceCluster,proto3" json:"source_cluster,omitempty"`
	// Bug management state. System controlled data.
	BugManagementState *v1.BugManagementState `protobuf:"bytes,12,opt,name=bug_management_state,json=bugManagementState,proto3" json:"bug_management_state,omitempty"`
	// The time the rule was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last time an auditable field was updated. An auditable field
	// is any field other than a system controlled data field.
	LastAuditableUpdateTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=last_auditable_update_time,json=lastAuditableUpdateTime,proto3" json:"last_auditable_update_time,omitempty"`
	// The last time the rule was updated.
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	// The time the entry was exported to bigquery table.
	ExportedTime  *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=exported_time,json=exportedTime,proto3" json:"exported_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailureAssociationRulesHistoryRow) Reset() {
	*x = FailureAssociationRulesHistoryRow{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureAssociationRulesHistoryRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureAssociationRulesHistoryRow) ProtoMessage() {}

func (x *FailureAssociationRulesHistoryRow) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureAssociationRulesHistoryRow.ProtoReflect.Descriptor instead.
func (*FailureAssociationRulesHistoryRow) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescGZIP(), []int{0}
}

func (x *FailureAssociationRulesHistoryRow) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FailureAssociationRulesHistoryRow) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *FailureAssociationRulesHistoryRow) GetRuleId() string {
	if x != nil {
		return x.RuleId
	}
	return ""
}

func (x *FailureAssociationRulesHistoryRow) GetRuleDefinition() string {
	if x != nil {
		return x.RuleDefinition
	}
	return ""
}

func (x *FailureAssociationRulesHistoryRow) GetPredicateLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PredicateLastUpdateTime
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetBug() *FailureAssociationRulesHistoryRow_Bug {
	if x != nil {
		return x.Bug
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *FailureAssociationRulesHistoryRow) GetIsManagingBug() bool {
	if x != nil {
		return x.IsManagingBug
	}
	return false
}

func (x *FailureAssociationRulesHistoryRow) GetIsManagingBugPriority() bool {
	if x != nil {
		return x.IsManagingBugPriority
	}
	return false
}

func (x *FailureAssociationRulesHistoryRow) GetIsManagingBugPriorityLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.IsManagingBugPriorityLastUpdateTime
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetSourceCluster() *v1.ClusterId {
	if x != nil {
		return x.SourceCluster
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetBugManagementState() *v1.BugManagementState {
	if x != nil {
		return x.BugManagementState
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetLastAuditableUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastAuditableUpdateTime
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

func (x *FailureAssociationRulesHistoryRow) GetExportedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExportedTime
	}
	return nil
}

type FailureAssociationRulesHistoryRow_Bug struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// system is the bug tracking system containing the bug the failures are
	// associated with. The only supported values are 'monorail' and 'buganizer'.
	System string `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	// id is the identifier of the bug the failures are associated with, as
	// identified by the bug tracking system itself. For monorail, the scheme is
	// {project}/{numeric_id}, for buganizer, the scheme is {numeric_id}.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FailureAssociationRulesHistoryRow_Bug) Reset() {
	*x = FailureAssociationRulesHistoryRow_Bug{}
	mi := &file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FailureAssociationRulesHistoryRow_Bug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FailureAssociationRulesHistoryRow_Bug) ProtoMessage() {}

func (x *FailureAssociationRulesHistoryRow_Bug) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FailureAssociationRulesHistoryRow_Bug.ProtoReflect.Descriptor instead.
func (*FailureAssociationRulesHistoryRow_Bug) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FailureAssociationRulesHistoryRow_Bug) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *FailureAssociationRulesHistoryRow_Bug) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDesc = "" +
	"\n" +
	"Rgo.chromium.org/luci/analysis/proto/bq/failure_association_rules_history_row.proto\x12\x10luci.analysis.bq\x1a\x1fgoogle/protobuf/timestamp.proto\x1a3go.chromium.org/luci/analysis/proto/v1/common.proto\x1a2go.chromium.org/luci/analysis/proto/v1/rules.proto\"\x91\b\n" +
	"!FailureAssociationRulesHistoryRow\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\aproject\x18\x02 \x01(\tR\aproject\x12\x17\n" +
	"\arule_id\x18\x03 \x01(\tR\x06ruleId\x12'\n" +
	"\x0frule_definition\x18\x04 \x01(\tR\x0eruleDefinition\x12W\n" +
	"\x1apredicate_last_update_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x17predicateLastUpdateTime\x12I\n" +
	"\x03bug\x18\x06 \x01(\v27.luci.analysis.bq.FailureAssociationRulesHistoryRow.BugR\x03bug\x12\x1b\n" +
	"\tis_active\x18\a \x01(\bR\bisActive\x12&\n" +
	"\x0fis_managing_bug\x18\b \x01(\bR\risManagingBug\x127\n" +
	"\x18is_managing_bug_priority\x18\t \x01(\bR\x15isManagingBugPriority\x12r\n" +
	")is_managing_bug_priority_last_update_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR#isManagingBugPriorityLastUpdateTime\x12B\n" +
	"\x0esource_cluster\x18\v \x01(\v2\x1b.luci.analysis.v1.ClusterIdR\rsourceCluster\x12V\n" +
	"\x14bug_management_state\x18\f \x01(\v2$.luci.analysis.v1.BugManagementStateR\x12bugManagementState\x12;\n" +
	"\vcreate_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12W\n" +
	"\x1alast_auditable_update_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\x17lastAuditableUpdateTime\x12D\n" +
	"\x10last_update_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\x0elastUpdateTime\x12?\n" +
	"\rexported_time\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\fexportedTime\x1a-\n" +
	"\x03Bug\x12\x16\n" +
	"\x06system\x18\x01 \x01(\tR\x06system\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02idB-Z+go.chromium.org/luci/analysis/proto/bq;bqpbb\x06proto3"

var (
	file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_goTypes = []any{
	(*FailureAssociationRulesHistoryRow)(nil),     // 0: luci.analysis.bq.FailureAssociationRulesHistoryRow
	(*FailureAssociationRulesHistoryRow_Bug)(nil), // 1: luci.analysis.bq.FailureAssociationRulesHistoryRow.Bug
	(*timestamppb.Timestamp)(nil),                 // 2: google.protobuf.Timestamp
	(*v1.ClusterId)(nil),                          // 3: luci.analysis.v1.ClusterId
	(*v1.BugManagementState)(nil),                 // 4: luci.analysis.v1.BugManagementState
}
var file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_depIdxs = []int32{
	2, // 0: luci.analysis.bq.FailureAssociationRulesHistoryRow.predicate_last_update_time:type_name -> google.protobuf.Timestamp
	1, // 1: luci.analysis.bq.FailureAssociationRulesHistoryRow.bug:type_name -> luci.analysis.bq.FailureAssociationRulesHistoryRow.Bug
	2, // 2: luci.analysis.bq.FailureAssociationRulesHistoryRow.is_managing_bug_priority_last_update_time:type_name -> google.protobuf.Timestamp
	3, // 3: luci.analysis.bq.FailureAssociationRulesHistoryRow.source_cluster:type_name -> luci.analysis.v1.ClusterId
	4, // 4: luci.analysis.bq.FailureAssociationRulesHistoryRow.bug_management_state:type_name -> luci.analysis.v1.BugManagementState
	2, // 5: luci.analysis.bq.FailureAssociationRulesHistoryRow.create_time:type_name -> google.protobuf.Timestamp
	2, // 6: luci.analysis.bq.FailureAssociationRulesHistoryRow.last_auditable_update_time:type_name -> google.protobuf.Timestamp
	2, // 7: luci.analysis.bq.FailureAssociationRulesHistoryRow.last_update_time:type_name -> google.protobuf.Timestamp
	2, // 8: luci.analysis.bq.FailureAssociationRulesHistoryRow.exported_time:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() {
	file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_init()
}
func file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto = out.File
	file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_bq_failure_association_rules_history_row_proto_depIdxs = nil
}
