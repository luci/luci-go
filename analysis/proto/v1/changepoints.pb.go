// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/analysis/proto/v1/changepoints.proto

package analysispb

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryChangepointGroupSummariesRequestLegacy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI project. Mandatory field.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// A filter to be applied to each changepoint in the groups.
	// If all changepoints in a group are filtered out, this group will not be returned.
	Predicate *ChangepointPredicateLegacy `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`
	// A timestamp that select a particular week.
	// The response will contain changepoints starting from this week (i.e. The nominal start time of changepints is within this week).
	//
	// A week is defined as Sunday midnight (inclusive) to next Saturday midnight (exclusive) in UTC.
	// Therefore, begin_of_week MUST be a timestamp at Sunday midnight (00:00 AM) UTC, otherwise an invalid request error will be returned.
	// If begin_of_week is nil, the current week will be used.
	BeginOfWeek   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=begin_of_week,json=beginOfWeek,proto3" json:"begin_of_week,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryChangepointGroupSummariesRequestLegacy) Reset() {
	*x = QueryChangepointGroupSummariesRequestLegacy{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointGroupSummariesRequestLegacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointGroupSummariesRequestLegacy) ProtoMessage() {}

func (x *QueryChangepointGroupSummariesRequestLegacy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointGroupSummariesRequestLegacy.ProtoReflect.Descriptor instead.
func (*QueryChangepointGroupSummariesRequestLegacy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{0}
}

func (x *QueryChangepointGroupSummariesRequestLegacy) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *QueryChangepointGroupSummariesRequestLegacy) GetPredicate() *ChangepointPredicateLegacy {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *QueryChangepointGroupSummariesRequestLegacy) GetBeginOfWeek() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginOfWeek
	}
	return nil
}

type QueryChangepointGroupSummariesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI project. Mandatory field.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// A filter to be applied to each changepoint in the groups.
	// If all changepoints in a group are filtered out, this group will not be returned.
	Predicate *ChangepointPredicate `protobuf:"bytes,2,opt,name=predicate,proto3" json:"predicate,omitempty"`
	// The maximum number of groups to return.
	//
	// The service may return fewer than this value.
	// If unspecified, at most 100 groups will be returned.
	// The maximum value is 1000; values above 1000 will be coerced to 1000.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous call.
	// Provide this to retrieve the subsequent page.
	// This page token will expire after 50 minutes.
	//
	// When paginating, all other parameters provided to the next call
	// MUST match the call that provided the page token.
	PageToken     string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryChangepointGroupSummariesRequest) Reset() {
	*x = QueryChangepointGroupSummariesRequest{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointGroupSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointGroupSummariesRequest) ProtoMessage() {}

func (x *QueryChangepointGroupSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointGroupSummariesRequest.ProtoReflect.Descriptor instead.
func (*QueryChangepointGroupSummariesRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{1}
}

func (x *QueryChangepointGroupSummariesRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *QueryChangepointGroupSummariesRequest) GetPredicate() *ChangepointPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *QueryChangepointGroupSummariesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryChangepointGroupSummariesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// Represent a function Changepoint -> bool
// Deprecated: use ChangepointPredicate instead.
type ChangepointPredicateLegacy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The test id of this changepoint matches this prefix.
	TestIdPrefix string `protobuf:"bytes,1,opt,name=test_id_prefix,json=testIdPrefix,proto3" json:"test_id_prefix,omitempty"`
	// Specify a range. The unexpected verdict rate change on this changepoint needs to fall into this range.
	// Unexpected verdict rate change is calculated by (unexpected verdict rate after changepoint - unexpected verdict rate before changepoint).
	// Negative number means unexpected verdict rate decreases, positive number means increases.
	// eg. {lower_bound:0.1, upper_bound:0.9} means keep changepoint which has a unexpected verdict rate increase >= 10% and <= 90%.
	UnexpectedVerdictRateChangeRange *NumericRange `protobuf:"bytes,2,opt,name=unexpected_verdict_rate_change_range,json=unexpectedVerdictRateChangeRange,proto3" json:"unexpected_verdict_rate_change_range,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ChangepointPredicateLegacy) Reset() {
	*x = ChangepointPredicateLegacy{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointPredicateLegacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointPredicateLegacy) ProtoMessage() {}

func (x *ChangepointPredicateLegacy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointPredicateLegacy.ProtoReflect.Descriptor instead.
func (*ChangepointPredicateLegacy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{2}
}

func (x *ChangepointPredicateLegacy) GetTestIdPrefix() string {
	if x != nil {
		return x.TestIdPrefix
	}
	return ""
}

func (x *ChangepointPredicateLegacy) GetUnexpectedVerdictRateChangeRange() *NumericRange {
	if x != nil {
		return x.UnexpectedVerdictRateChangeRange
	}
	return nil
}

// Represent a function Changepoint -> bool
type ChangepointPredicate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The test id of this changepoint contain this substring.
	TestIdContain string `protobuf:"bytes,1,opt,name=test_id_contain,json=testIdContain,proto3" json:"test_id_contain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangepointPredicate) Reset() {
	*x = ChangepointPredicate{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointPredicate) ProtoMessage() {}

func (x *ChangepointPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointPredicate.ProtoReflect.Descriptor instead.
func (*ChangepointPredicate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{3}
}

func (x *ChangepointPredicate) GetTestIdContain() string {
	if x != nil {
		return x.TestIdContain
	}
	return ""
}

type QueryChangepointGroupSummariesResponseLegacy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of changepoint group summaries.
	GroupSummaries []*ChangepointGroupSummary `protobuf:"bytes,1,rep,name=group_summaries,json=groupSummaries,proto3" json:"group_summaries,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryChangepointGroupSummariesResponseLegacy) Reset() {
	*x = QueryChangepointGroupSummariesResponseLegacy{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointGroupSummariesResponseLegacy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointGroupSummariesResponseLegacy) ProtoMessage() {}

func (x *QueryChangepointGroupSummariesResponseLegacy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointGroupSummariesResponseLegacy.ProtoReflect.Descriptor instead.
func (*QueryChangepointGroupSummariesResponseLegacy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{4}
}

func (x *QueryChangepointGroupSummariesResponseLegacy) GetGroupSummaries() []*ChangepointGroupSummary {
	if x != nil {
		return x.GroupSummaries
	}
	return nil
}

type QueryChangepointGroupSummariesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of changepoint group summaries.
	GroupSummaries []*ChangepointGroupSummary `protobuf:"bytes,1,rep,name=group_summaries,json=groupSummaries,proto3" json:"group_summaries,omitempty"`
	// This field will be set if there are more results to return.
	// To get the next page of data, send the same request again, but include this
	// token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryChangepointGroupSummariesResponse) Reset() {
	*x = QueryChangepointGroupSummariesResponse{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointGroupSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointGroupSummariesResponse) ProtoMessage() {}

func (x *QueryChangepointGroupSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointGroupSummariesResponse.ProtoReflect.Descriptor instead.
func (*QueryChangepointGroupSummariesResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{5}
}

func (x *QueryChangepointGroupSummariesResponse) GetGroupSummaries() []*ChangepointGroupSummary {
	if x != nil {
		return x.GroupSummaries
	}
	return nil
}

func (x *QueryChangepointGroupSummariesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Represent the summary of a changepoint group.
type ChangepointGroupSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The canonical changepoint in the group. This is the changepoint with minimum (test_id, variant_hash, ref_hash, nominal_start_position) combination.
	CanonicalChangepoint *Changepoint `protobuf:"bytes,1,opt,name=canonical_changepoint,json=canonicalChangepoint,proto3" json:"canonical_changepoint,omitempty"`
	// Statistics of this group.
	Statistics    *ChangepointGroupStatistics `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangepointGroupSummary) Reset() {
	*x = ChangepointGroupSummary{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointGroupSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupSummary) ProtoMessage() {}

func (x *ChangepointGroupSummary) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupSummary.ProtoReflect.Descriptor instead.
func (*ChangepointGroupSummary) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{6}
}

func (x *ChangepointGroupSummary) GetCanonicalChangepoint() *Changepoint {
	if x != nil {
		return x.CanonicalChangepoint
	}
	return nil
}

func (x *ChangepointGroupSummary) GetStatistics() *ChangepointGroupStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

type ChangepointGroupStatistics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of test variant branches in this group.
	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// Unexpected verdict rate before the changepoint.
	// The per test variant branch, unexpected verdict rate is calculated as (count of unexpected verdict/count of all verdicts).
	UnexpectedVerdictRateBefore *ChangepointGroupStatistics_RateDistribution `protobuf:"bytes,2,opt,name=unexpected_verdict_rate_before,json=unexpectedVerdictRateBefore,proto3" json:"unexpected_verdict_rate_before,omitempty"`
	// Unexpected verdict rate after the changepoint.
	UnexpectedVerdictRateAfter *ChangepointGroupStatistics_RateDistribution `protobuf:"bytes,3,opt,name=unexpected_verdict_rate_after,json=unexpectedVerdictRateAfter,proto3" json:"unexpected_verdict_rate_after,omitempty"`
	// The current unexpected verdict rate.
	UnexpectedVerdictRateCurrent *ChangepointGroupStatistics_RateDistribution `protobuf:"bytes,4,opt,name=unexpected_verdict_rate_current,json=unexpectedVerdictRateCurrent,proto3" json:"unexpected_verdict_rate_current,omitempty"`
	// The amount of change in unexpected verdict rate before and after the changepoint.
	UnexpectedVerdictRateChange *ChangepointGroupStatistics_RateChangeBuckets `protobuf:"bytes,5,opt,name=unexpected_verdict_rate_change,json=unexpectedVerdictRateChange,proto3" json:"unexpected_verdict_rate_change,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ChangepointGroupStatistics) Reset() {
	*x = ChangepointGroupStatistics{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointGroupStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics) ProtoMessage() {}

func (x *ChangepointGroupStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{7}
}

func (x *ChangepointGroupStatistics) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateBefore() *ChangepointGroupStatistics_RateDistribution {
	if x != nil {
		return x.UnexpectedVerdictRateBefore
	}
	return nil
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateAfter() *ChangepointGroupStatistics_RateDistribution {
	if x != nil {
		return x.UnexpectedVerdictRateAfter
	}
	return nil
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateCurrent() *ChangepointGroupStatistics_RateDistribution {
	if x != nil {
		return x.UnexpectedVerdictRateCurrent
	}
	return nil
}

func (x *ChangepointGroupStatistics) GetUnexpectedVerdictRateChange() *ChangepointGroupStatistics_RateChangeBuckets {
	if x != nil {
		return x.UnexpectedVerdictRateChange
	}
	return nil
}

type QueryChangepointsInGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI project. Mandatory field.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Identify a group with this changepoint. Mandatory field.
	GroupKey *QueryChangepointsInGroupRequest_ChangepointIdentifier `protobuf:"bytes,2,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	// A filter to be applied to each changepoint.
	Predicate     *ChangepointPredicate `protobuf:"bytes,3,opt,name=predicate,proto3" json:"predicate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryChangepointsInGroupRequest) Reset() {
	*x = QueryChangepointsInGroupRequest{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointsInGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointsInGroupRequest) ProtoMessage() {}

func (x *QueryChangepointsInGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointsInGroupRequest.ProtoReflect.Descriptor instead.
func (*QueryChangepointsInGroupRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{8}
}

func (x *QueryChangepointsInGroupRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest) GetGroupKey() *QueryChangepointsInGroupRequest_ChangepointIdentifier {
	if x != nil {
		return x.GroupKey
	}
	return nil
}

func (x *QueryChangepointsInGroupRequest) GetPredicate() *ChangepointPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

// TODO: Implement pagination, currently just return at most 1000 changepoints.
type QueryChangepointsInGroupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of changepoints in a group.
	Changepoints  []*Changepoint `protobuf:"bytes,1,rep,name=changepoints,proto3" json:"changepoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryChangepointsInGroupResponse) Reset() {
	*x = QueryChangepointsInGroupResponse{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointsInGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointsInGroupResponse) ProtoMessage() {}

func (x *QueryChangepointsInGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointsInGroupResponse.ProtoReflect.Descriptor instead.
func (*QueryChangepointsInGroupResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{9}
}

func (x *QueryChangepointsInGroupResponse) GetChangepoints() []*Changepoint {
	if x != nil {
		return x.Changepoints
	}
	return nil
}

// Represent a changepoint of a test variant branch.
// Next ID: 15.
type Changepoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The LUCI Project. E.g. "chromium".
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The identity of the test.
	TestId string `protobuf:"bytes,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// Hash of the variant, as 16 lowercase hexadecimal characters.
	// E.g. "96c68dc946ab4068".
	VariantHash string `protobuf:"bytes,3,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	// key:value pairs to specify the way of running a particular test.
	// e.g. a specific bucket, builder and a test suite.
	Variant *Variant `protobuf:"bytes,14,opt,name=variant,proto3" json:"variant,omitempty"`
	// Hash of the source branch, as 16 lowercase hexadecimal characters.
	RefHash string `protobuf:"bytes,4,opt,name=ref_hash,json=refHash,proto3" json:"ref_hash,omitempty"`
	// The branch in source control.
	Ref *SourceRef `protobuf:"bytes,5,opt,name=ref,proto3" json:"ref,omitempty"`
	// The nominal start hour of this changepoint.
	StartHour *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
	// The lower bound of the starting changepoint position in a 99% two-tailed
	// confidence interval. Inclusive.
	StartPositionLowerBound_99Th int64 `protobuf:"varint,10,opt,name=start_position_lower_bound_99th,json=startPositionLowerBound99th,proto3" json:"start_position_lower_bound_99th,omitempty"`
	// The upper bound of the starting changepoint position in a 99% two-tailed
	// confidence interval. Inclusive.
	StartPositionUpperBound_99Th int64 `protobuf:"varint,11,opt,name=start_position_upper_bound_99th,json=startPositionUpperBound99th,proto3" json:"start_position_upper_bound_99th,omitempty"`
	// The nominal commit position at which the segment starts (inclusive).
	NominalStartPosition int64 `protobuf:"varint,12,opt,name=nominal_start_position,json=nominalStartPosition,proto3" json:"nominal_start_position,omitempty"`
	// The nominal commit position at which the previous segment ends (inclusive).
	PreviousSegmentNominalEndPosition int64 `protobuf:"varint,13,opt,name=previous_segment_nominal_end_position,json=previousSegmentNominalEndPosition,proto3" json:"previous_segment_nominal_end_position,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *Changepoint) Reset() {
	*x = Changepoint{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Changepoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changepoint) ProtoMessage() {}

func (x *Changepoint) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changepoint.ProtoReflect.Descriptor instead.
func (*Changepoint) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{10}
}

func (x *Changepoint) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *Changepoint) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *Changepoint) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *Changepoint) GetVariant() *Variant {
	if x != nil {
		return x.Variant
	}
	return nil
}

func (x *Changepoint) GetRefHash() string {
	if x != nil {
		return x.RefHash
	}
	return ""
}

func (x *Changepoint) GetRef() *SourceRef {
	if x != nil {
		return x.Ref
	}
	return nil
}

func (x *Changepoint) GetStartHour() *timestamppb.Timestamp {
	if x != nil {
		return x.StartHour
	}
	return nil
}

func (x *Changepoint) GetStartPositionLowerBound_99Th() int64 {
	if x != nil {
		return x.StartPositionLowerBound_99Th
	}
	return 0
}

func (x *Changepoint) GetStartPositionUpperBound_99Th() int64 {
	if x != nil {
		return x.StartPositionUpperBound_99Th
	}
	return 0
}

func (x *Changepoint) GetNominalStartPosition() int64 {
	if x != nil {
		return x.NominalStartPosition
	}
	return 0
}

func (x *Changepoint) GetPreviousSegmentNominalEndPosition() int64 {
	if x != nil {
		return x.PreviousSegmentNominalEndPosition
	}
	return 0
}

type ChangepointGroupStatistics_RateDistribution struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Average unexpected verdict rate of all test variant branches in the group. This is a value between 0.0 and 1.0.
	// Consequently, this is an ‘average of averages’.
	Average float32 `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"`
	// Count the number of changepoint that fall into each rate bucket.
	Buckets       *ChangepointGroupStatistics_RateDistribution_RateBuckets `protobuf:"bytes,2,opt,name=buckets,proto3" json:"buckets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangepointGroupStatistics_RateDistribution) Reset() {
	*x = ChangepointGroupStatistics_RateDistribution{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointGroupStatistics_RateDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics_RateDistribution) ProtoMessage() {}

func (x *ChangepointGroupStatistics_RateDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics_RateDistribution.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics_RateDistribution) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ChangepointGroupStatistics_RateDistribution) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateDistribution) GetBuckets() *ChangepointGroupStatistics_RateDistribution_RateBuckets {
	if x != nil {
		return x.Buckets
	}
	return nil
}

// Unexpected verdict rate change is calculated by (unexpected verdict rate after changepoint - unexpected verdict rate before changepoint).
// TODO: we need to add buckets for unexpected verdict rate decrease when we support grouping fixes. Unexpected verdict rate decrease will be represented as negative number.
type ChangepointGroupStatistics_RateChangeBuckets struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Counts the number of test variant branches which saw their unexpected verdict rate increase by between 0% (inclusive) and 20% (exclusive).
	CountIncreased_0To_20Percent int32 `protobuf:"varint,1,opt,name=count_increased_0_to_20_percent,json=countIncreased0To20Percent,proto3" json:"count_increased_0_to_20_percent,omitempty"`
	// Counts the number of test variant branches which saw their unexpected verdict rate increase by between 20% (inclusive) and 50% (exclusive).
	CountIncreased_20To_50Percent int32 `protobuf:"varint,2,opt,name=count_increased_20_to_50_percent,json=countIncreased20To50Percent,proto3" json:"count_increased_20_to_50_percent,omitempty"`
	// Counts the number of test variant branches which saw their unexpected verdict rate increase by between 50% (inclusive) or more.
	CountIncreased_50To_100Percent int32 `protobuf:"varint,3,opt,name=count_increased_50_to_100_percent,json=countIncreased50To100Percent,proto3" json:"count_increased_50_to_100_percent,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) Reset() {
	*x = ChangepointGroupStatistics_RateChangeBuckets{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics_RateChangeBuckets) ProtoMessage() {}

func (x *ChangepointGroupStatistics_RateChangeBuckets) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics_RateChangeBuckets.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics_RateChangeBuckets) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{7, 1}
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) GetCountIncreased_0To_20Percent() int32 {
	if x != nil {
		return x.CountIncreased_0To_20Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) GetCountIncreased_20To_50Percent() int32 {
	if x != nil {
		return x.CountIncreased_20To_50Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateChangeBuckets) GetCountIncreased_50To_100Percent() int32 {
	if x != nil {
		return x.CountIncreased_50To_100Percent
	}
	return 0
}

type ChangepointGroupStatistics_RateDistribution_RateBuckets struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Counts the number of test variant branches with a unexpected verdict rate less than 5% (exclusive).
	CountLess_5Percent int32 `protobuf:"varint,1,opt,name=count_less_5_percent,json=countLess5Percent,proto3" json:"count_less_5_percent,omitempty"`
	// Counts the number of test variant branches with a unexpected verdict rate greater than or equal to 5%, but less than 95%.
	CountAbove_5LessThan_95Percent int32 `protobuf:"varint,2,opt,name=count_above_5_less_than_95_percent,json=countAbove5LessThan95Percent,proto3" json:"count_above_5_less_than_95_percent,omitempty"`
	// Counts the number of test variant branches with a unexpected verdict rate equal to or greater than 95%.
	CountAbove_95Percent int32 `protobuf:"varint,3,opt,name=count_above_95_percent,json=countAbove95Percent,proto3" json:"count_above_95_percent,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) Reset() {
	*x = ChangepointGroupStatistics_RateDistribution_RateBuckets{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangepointGroupStatistics_RateDistribution_RateBuckets) ProtoMessage() {}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangepointGroupStatistics_RateDistribution_RateBuckets.ProtoReflect.Descriptor instead.
func (*ChangepointGroupStatistics_RateDistribution_RateBuckets) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{7, 0, 0}
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) GetCountLess_5Percent() int32 {
	if x != nil {
		return x.CountLess_5Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) GetCountAbove_5LessThan_95Percent() int32 {
	if x != nil {
		return x.CountAbove_5LessThan_95Percent
	}
	return 0
}

func (x *ChangepointGroupStatistics_RateDistribution_RateBuckets) GetCountAbove_95Percent() int32 {
	if x != nil {
		return x.CountAbove_95Percent
	}
	return 0
}

// We consider two changepoints matches if
//   - their test_id, variant_hash, ref_hash are exactly the same,
//     AND
//   - nominal_start_position is within the other changepoint's 99% confidence interval (inclusive).
//
// Most of the time there should be only one matching changepoint.
// However, in rare cases adjacent segments can have an overlapping 99% confidence interval.
// It makes it possible that more than one changepoint matches. In this case, we select the one with the closest nominal start position.
type QueryChangepointsInGroupRequest_ChangepointIdentifier struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TestId               string                 `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	VariantHash          string                 `protobuf:"bytes,2,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	RefHash              string                 `protobuf:"bytes,3,opt,name=ref_hash,json=refHash,proto3" json:"ref_hash,omitempty"`
	NominalStartPosition int64                  `protobuf:"varint,4,opt,name=nominal_start_position,json=nominalStartPosition,proto3" json:"nominal_start_position,omitempty"`
	// The nominal start hour of this changepoint in UTC.
	// This is used to locate a week in UTC (Saturday to Sunday) to generate changepoint groups.
	StartHour     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_hour,json=startHour,proto3" json:"start_hour,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) Reset() {
	*x = QueryChangepointsInGroupRequest_ChangepointIdentifier{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryChangepointsInGroupRequest_ChangepointIdentifier) ProtoMessage() {}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryChangepointsInGroupRequest_ChangepointIdentifier.ProtoReflect.Descriptor instead.
func (*QueryChangepointsInGroupRequest_ChangepointIdentifier) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP(), []int{8, 0}
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetRefHash() string {
	if x != nil {
		return x.RefHash
	}
	return ""
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetNominalStartPosition() int64 {
	if x != nil {
		return x.NominalStartPosition
	}
	return 0
}

func (x *QueryChangepointsInGroupRequest_ChangepointIdentifier) GetStartHour() *timestamppb.Timestamp {
	if x != nil {
		return x.StartHour
	}
	return nil
}

var File_go_chromium_org_luci_analysis_proto_v1_changepoints_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc = "" +
	"\n" +
	"9go.chromium.org/luci/analysis/proto/v1/changepoints.proto\x12\x10luci.analysis.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a4go.chromium.org/luci/analysis/proto/v1/sources.proto\x1a3go.chromium.org/luci/analysis/proto/v1/common.proto\"\xd3\x01\n" +
	"+QueryChangepointGroupSummariesRequestLegacy\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12J\n" +
	"\tpredicate\x18\x02 \x01(\v2,.luci.analysis.v1.ChangepointPredicateLegacyR\tpredicate\x12>\n" +
	"\rbegin_of_week\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vbeginOfWeek\"\xc3\x01\n" +
	"%QueryChangepointGroupSummariesRequest\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12D\n" +
	"\tpredicate\x18\x02 \x01(\v2&.luci.analysis.v1.ChangepointPredicateR\tpredicate\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"\xb2\x01\n" +
	"\x1aChangepointPredicateLegacy\x12$\n" +
	"\x0etest_id_prefix\x18\x01 \x01(\tR\ftestIdPrefix\x12n\n" +
	"$unexpected_verdict_rate_change_range\x18\x02 \x01(\v2\x1e.luci.analysis.v1.NumericRangeR unexpectedVerdictRateChangeRange\">\n" +
	"\x14ChangepointPredicate\x12&\n" +
	"\x0ftest_id_contain\x18\x01 \x01(\tR\rtestIdContain\"\x82\x01\n" +
	",QueryChangepointGroupSummariesResponseLegacy\x12R\n" +
	"\x0fgroup_summaries\x18\x01 \x03(\v2).luci.analysis.v1.ChangepointGroupSummaryR\x0egroupSummaries\"\xa4\x01\n" +
	"&QueryChangepointGroupSummariesResponse\x12R\n" +
	"\x0fgroup_summaries\x18\x01 \x03(\v2).luci.analysis.v1.ChangepointGroupSummaryR\x0egroupSummaries\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xbb\x01\n" +
	"\x17ChangepointGroupSummary\x12R\n" +
	"\x15canonical_changepoint\x18\x01 \x01(\v2\x1d.luci.analysis.v1.ChangepointR\x14canonicalChangepoint\x12L\n" +
	"\n" +
	"statistics\x18\x02 \x01(\v2,.luci.analysis.v1.ChangepointGroupStatisticsR\n" +
	"statistics\"\x86\t\n" +
	"\x1aChangepointGroupStatistics\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x82\x01\n" +
	"\x1eunexpected_verdict_rate_before\x18\x02 \x01(\v2=.luci.analysis.v1.ChangepointGroupStatistics.RateDistributionR\x1bunexpectedVerdictRateBefore\x12\x80\x01\n" +
	"\x1dunexpected_verdict_rate_after\x18\x03 \x01(\v2=.luci.analysis.v1.ChangepointGroupStatistics.RateDistributionR\x1aunexpectedVerdictRateAfter\x12\x84\x01\n" +
	"\x1funexpected_verdict_rate_current\x18\x04 \x01(\v2=.luci.analysis.v1.ChangepointGroupStatistics.RateDistributionR\x1cunexpectedVerdictRateCurrent\x12\x83\x01\n" +
	"\x1eunexpected_verdict_rate_change\x18\x05 \x01(\v2>.luci.analysis.v1.ChangepointGroupStatistics.RateChangeBucketsR\x1bunexpectedVerdictRateChange\x1a\xd1\x02\n" +
	"\x10RateDistribution\x12\x18\n" +
	"\aaverage\x18\x01 \x01(\x02R\aaverage\x12c\n" +
	"\abuckets\x18\x02 \x01(\v2I.luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.RateBucketsR\abuckets\x1a\xbd\x01\n" +
	"\vRateBuckets\x12/\n" +
	"\x14count_less_5_percent\x18\x01 \x01(\x05R\x11countLess5Percent\x12H\n" +
	"\"count_above_5_less_than_95_percent\x18\x02 \x01(\x05R\x1ccountAbove5LessThan95Percent\x123\n" +
	"\x16count_above_95_percent\x18\x03 \x01(\x05R\x13countAbove95Percent\x1a\xe8\x01\n" +
	"\x11RateChangeBuckets\x12C\n" +
	"\x1fcount_increased_0_to_20_percent\x18\x01 \x01(\x05R\x1acountIncreased0To20Percent\x12E\n" +
	" count_increased_20_to_50_percent\x18\x02 \x01(\x05R\x1bcountIncreased20To50Percent\x12G\n" +
	"!count_increased_50_to_100_percent\x18\x03 \x01(\x05R\x1ccountIncreased50To100Percent\"\xc9\x03\n" +
	"\x1fQueryChangepointsInGroupRequest\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12d\n" +
	"\tgroup_key\x18\x02 \x01(\v2G.luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifierR\bgroupKey\x12D\n" +
	"\tpredicate\x18\x03 \x01(\v2&.luci.analysis.v1.ChangepointPredicateR\tpredicate\x1a\xdf\x01\n" +
	"\x15ChangepointIdentifier\x12\x17\n" +
	"\atest_id\x18\x01 \x01(\tR\x06testId\x12!\n" +
	"\fvariant_hash\x18\x02 \x01(\tR\vvariantHash\x12\x19\n" +
	"\bref_hash\x18\x03 \x01(\tR\arefHash\x124\n" +
	"\x16nominal_start_position\x18\x04 \x01(\x03R\x14nominalStartPosition\x129\n" +
	"\n" +
	"start_hour\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartHour\"e\n" +
	" QueryChangepointsInGroupResponse\x12A\n" +
	"\fchangepoints\x18\x01 \x03(\v2\x1d.luci.analysis.v1.ChangepointR\fchangepoints\"\xb1\x04\n" +
	"\vChangepoint\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12\x17\n" +
	"\atest_id\x18\x02 \x01(\tR\x06testId\x12!\n" +
	"\fvariant_hash\x18\x03 \x01(\tR\vvariantHash\x123\n" +
	"\avariant\x18\x0e \x01(\v2\x19.luci.analysis.v1.VariantR\avariant\x12\x19\n" +
	"\bref_hash\x18\x04 \x01(\tR\arefHash\x12-\n" +
	"\x03ref\x18\x05 \x01(\v2\x1b.luci.analysis.v1.SourceRefR\x03ref\x129\n" +
	"\n" +
	"start_hour\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartHour\x12D\n" +
	"\x1fstart_position_lower_bound_99th\x18\n" +
	" \x01(\x03R\x1bstartPositionLowerBound99th\x12D\n" +
	"\x1fstart_position_upper_bound_99th\x18\v \x01(\x03R\x1bstartPositionUpperBound99th\x124\n" +
	"\x16nominal_start_position\x18\f \x01(\x03R\x14nominalStartPosition\x12P\n" +
	"%previous_segment_nominal_end_position\x18\r \x01(\x03R!previousSegmentNominalEndPosition2\xc5\x03\n" +
	"\fChangepoints\x12\xa1\x01\n" +
	"\x1eQueryChangepointGroupSummaries\x12=.luci.analysis.v1.QueryChangepointGroupSummariesRequestLegacy\x1a>.luci.analysis.v1.QueryChangepointGroupSummariesResponseLegacy\"\x00\x12\x8a\x01\n" +
	"\x13QueryGroupSummaries\x127.luci.analysis.v1.QueryChangepointGroupSummariesRequest\x1a8.luci.analysis.v1.QueryChangepointGroupSummariesResponse\"\x00\x12\x83\x01\n" +
	"\x18QueryChangepointsInGroup\x121.luci.analysis.v1.QueryChangepointsInGroupRequest\x1a2.luci.analysis.v1.QueryChangepointsInGroupResponse\"\x00B3Z1go.chromium.org/luci/analysis/proto/v1;analysispbb\x06proto3"

var (
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_goTypes = []any{
	(*QueryChangepointGroupSummariesRequestLegacy)(nil),             // 0: luci.analysis.v1.QueryChangepointGroupSummariesRequestLegacy
	(*QueryChangepointGroupSummariesRequest)(nil),                   // 1: luci.analysis.v1.QueryChangepointGroupSummariesRequest
	(*ChangepointPredicateLegacy)(nil),                              // 2: luci.analysis.v1.ChangepointPredicateLegacy
	(*ChangepointPredicate)(nil),                                    // 3: luci.analysis.v1.ChangepointPredicate
	(*QueryChangepointGroupSummariesResponseLegacy)(nil),            // 4: luci.analysis.v1.QueryChangepointGroupSummariesResponseLegacy
	(*QueryChangepointGroupSummariesResponse)(nil),                  // 5: luci.analysis.v1.QueryChangepointGroupSummariesResponse
	(*ChangepointGroupSummary)(nil),                                 // 6: luci.analysis.v1.ChangepointGroupSummary
	(*ChangepointGroupStatistics)(nil),                              // 7: luci.analysis.v1.ChangepointGroupStatistics
	(*QueryChangepointsInGroupRequest)(nil),                         // 8: luci.analysis.v1.QueryChangepointsInGroupRequest
	(*QueryChangepointsInGroupResponse)(nil),                        // 9: luci.analysis.v1.QueryChangepointsInGroupResponse
	(*Changepoint)(nil),                                             // 10: luci.analysis.v1.Changepoint
	(*ChangepointGroupStatistics_RateDistribution)(nil),             // 11: luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	(*ChangepointGroupStatistics_RateChangeBuckets)(nil),            // 12: luci.analysis.v1.ChangepointGroupStatistics.RateChangeBuckets
	(*ChangepointGroupStatistics_RateDistribution_RateBuckets)(nil), // 13: luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.RateBuckets
	(*QueryChangepointsInGroupRequest_ChangepointIdentifier)(nil),   // 14: luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifier
	(*timestamppb.Timestamp)(nil),                                   // 15: google.protobuf.Timestamp
	(*NumericRange)(nil),                                            // 16: luci.analysis.v1.NumericRange
	(*Variant)(nil),                                                 // 17: luci.analysis.v1.Variant
	(*SourceRef)(nil),                                               // 18: luci.analysis.v1.SourceRef
}
var file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_depIdxs = []int32{
	2,  // 0: luci.analysis.v1.QueryChangepointGroupSummariesRequestLegacy.predicate:type_name -> luci.analysis.v1.ChangepointPredicateLegacy
	15, // 1: luci.analysis.v1.QueryChangepointGroupSummariesRequestLegacy.begin_of_week:type_name -> google.protobuf.Timestamp
	3,  // 2: luci.analysis.v1.QueryChangepointGroupSummariesRequest.predicate:type_name -> luci.analysis.v1.ChangepointPredicate
	16, // 3: luci.analysis.v1.ChangepointPredicateLegacy.unexpected_verdict_rate_change_range:type_name -> luci.analysis.v1.NumericRange
	6,  // 4: luci.analysis.v1.QueryChangepointGroupSummariesResponseLegacy.group_summaries:type_name -> luci.analysis.v1.ChangepointGroupSummary
	6,  // 5: luci.analysis.v1.QueryChangepointGroupSummariesResponse.group_summaries:type_name -> luci.analysis.v1.ChangepointGroupSummary
	10, // 6: luci.analysis.v1.ChangepointGroupSummary.canonical_changepoint:type_name -> luci.analysis.v1.Changepoint
	7,  // 7: luci.analysis.v1.ChangepointGroupSummary.statistics:type_name -> luci.analysis.v1.ChangepointGroupStatistics
	11, // 8: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_before:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	11, // 9: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_after:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	11, // 10: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_current:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution
	12, // 11: luci.analysis.v1.ChangepointGroupStatistics.unexpected_verdict_rate_change:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateChangeBuckets
	14, // 12: luci.analysis.v1.QueryChangepointsInGroupRequest.group_key:type_name -> luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifier
	3,  // 13: luci.analysis.v1.QueryChangepointsInGroupRequest.predicate:type_name -> luci.analysis.v1.ChangepointPredicate
	10, // 14: luci.analysis.v1.QueryChangepointsInGroupResponse.changepoints:type_name -> luci.analysis.v1.Changepoint
	17, // 15: luci.analysis.v1.Changepoint.variant:type_name -> luci.analysis.v1.Variant
	18, // 16: luci.analysis.v1.Changepoint.ref:type_name -> luci.analysis.v1.SourceRef
	15, // 17: luci.analysis.v1.Changepoint.start_hour:type_name -> google.protobuf.Timestamp
	13, // 18: luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.buckets:type_name -> luci.analysis.v1.ChangepointGroupStatistics.RateDistribution.RateBuckets
	15, // 19: luci.analysis.v1.QueryChangepointsInGroupRequest.ChangepointIdentifier.start_hour:type_name -> google.protobuf.Timestamp
	0,  // 20: luci.analysis.v1.Changepoints.QueryChangepointGroupSummaries:input_type -> luci.analysis.v1.QueryChangepointGroupSummariesRequestLegacy
	1,  // 21: luci.analysis.v1.Changepoints.QueryGroupSummaries:input_type -> luci.analysis.v1.QueryChangepointGroupSummariesRequest
	8,  // 22: luci.analysis.v1.Changepoints.QueryChangepointsInGroup:input_type -> luci.analysis.v1.QueryChangepointsInGroupRequest
	4,  // 23: luci.analysis.v1.Changepoints.QueryChangepointGroupSummaries:output_type -> luci.analysis.v1.QueryChangepointGroupSummariesResponseLegacy
	5,  // 24: luci.analysis.v1.Changepoints.QueryGroupSummaries:output_type -> luci.analysis.v1.QueryChangepointGroupSummariesResponse
	9,  // 25: luci.analysis.v1.Changepoints.QueryChangepointsInGroup:output_type -> luci.analysis.v1.QueryChangepointsInGroupResponse
	23, // [23:26] is the sub-list for method output_type
	20, // [20:23] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_init() }
func file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_v1_changepoints_proto != nil {
		return
	}
	file_go_chromium_org_luci_analysis_proto_v1_sources_proto_init()
	file_go_chromium_org_luci_analysis_proto_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_v1_changepoints_proto = out.File
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_v1_changepoints_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChangepointsClient is the client API for Changepoints service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChangepointsClient interface {
	// Query the changepoint group summaries.
	// Currently this RPC only returns at most 1000 changepoint groups starting at the current week.
	//
	// Deprecated: use QueryGroupSummaries instead.
	QueryChangepointGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequestLegacy, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponseLegacy, error)
	// Query the summaries of changepoint groups started at a week within the last 90 days.
	QueryGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequest, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponse, error)
	// Query the changepoints in a particular group.
	// TODO: Implement pagination, currently just return at most 1000 changepoints.
	QueryChangepointsInGroup(ctx context.Context, in *QueryChangepointsInGroupRequest, opts ...grpc.CallOption) (*QueryChangepointsInGroupResponse, error)
}
type changepointsPRPCClient struct {
	client *prpc.Client
}

func NewChangepointsPRPCClient(client *prpc.Client) ChangepointsClient {
	return &changepointsPRPCClient{client}
}

func (c *changepointsPRPCClient) QueryChangepointGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequestLegacy, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponseLegacy, error) {
	out := new(QueryChangepointGroupSummariesResponseLegacy)
	err := c.client.Call(ctx, "luci.analysis.v1.Changepoints", "QueryChangepointGroupSummaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changepointsPRPCClient) QueryGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequest, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponse, error) {
	out := new(QueryChangepointGroupSummariesResponse)
	err := c.client.Call(ctx, "luci.analysis.v1.Changepoints", "QueryGroupSummaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changepointsPRPCClient) QueryChangepointsInGroup(ctx context.Context, in *QueryChangepointsInGroupRequest, opts ...grpc.CallOption) (*QueryChangepointsInGroupResponse, error) {
	out := new(QueryChangepointsInGroupResponse)
	err := c.client.Call(ctx, "luci.analysis.v1.Changepoints", "QueryChangepointsInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type changepointsClient struct {
	cc grpc.ClientConnInterface
}

func NewChangepointsClient(cc grpc.ClientConnInterface) ChangepointsClient {
	return &changepointsClient{cc}
}

func (c *changepointsClient) QueryChangepointGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequestLegacy, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponseLegacy, error) {
	out := new(QueryChangepointGroupSummariesResponseLegacy)
	err := c.cc.Invoke(ctx, "/luci.analysis.v1.Changepoints/QueryChangepointGroupSummaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changepointsClient) QueryGroupSummaries(ctx context.Context, in *QueryChangepointGroupSummariesRequest, opts ...grpc.CallOption) (*QueryChangepointGroupSummariesResponse, error) {
	out := new(QueryChangepointGroupSummariesResponse)
	err := c.cc.Invoke(ctx, "/luci.analysis.v1.Changepoints/QueryGroupSummaries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *changepointsClient) QueryChangepointsInGroup(ctx context.Context, in *QueryChangepointsInGroupRequest, opts ...grpc.CallOption) (*QueryChangepointsInGroupResponse, error) {
	out := new(QueryChangepointsInGroupResponse)
	err := c.cc.Invoke(ctx, "/luci.analysis.v1.Changepoints/QueryChangepointsInGroup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChangepointsServer is the server API for Changepoints service.
type ChangepointsServer interface {
	// Query the changepoint group summaries.
	// Currently this RPC only returns at most 1000 changepoint groups starting at the current week.
	//
	// Deprecated: use QueryGroupSummaries instead.
	QueryChangepointGroupSummaries(context.Context, *QueryChangepointGroupSummariesRequestLegacy) (*QueryChangepointGroupSummariesResponseLegacy, error)
	// Query the summaries of changepoint groups started at a week within the last 90 days.
	QueryGroupSummaries(context.Context, *QueryChangepointGroupSummariesRequest) (*QueryChangepointGroupSummariesResponse, error)
	// Query the changepoints in a particular group.
	// TODO: Implement pagination, currently just return at most 1000 changepoints.
	QueryChangepointsInGroup(context.Context, *QueryChangepointsInGroupRequest) (*QueryChangepointsInGroupResponse, error)
}

// UnimplementedChangepointsServer can be embedded to have forward compatible implementations.
type UnimplementedChangepointsServer struct {
}

func (*UnimplementedChangepointsServer) QueryChangepointGroupSummaries(context.Context, *QueryChangepointGroupSummariesRequestLegacy) (*QueryChangepointGroupSummariesResponseLegacy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryChangepointGroupSummaries not implemented")
}
func (*UnimplementedChangepointsServer) QueryGroupSummaries(context.Context, *QueryChangepointGroupSummariesRequest) (*QueryChangepointGroupSummariesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryGroupSummaries not implemented")
}
func (*UnimplementedChangepointsServer) QueryChangepointsInGroup(context.Context, *QueryChangepointsInGroupRequest) (*QueryChangepointsInGroupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryChangepointsInGroup not implemented")
}

func RegisterChangepointsServer(s prpc.Registrar, srv ChangepointsServer) {
	s.RegisterService(&_Changepoints_serviceDesc, srv)
}

func _Changepoints_QueryChangepointGroupSummaries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryChangepointGroupSummariesRequestLegacy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangepointsServer).QueryChangepointGroupSummaries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.v1.Changepoints/QueryChangepointGroupSummaries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangepointsServer).QueryChangepointGroupSummaries(ctx, req.(*QueryChangepointGroupSummariesRequestLegacy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Changepoints_QueryGroupSummaries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryChangepointGroupSummariesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangepointsServer).QueryGroupSummaries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.v1.Changepoints/QueryGroupSummaries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangepointsServer).QueryGroupSummaries(ctx, req.(*QueryChangepointGroupSummariesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Changepoints_QueryChangepointsInGroup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryChangepointsInGroupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChangepointsServer).QueryChangepointsInGroup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luci.analysis.v1.Changepoints/QueryChangepointsInGroup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChangepointsServer).QueryChangepointsInGroup(ctx, req.(*QueryChangepointsInGroupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Changepoints_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luci.analysis.v1.Changepoints",
	HandlerType: (*ChangepointsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryChangepointGroupSummaries",
			Handler:    _Changepoints_QueryChangepointGroupSummaries_Handler,
		},
		{
			MethodName: "QueryGroupSummaries",
			Handler:    _Changepoints_QueryGroupSummaries_Handler,
		},
		{
			MethodName: "QueryChangepointsInGroup",
			Handler:    _Changepoints_QueryChangepointsInGroup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/analysis/proto/v1/changepoints.proto",
}
