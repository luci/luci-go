// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/analysis/proto/v1/predicate.proto

package analysispb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents a function Variant -> bool.
type VariantPredicate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Predicate:
	//
	//	*VariantPredicate_Equals
	//	*VariantPredicate_Contains
	//	*VariantPredicate_HashEquals
	Predicate     isVariantPredicate_Predicate `protobuf_oneof:"predicate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VariantPredicate) Reset() {
	*x = VariantPredicate{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VariantPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariantPredicate) ProtoMessage() {}

func (x *VariantPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariantPredicate.ProtoReflect.Descriptor instead.
func (*VariantPredicate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescGZIP(), []int{0}
}

func (x *VariantPredicate) GetPredicate() isVariantPredicate_Predicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *VariantPredicate) GetEquals() *Variant {
	if x != nil {
		if x, ok := x.Predicate.(*VariantPredicate_Equals); ok {
			return x.Equals
		}
	}
	return nil
}

func (x *VariantPredicate) GetContains() *Variant {
	if x != nil {
		if x, ok := x.Predicate.(*VariantPredicate_Contains); ok {
			return x.Contains
		}
	}
	return nil
}

func (x *VariantPredicate) GetHashEquals() string {
	if x != nil {
		if x, ok := x.Predicate.(*VariantPredicate_HashEquals); ok {
			return x.HashEquals
		}
	}
	return ""
}

type isVariantPredicate_Predicate interface {
	isVariantPredicate_Predicate()
}

type VariantPredicate_Equals struct {
	// A variant must be equal this definition exactly.
	Equals *Variant `protobuf:"bytes,1,opt,name=equals,proto3,oneof"`
}

type VariantPredicate_Contains struct {
	// A variant's key-value pairs must contain those in this one.
	Contains *Variant `protobuf:"bytes,2,opt,name=contains,proto3,oneof"`
}

type VariantPredicate_HashEquals struct {
	// A variant's hash must equal this value exactly.
	HashEquals string `protobuf:"bytes,3,opt,name=hash_equals,json=hashEquals,proto3,oneof"`
}

func (*VariantPredicate_Equals) isVariantPredicate_Predicate() {}

func (*VariantPredicate_Contains) isVariantPredicate_Predicate() {}

func (*VariantPredicate_HashEquals) isVariantPredicate_Predicate() {}

// Represents a function TestVerdict -> bool.
type TestVerdictPredicate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The project-scoped realm to query the history from.
	// This is the realm without the "<project>:" prefix.
	//
	// When specified, only the test history entries found in the matching realm
	// will be returned.
	SubRealm string `protobuf:"bytes,1,opt,name=sub_realm,json=subRealm,proto3" json:"sub_realm,omitempty"`
	// Optional. The subset of test variants to request history for.
	VariantPredicate *VariantPredicate `protobuf:"bytes,2,opt,name=variant_predicate,json=variantPredicate,proto3" json:"variant_predicate,omitempty"`
	// Optional. Whether test verdicts generated by code with unsubmitted changes
	// (e.g. Gerrit changes) should be included in the response.
	//
	// If no filter is specified, all verdicts are returned (regardless of
	// submitted status).
	SubmittedFilter SubmittedFilter `protobuf:"varint,3,opt,name=submitted_filter,json=submittedFilter,proto3,enum=luci.analysis.v1.SubmittedFilter" json:"submitted_filter,omitempty"`
	// Optional. Specify a range of timestamps to query the test history from.
	//
	// Test history older than the configured TTL (90 days) will not be returned.
	// When omitted, return all available test history.
	PartitionTimeRange *TimeRange `protobuf:"bytes,4,opt,name=partition_time_range,json=partitionTimeRange,proto3" json:"partition_time_range,omitempty"`
	// Optional. Whether to include the test results from LUCI Bisection.
	// Results from LUCI Bisection are only return if this is true.
	// LUCI Bisection results are excluded by default.
	IncludeBisectionResults bool `protobuf:"varint,5,opt,name=include_bisection_results,json=includeBisectionResults,proto3" json:"include_bisection_results,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TestVerdictPredicate) Reset() {
	*x = TestVerdictPredicate{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestVerdictPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestVerdictPredicate) ProtoMessage() {}

func (x *TestVerdictPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestVerdictPredicate.ProtoReflect.Descriptor instead.
func (*TestVerdictPredicate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescGZIP(), []int{1}
}

func (x *TestVerdictPredicate) GetSubRealm() string {
	if x != nil {
		return x.SubRealm
	}
	return ""
}

func (x *TestVerdictPredicate) GetVariantPredicate() *VariantPredicate {
	if x != nil {
		return x.VariantPredicate
	}
	return nil
}

func (x *TestVerdictPredicate) GetSubmittedFilter() SubmittedFilter {
	if x != nil {
		return x.SubmittedFilter
	}
	return SubmittedFilter_SUBMITTED_FILTER_UNSPECIFIED
}

func (x *TestVerdictPredicate) GetPartitionTimeRange() *TimeRange {
	if x != nil {
		return x.PartitionTimeRange
	}
	return nil
}

func (x *TestVerdictPredicate) GetIncludeBisectionResults() bool {
	if x != nil {
		return x.IncludeBisectionResults
	}
	return false
}

var File_go_chromium_org_luci_analysis_proto_v1_predicate_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDesc = "" +
	"\n" +
	"6go.chromium.org/luci/analysis/proto/v1/predicate.proto\x12\x10luci.analysis.v1\x1a3go.chromium.org/luci/analysis/proto/v1/common.proto\"\xb0\x01\n" +
	"\x10VariantPredicate\x123\n" +
	"\x06equals\x18\x01 \x01(\v2\x19.luci.analysis.v1.VariantH\x00R\x06equals\x127\n" +
	"\bcontains\x18\x02 \x01(\v2\x19.luci.analysis.v1.VariantH\x00R\bcontains\x12!\n" +
	"\vhash_equals\x18\x03 \x01(\tH\x00R\n" +
	"hashEqualsB\v\n" +
	"\tpredicate\"\xdd\x02\n" +
	"\x14TestVerdictPredicate\x12\x1b\n" +
	"\tsub_realm\x18\x01 \x01(\tR\bsubRealm\x12O\n" +
	"\x11variant_predicate\x18\x02 \x01(\v2\".luci.analysis.v1.VariantPredicateR\x10variantPredicate\x12L\n" +
	"\x10submitted_filter\x18\x03 \x01(\x0e2!.luci.analysis.v1.SubmittedFilterR\x0fsubmittedFilter\x12M\n" +
	"\x14partition_time_range\x18\x04 \x01(\v2\x1b.luci.analysis.v1.TimeRangeR\x12partitionTimeRange\x12:\n" +
	"\x19include_bisection_results\x18\x05 \x01(\bR\x17includeBisectionResultsB3Z1go.chromium.org/luci/analysis/proto/v1;analysispbb\x06proto3"

var (
	file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_goTypes = []any{
	(*VariantPredicate)(nil),     // 0: luci.analysis.v1.VariantPredicate
	(*TestVerdictPredicate)(nil), // 1: luci.analysis.v1.TestVerdictPredicate
	(*Variant)(nil),              // 2: luci.analysis.v1.Variant
	(SubmittedFilter)(0),         // 3: luci.analysis.v1.SubmittedFilter
	(*TimeRange)(nil),            // 4: luci.analysis.v1.TimeRange
}
var file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_depIdxs = []int32{
	2, // 0: luci.analysis.v1.VariantPredicate.equals:type_name -> luci.analysis.v1.Variant
	2, // 1: luci.analysis.v1.VariantPredicate.contains:type_name -> luci.analysis.v1.Variant
	0, // 2: luci.analysis.v1.TestVerdictPredicate.variant_predicate:type_name -> luci.analysis.v1.VariantPredicate
	3, // 3: luci.analysis.v1.TestVerdictPredicate.submitted_filter:type_name -> luci.analysis.v1.SubmittedFilter
	4, // 4: luci.analysis.v1.TestVerdictPredicate.partition_time_range:type_name -> luci.analysis.v1.TimeRange
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_init() }
func file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_v1_predicate_proto != nil {
		return
	}
	file_go_chromium_org_luci_analysis_proto_v1_common_proto_init()
	file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes[0].OneofWrappers = []any{
		(*VariantPredicate_Equals)(nil),
		(*VariantPredicate_Contains)(nil),
		(*VariantPredicate_HashEquals)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_v1_predicate_proto = out.File
	file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_v1_predicate_proto_depIdxs = nil
}
