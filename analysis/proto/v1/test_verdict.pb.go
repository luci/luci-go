// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/analysis/proto/v1/test_verdict.proto

package analysispb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status of a test result.
// It is a mirror of luci.resultdb.v1.TestStatus, but the right to evolve
// it independently is reserved.
type TestResultStatus int32

const (
	// Status was not specified.
	// Not to be used in actual test results; serves as a default value for an
	// unset field.
	TestResultStatus_TEST_RESULT_STATUS_UNSPECIFIED TestResultStatus = 0
	// The test case has passed.
	TestResultStatus_PASS TestResultStatus = 1
	// The test case has failed.
	// Suggests that the code under test is incorrect, but it is also possible
	// that the test is incorrect or it is a flake.
	TestResultStatus_FAIL TestResultStatus = 2
	// The test case has crashed during execution.
	// The outcome is inconclusive: the code under test might or might not be
	// correct, but the test+code is incorrect.
	TestResultStatus_CRASH TestResultStatus = 3
	// The test case has started, but was aborted before finishing.
	// A common reason: timeout.
	TestResultStatus_ABORT TestResultStatus = 4
	// The test case did not execute.
	// Examples:
	//   - The execution of the collection of test cases, such as a test
	//     binary, was aborted prematurely and execution of some test cases was
	//     skipped.
	//   - The test harness configuration specified that the test case MUST be
	//     skipped.
	TestResultStatus_SKIP TestResultStatus = 5
)

// Enum value maps for TestResultStatus.
var (
	TestResultStatus_name = map[int32]string{
		0: "TEST_RESULT_STATUS_UNSPECIFIED",
		1: "PASS",
		2: "FAIL",
		3: "CRASH",
		4: "ABORT",
		5: "SKIP",
	}
	TestResultStatus_value = map[string]int32{
		"TEST_RESULT_STATUS_UNSPECIFIED": 0,
		"PASS":                           1,
		"FAIL":                           2,
		"CRASH":                          3,
		"ABORT":                          4,
		"SKIP":                           5,
	}
)

func (x TestResultStatus) Enum() *TestResultStatus {
	p := new(TestResultStatus)
	*p = x
	return p
}

func (x TestResultStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestResultStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes[0].Descriptor()
}

func (TestResultStatus) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes[0]
}

func (x TestResultStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestResultStatus.Descriptor instead.
func (TestResultStatus) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescGZIP(), []int{0}
}

// Status of a test verdict.
// It is a mirror of luci.resultdb.v1.TestVariantStatus.
type TestVerdictStatus int32

const (
	// a test verdict must not have this status.
	// This is only used when filtering verdicts.
	TestVerdictStatus_TEST_VERDICT_STATUS_UNSPECIFIED TestVerdictStatus = 0
	// The test verdict has no exonerations, and all results are unexpected.
	TestVerdictStatus_UNEXPECTED TestVerdictStatus = 10
	// The test verdict has no exonerations, and all results are unexpectedly skipped.
	TestVerdictStatus_UNEXPECTEDLY_SKIPPED TestVerdictStatus = 20
	// The test verdict has no exonerations, and has both expected and unexpected
	// results.
	TestVerdictStatus_FLAKY TestVerdictStatus = 30
	// The test verdict has one or more test exonerations.
	TestVerdictStatus_EXONERATED TestVerdictStatus = 40
	// The test verdict has no exonerations, and all results are expected.
	TestVerdictStatus_EXPECTED TestVerdictStatus = 50
)

// Enum value maps for TestVerdictStatus.
var (
	TestVerdictStatus_name = map[int32]string{
		0:  "TEST_VERDICT_STATUS_UNSPECIFIED",
		10: "UNEXPECTED",
		20: "UNEXPECTEDLY_SKIPPED",
		30: "FLAKY",
		40: "EXONERATED",
		50: "EXPECTED",
	}
	TestVerdictStatus_value = map[string]int32{
		"TEST_VERDICT_STATUS_UNSPECIFIED": 0,
		"UNEXPECTED":                      10,
		"UNEXPECTEDLY_SKIPPED":            20,
		"FLAKY":                           30,
		"EXONERATED":                      40,
		"EXPECTED":                        50,
	}
)

func (x TestVerdictStatus) Enum() *TestVerdictStatus {
	p := new(TestVerdictStatus)
	*p = x
	return p
}

func (x TestVerdictStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestVerdictStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes[1].Descriptor()
}

func (TestVerdictStatus) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes[1]
}

func (x TestVerdictStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestVerdictStatus.Descriptor instead.
func (TestVerdictStatus) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescGZIP(), []int{1}
}

// Machine-readable reason that a test execution was skipped.
// It is a mirror of luci.resultdb.v1.SkipReason, but the right to evolve
// it independently is reserved.
type SkipReason int32

const (
	// Skip reason was not specified.
	// This represents an unset field which should be used for non-skip test
	// result statuses.  It can also be used if none of the other statuses
	// apply.
	SkipReason_SKIP_REASON_UNSPECIFIED SkipReason = 0
	// Disabled automatically in response to a test skipping policy that skips
	// flaky tests.
	// Used for ChromeOS CQ test filtering.
	SkipReason_AUTOMATICALLY_DISABLED_FOR_FLAKINESS SkipReason = 1
)

// Enum value maps for SkipReason.
var (
	SkipReason_name = map[int32]string{
		0: "SKIP_REASON_UNSPECIFIED",
		1: "AUTOMATICALLY_DISABLED_FOR_FLAKINESS",
	}
	SkipReason_value = map[string]int32{
		"SKIP_REASON_UNSPECIFIED":              0,
		"AUTOMATICALLY_DISABLED_FOR_FLAKINESS": 1,
	}
)

func (x SkipReason) Enum() *SkipReason {
	p := new(SkipReason)
	*p = x
	return p
}

func (x SkipReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SkipReason) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes[2].Descriptor()
}

func (SkipReason) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes[2]
}

func (x SkipReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SkipReason.Descriptor instead.
func (SkipReason) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescGZIP(), []int{2}
}

type TestVerdict struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier of the test.
	// This has the same value as luci.resultdb.v1.TestResult.test_id.
	TestId string `protobuf:"bytes,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	// The hash of the variant.
	VariantHash string `protobuf:"bytes,2,opt,name=variant_hash,json=variantHash,proto3" json:"variant_hash,omitempty"`
	// The ID of the top-level invocation that the test verdict belongs to when
	// ingested.
	InvocationId string `protobuf:"bytes,3,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	// The status of the test verdict.
	Status TestVerdictStatus `protobuf:"varint,4,opt,name=status,proto3,enum=luci.analysis.v1.TestVerdictStatus" json:"status,omitempty"`
	// The time the verdict's invocation was created in Spanner. This
	// is the start of the test verdict's retention period.
	PartitionTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=partition_time,json=partitionTime,proto3" json:"partition_time,omitempty"`
	// The average duration of the PASSED test results included in the test
	// verdict.
	PassedAvgDuration *durationpb.Duration `protobuf:"bytes,6,opt,name=passed_avg_duration,json=passedAvgDuration,proto3" json:"passed_avg_duration,omitempty"`
	// The changelist(s) that were tested, if any. If there are more 10, only
	// the first 10 are returned here.
	Changelists   []*Changelist `protobuf:"bytes,7,rep,name=changelists,proto3" json:"changelists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestVerdict) Reset() {
	*x = TestVerdict{}
	mi := &file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestVerdict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestVerdict) ProtoMessage() {}

func (x *TestVerdict) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestVerdict.ProtoReflect.Descriptor instead.
func (*TestVerdict) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescGZIP(), []int{0}
}

func (x *TestVerdict) GetTestId() string {
	if x != nil {
		return x.TestId
	}
	return ""
}

func (x *TestVerdict) GetVariantHash() string {
	if x != nil {
		return x.VariantHash
	}
	return ""
}

func (x *TestVerdict) GetInvocationId() string {
	if x != nil {
		return x.InvocationId
	}
	return ""
}

func (x *TestVerdict) GetStatus() TestVerdictStatus {
	if x != nil {
		return x.Status
	}
	return TestVerdictStatus_TEST_VERDICT_STATUS_UNSPECIFIED
}

func (x *TestVerdict) GetPartitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PartitionTime
	}
	return nil
}

func (x *TestVerdict) GetPassedAvgDuration() *durationpb.Duration {
	if x != nil {
		return x.PassedAvgDuration
	}
	return nil
}

func (x *TestVerdict) GetChangelists() []*Changelist {
	if x != nil {
		return x.Changelists
	}
	return nil
}

var File_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDesc = string([]byte{
	0x0a, 0x39, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x64, 0x69, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6c, 0x75, 0x63,
	0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34,
	0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72,
	0x64, 0x69, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x41, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x76, 0x67, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x70,
	0x61, 0x73, 0x73, 0x65, 0x64, 0x41, 0x76, 0x67, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x73,
	0x2a, 0x6a, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x52, 0x41, 0x53, 0x48, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x42, 0x4f, 0x52, 0x54,
	0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x4b, 0x49, 0x50, 0x10, 0x05, 0x2a, 0x8b, 0x01, 0x0a,
	0x11, 0x54, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x1f, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x56, 0x45, 0x52, 0x44, 0x49,
	0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x45, 0x58, 0x50,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x45, 0x58, 0x50,
	0x45, 0x43, 0x54, 0x45, 0x44, 0x4c, 0x59, 0x5f, 0x53, 0x4b, 0x49, 0x50, 0x50, 0x45, 0x44, 0x10,
	0x14, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x4c, 0x41, 0x4b, 0x59, 0x10, 0x1e, 0x12, 0x0e, 0x0a, 0x0a,
	0x45, 0x58, 0x4f, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x45, 0x44, 0x10, 0x28, 0x12, 0x0c, 0x0a, 0x08,
	0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x32, 0x2a, 0x53, 0x0a, 0x0a, 0x53, 0x6b,
	0x69, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4b, 0x49, 0x50,
	0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x28, 0x0a, 0x24, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x5f,
	0x46, 0x4f, 0x52, 0x5f, 0x46, 0x4c, 0x41, 0x4b, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x01, 0x42,
	0x33, 0x5a, 0x31, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescData []byte
)

func file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDescData
}

var file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_goTypes = []any{
	(TestResultStatus)(0),         // 0: luci.analysis.v1.TestResultStatus
	(TestVerdictStatus)(0),        // 1: luci.analysis.v1.TestVerdictStatus
	(SkipReason)(0),               // 2: luci.analysis.v1.SkipReason
	(*TestVerdict)(nil),           // 3: luci.analysis.v1.TestVerdict
	(*timestamppb.Timestamp)(nil), // 4: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 5: google.protobuf.Duration
	(*Changelist)(nil),            // 6: luci.analysis.v1.Changelist
}
var file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_depIdxs = []int32{
	1, // 0: luci.analysis.v1.TestVerdict.status:type_name -> luci.analysis.v1.TestVerdictStatus
	4, // 1: luci.analysis.v1.TestVerdict.partition_time:type_name -> google.protobuf.Timestamp
	5, // 2: luci.analysis.v1.TestVerdict.passed_avg_duration:type_name -> google.protobuf.Duration
	6, // 3: luci.analysis.v1.TestVerdict.changelists:type_name -> luci.analysis.v1.Changelist
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_init() }
func file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_init() {
	if File_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto != nil {
		return
	}
	file_go_chromium_org_luci_analysis_proto_v1_sources_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDesc), len(file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto = out.File
	file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_goTypes = nil
	file_go_chromium_org_luci_analysis_proto_v1_test_verdict_proto_depIdxs = nil
}
