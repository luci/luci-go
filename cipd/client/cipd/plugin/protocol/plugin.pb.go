// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/cipd/client/cipd/plugin/protocol/plugin.proto

package protocol

import (
	caspb "go.chromium.org/luci/cipd/api/cipd/v1/caspb"
	repopb "go.chromium.org/luci/cipd/api/cipd/v1/repopb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Handshake is sent in a compact (no new lines) JSONPB encoding over stdin from
// the plugin host (e.g. CIPD client) to the plugin process.
//
// It instructs the plugin how to connect and authenticate to the host.
type Handshake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          int32                  `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`    // localhost TCP port to connect to
	Ticket        string                 `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"` // a secret string to send as x-plugin-ticket metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *Handshake) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Handshake) GetTicket() string {
	if x != nil {
		return x.Ticket
	}
	return ""
}

// LogRequest results in a logging line in the CIPD client log.
type LogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Severity      string                 `protobuf:"bytes,1,opt,name=severity,proto3" json:"severity,omitempty"` // "debug", info", "warning", "error"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *LogRequest) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *LogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListMetadataRequest contains arguments for ListMetadata RPC.
type ListMetadataRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL ("https://...") of the CIPD backend that hosts the package.
	ServiceUrl string `protobuf:"bytes,1,opt,name=service_url,json=serviceUrl,proto3" json:"service_url,omitempty"`
	// The package that holds the instance we list metadata of.
	Package string `protobuf:"bytes,2,opt,name=package,proto3" json:"package,omitempty"`
	// The instance to list metadata of.
	Instance *caspb.ObjectRef `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	// Metadata keys to limit the listing to or empty to list all metadata.
	Keys []string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	// Maximum number of results to return on one page.
	PageSize int32 `protobuf:"varint,20,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Value of 'next_page_token' from the previous response.
	PageToken     string `protobuf:"bytes,21,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetadataRequest) Reset() {
	*x = ListMetadataRequest{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetadataRequest) ProtoMessage() {}

func (x *ListMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetadataRequest.ProtoReflect.Descriptor instead.
func (*ListMetadataRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescGZIP(), []int{2}
}

func (x *ListMetadataRequest) GetServiceUrl() string {
	if x != nil {
		return x.ServiceUrl
	}
	return ""
}

func (x *ListMetadataRequest) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *ListMetadataRequest) GetInstance() *caspb.ObjectRef {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *ListMetadataRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *ListMetadataRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListMetadataRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListMetadataResponse contains one page of results.
type ListMetadataResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Discovered metadata ordered by 'attached_ts' (the most recent first).
	Metadata []*repopb.InstanceMetadata `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// Not empty if potentially have more metadata, can be passed to ListMetadata.
	NextPageToken string `protobuf:"bytes,20,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMetadataResponse) Reset() {
	*x = ListMetadataResponse{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMetadataResponse) ProtoMessage() {}

func (x *ListMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMetadataResponse.ProtoReflect.Descriptor instead.
func (*ListMetadataResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescGZIP(), []int{3}
}

func (x *ListMetadataResponse) GetMetadata() []*repopb.InstanceMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ListMetadataResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDesc = "" +
	"\n" +
	"Bgo.chromium.org/luci/cipd/client/cipd/plugin/protocol/plugin.proto\x12\vcipd.plugin\x1a\x1bgoogle/protobuf/empty.proto\x1a/go.chromium.org/luci/cipd/api/cipd/v1/cas.proto\x1a0go.chromium.org/luci/cipd/api/cipd/v1/repo.proto\"7\n" +
	"\tHandshake\x12\x12\n" +
	"\x04port\x18\x01 \x01(\x05R\x04port\x12\x16\n" +
	"\x06ticket\x18\x02 \x01(\tR\x06ticket\"B\n" +
	"\n" +
	"LogRequest\x12\x1a\n" +
	"\bseverity\x18\x01 \x01(\tR\bseverity\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xcd\x01\n" +
	"\x13ListMetadataRequest\x12\x1f\n" +
	"\vservice_url\x18\x01 \x01(\tR\n" +
	"serviceUrl\x12\x18\n" +
	"\apackage\x18\x02 \x01(\tR\apackage\x12+\n" +
	"\binstance\x18\x03 \x01(\v2\x0f.cipd.ObjectRefR\binstance\x12\x12\n" +
	"\x04keys\x18\x04 \x03(\tR\x04keys\x12\x1b\n" +
	"\tpage_size\x18\x14 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x15 \x01(\tR\tpageToken\"r\n" +
	"\x14ListMetadataResponse\x122\n" +
	"\bmetadata\x18\x01 \x03(\v2\x16.cipd.InstanceMetadataR\bmetadata\x12&\n" +
	"\x0fnext_page_token\x18\x14 \x01(\tR\rnextPageToken2\x93\x01\n" +
	"\x04Host\x126\n" +
	"\x03Log\x12\x17.cipd.plugin.LogRequest\x1a\x16.google.protobuf.Empty\x12S\n" +
	"\fListMetadata\x12 .cipd.plugin.ListMetadataRequest\x1a!.cipd.plugin.ListMetadataResponseB7Z5go.chromium.org/luci/cipd/client/cipd/plugin/protocolb\x06proto3"

var (
	file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDesc), len(file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDescData
}

var file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_goTypes = []any{
	(*Handshake)(nil),               // 0: cipd.plugin.Handshake
	(*LogRequest)(nil),              // 1: cipd.plugin.LogRequest
	(*ListMetadataRequest)(nil),     // 2: cipd.plugin.ListMetadataRequest
	(*ListMetadataResponse)(nil),    // 3: cipd.plugin.ListMetadataResponse
	(*caspb.ObjectRef)(nil),         // 4: cipd.ObjectRef
	(*repopb.InstanceMetadata)(nil), // 5: cipd.InstanceMetadata
	(*emptypb.Empty)(nil),           // 6: google.protobuf.Empty
}
var file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_depIdxs = []int32{
	4, // 0: cipd.plugin.ListMetadataRequest.instance:type_name -> cipd.ObjectRef
	5, // 1: cipd.plugin.ListMetadataResponse.metadata:type_name -> cipd.InstanceMetadata
	1, // 2: cipd.plugin.Host.Log:input_type -> cipd.plugin.LogRequest
	2, // 3: cipd.plugin.Host.ListMetadata:input_type -> cipd.plugin.ListMetadataRequest
	6, // 4: cipd.plugin.Host.Log:output_type -> google.protobuf.Empty
	3, // 5: cipd.plugin.Host.ListMetadata:output_type -> cipd.plugin.ListMetadataResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_init() }
func file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_init() {
	if File_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDesc), len(file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto = out.File
	file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_goTypes = nil
	file_go_chromium_org_luci_cipd_client_cipd_plugin_protocol_plugin_proto_depIdxs = nil
}
