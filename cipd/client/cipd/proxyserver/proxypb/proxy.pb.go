// Copyright 2025 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/cipd/client/cipd/proxyserver/proxypb/proxy.proto

package proxypb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Policy defines what actions are allowed to be performed through the proxy.
//
// Very minimal right now. By default everything is forbidden. If a field
// matching an RPC name is present, then this RPC is allowed, subject to
// restrictions specified in the value of the field (if any).
type Policy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The set of CIPD backend hostnames that are allowed to be accessed.
	AllowedRemotes []string                     `protobuf:"bytes,1,rep,name=allowed_remotes,json=allowedRemotes,proto3" json:"allowed_remotes,omitempty"`
	ResolveVersion *Policy_ResolveVersionPolicy `protobuf:"bytes,2,opt,name=resolve_version,json=resolveVersion,proto3" json:"resolve_version,omitempty"`
	GetInstanceUrl *Policy_GetInstanceURLPolicy `protobuf:"bytes,3,opt,name=get_instance_url,json=getInstanceUrl,proto3" json:"get_instance_url,omitempty"`
	DescribeClient *Policy_DescribeClientPolicy `protobuf:"bytes,4,opt,name=describe_client,json=describeClient,proto3" json:"describe_client,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Policy) Reset() {
	*x = Policy{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescGZIP(), []int{0}
}

func (x *Policy) GetAllowedRemotes() []string {
	if x != nil {
		return x.AllowedRemotes
	}
	return nil
}

func (x *Policy) GetResolveVersion() *Policy_ResolveVersionPolicy {
	if x != nil {
		return x.ResolveVersion
	}
	return nil
}

func (x *Policy) GetGetInstanceUrl() *Policy_GetInstanceURLPolicy {
	if x != nil {
		return x.GetInstanceUrl
	}
	return nil
}

func (x *Policy) GetDescribeClient() *Policy_DescribeClientPolicy {
	if x != nil {
		return x.DescribeClient
	}
	return nil
}

// ProxiedCASObject is encoded in the CAS object URL returned by the proxy.
//
// It gets serialized, encrypted and signed and sent to the proxy client. This
// is a precaution against the client abusing the proxy to fetch arbitrary GCS
// files.
type ProxiedCASObject struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The original GCS signed URL.
	SignedUrl     string `protobuf:"bytes,1,opt,name=signed_url,json=signedUrl,proto3" json:"signed_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxiedCASObject) Reset() {
	*x = ProxiedCASObject{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxiedCASObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxiedCASObject) ProtoMessage() {}

func (x *ProxiedCASObject) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxiedCASObject.ProtoReflect.Descriptor instead.
func (*ProxiedCASObject) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescGZIP(), []int{1}
}

func (x *ProxiedCASObject) GetSignedUrl() string {
	if x != nil {
		return x.SignedUrl
	}
	return ""
}

// Policy for ResolveVersion RPC.
type Policy_ResolveVersionPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, allow resolving tags.
	AllowTags bool `protobuf:"varint,1,opt,name=allow_tags,json=allowTags,proto3" json:"allow_tags,omitempty"`
	// If set, allow resolving refs.
	AllowRefs     bool `protobuf:"varint,2,opt,name=allow_refs,json=allowRefs,proto3" json:"allow_refs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy_ResolveVersionPolicy) Reset() {
	*x = Policy_ResolveVersionPolicy{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy_ResolveVersionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy_ResolveVersionPolicy) ProtoMessage() {}

func (x *Policy_ResolveVersionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy_ResolveVersionPolicy.ProtoReflect.Descriptor instead.
func (*Policy_ResolveVersionPolicy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Policy_ResolveVersionPolicy) GetAllowTags() bool {
	if x != nil {
		return x.AllowTags
	}
	return false
}

func (x *Policy_ResolveVersionPolicy) GetAllowRefs() bool {
	if x != nil {
		return x.AllowRefs
	}
	return false
}

// Policy for GetInstanceURL RPC.
type Policy_GetInstanceURLPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy_GetInstanceURLPolicy) Reset() {
	*x = Policy_GetInstanceURLPolicy{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy_GetInstanceURLPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy_GetInstanceURLPolicy) ProtoMessage() {}

func (x *Policy_GetInstanceURLPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy_GetInstanceURLPolicy.ProtoReflect.Descriptor instead.
func (*Policy_GetInstanceURLPolicy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescGZIP(), []int{0, 1}
}

// Policy for DescribeClient RPC.
type Policy_DescribeClientPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Policy_DescribeClientPolicy) Reset() {
	*x = Policy_DescribeClientPolicy{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Policy_DescribeClientPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy_DescribeClientPolicy) ProtoMessage() {}

func (x *Policy_DescribeClientPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy_DescribeClientPolicy.ProtoReflect.Descriptor instead.
func (*Policy_DescribeClientPolicy) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescGZIP(), []int{0, 2}
}

var File_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDesc = "" +
	"\n" +
	"Ego.chromium.org/luci/cipd/client/cipd/proxyserver/proxypb/proxy.proto\x12\n" +
	"cipd.proxy\"\xae\x03\n" +
	"\x06Policy\x12'\n" +
	"\x0fallowed_remotes\x18\x01 \x03(\tR\x0eallowedRemotes\x12P\n" +
	"\x0fresolve_version\x18\x02 \x01(\v2'.cipd.proxy.Policy.ResolveVersionPolicyR\x0eresolveVersion\x12Q\n" +
	"\x10get_instance_url\x18\x03 \x01(\v2'.cipd.proxy.Policy.GetInstanceURLPolicyR\x0egetInstanceUrl\x12P\n" +
	"\x0fdescribe_client\x18\x04 \x01(\v2'.cipd.proxy.Policy.DescribeClientPolicyR\x0edescribeClient\x1aT\n" +
	"\x14ResolveVersionPolicy\x12\x1d\n" +
	"\n" +
	"allow_tags\x18\x01 \x01(\bR\tallowTags\x12\x1d\n" +
	"\n" +
	"allow_refs\x18\x02 \x01(\bR\tallowRefs\x1a\x16\n" +
	"\x14GetInstanceURLPolicy\x1a\x16\n" +
	"\x14DescribeClientPolicy\"1\n" +
	"\x10ProxiedCASObject\x12\x1d\n" +
	"\n" +
	"signed_url\x18\x01 \x01(\tR\tsignedUrlB;Z9go.chromium.org/luci/cipd/client/cipd/proxyserver/proxypbb\x06proto3"

var (
	file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDesc), len(file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDescData
}

var file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_goTypes = []any{
	(*Policy)(nil),                      // 0: cipd.proxy.Policy
	(*ProxiedCASObject)(nil),            // 1: cipd.proxy.ProxiedCASObject
	(*Policy_ResolveVersionPolicy)(nil), // 2: cipd.proxy.Policy.ResolveVersionPolicy
	(*Policy_GetInstanceURLPolicy)(nil), // 3: cipd.proxy.Policy.GetInstanceURLPolicy
	(*Policy_DescribeClientPolicy)(nil), // 4: cipd.proxy.Policy.DescribeClientPolicy
}
var file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_depIdxs = []int32{
	2, // 0: cipd.proxy.Policy.resolve_version:type_name -> cipd.proxy.Policy.ResolveVersionPolicy
	3, // 1: cipd.proxy.Policy.get_instance_url:type_name -> cipd.proxy.Policy.GetInstanceURLPolicy
	4, // 2: cipd.proxy.Policy.describe_client:type_name -> cipd.proxy.Policy.DescribeClientPolicy
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_init() }
func file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_init() {
	if File_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDesc), len(file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto = out.File
	file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_goTypes = nil
	file_go_chromium_org_luci_cipd_client_cipd_proxyserver_proxypb_proxy_proto_depIdxs = nil
}
