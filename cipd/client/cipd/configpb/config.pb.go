// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/cipd/client/cipd/configpb/config.proto

package configpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Schema of a CIPD client configuration file.
//
// The configuration file is a text-proto encoded ClientConfig message which
// CIPD client reads from `/etc/chrome-infra/cipd.cfg` (Linux and OSX) or
// `C:\chrome-infra\cipd.cfg` (Windows).
//
// If there's CIPD_CONFIG_FILE env var present and not empty, it defines where
// to read the config file from instead. A special value `-` means just to skip
// reading the default config file.
//
// Any explicitly passed CLI flags or `CIPD_*` env vars take precedence over
// what's in the config file.
//
// If the config file is present, but can't be read or parsed, all CIPD client
// calls will fail.
type ClientConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Plugins       *ClientConfig_Plugins  `protobuf:"bytes,1,opt,name=plugins,proto3" json:"plugins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientConfig) Reset() {
	*x = ClientConfig{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig) ProtoMessage() {}

func (x *ClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig.ProtoReflect.Descriptor instead.
func (*ClientConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescGZIP(), []int{0}
}

func (x *ClientConfig) GetPlugins() *ClientConfig_Plugins {
	if x != nil {
		return x.Plugins
	}
	return nil
}

// Plugin defines how to execute a plugin subprocess.
type Plugin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to the plugin binary to execute. Required.
	Cmd string `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	// Additional command line arguments to pass to the plugin binary, if any.
	Args          []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Plugin) Reset() {
	*x = Plugin{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Plugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Plugin) ProtoMessage() {}

func (x *Plugin) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Plugin.ProtoReflect.Descriptor instead.
func (*Plugin) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescGZIP(), []int{1}
}

func (x *Plugin) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *Plugin) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

// Plugins the CIPD client will load.
type ClientConfig_Plugins struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Admission plugin decides if it's OK to install packages.
	Admission     *Plugin `protobuf:"bytes,1,opt,name=admission,proto3" json:"admission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientConfig_Plugins) Reset() {
	*x = ClientConfig_Plugins{}
	mi := &file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientConfig_Plugins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientConfig_Plugins) ProtoMessage() {}

func (x *ClientConfig_Plugins) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientConfig_Plugins.ProtoReflect.Descriptor instead.
func (*ClientConfig_Plugins) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ClientConfig_Plugins) GetAdmission() *Plugin {
	if x != nil {
		return x.Admission
	}
	return nil
}

var File_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDesc = string([]byte{
	0x0a, 0x3b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x69, 0x70, 0x64, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x69, 0x70, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63,
	0x69, 0x70, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x97, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x42, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x69, 0x70, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x52, 0x07, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x1a, 0x43, 0x0a, 0x07, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x69, 0x70, 0x64, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x06, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x42, 0x30, 0x5a, 0x2e, 0x67,
	0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c,
	0x75, 0x63, 0x69, 0x2f, 0x63, 0x69, 0x70, 0x64, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f,
	0x63, 0x69, 0x70, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDesc), len(file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDescData
}

var file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_goTypes = []any{
	(*ClientConfig)(nil),         // 0: cipd.client.config.ClientConfig
	(*Plugin)(nil),               // 1: cipd.client.config.Plugin
	(*ClientConfig_Plugins)(nil), // 2: cipd.client.config.ClientConfig.Plugins
}
var file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_depIdxs = []int32{
	2, // 0: cipd.client.config.ClientConfig.plugins:type_name -> cipd.client.config.ClientConfig.Plugins
	1, // 1: cipd.client.config.ClientConfig.Plugins.admission:type_name -> cipd.client.config.Plugin
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_init() }
func file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_init() {
	if File_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDesc), len(file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto = out.File
	file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_goTypes = nil
	file_go_chromium_org_luci_cipd_client_cipd_configpb_config_proto_depIdxs = nil
}
