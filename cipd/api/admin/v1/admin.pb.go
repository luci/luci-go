// Copyright 2018 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/cipd/api/admin/v1/admin.proto

package api

import (
	dsmapperpb "go.chromium.org/luci/server/dsmapper/dsmapperpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Supported mapping jobs.
type MapperKind int32

const (
	MapperKind_MAPPER_KIND_UNSPECIFIED MapperKind = 0
	// Dump names of all packages to GAE logs, to test mapping jobs framework.
	MapperKind_ENUMERATE_PACKAGES MapperKind = 1
	// Find tags that don't pass ValidateInstanceTag and marks them.
	MapperKind_FIND_MALFORMED_TAGS MapperKind = 2
	// Exports all tags into a BigQuery table 'exported_tags'.
	MapperKind_EXPORT_TAGS_TO_BQ MapperKind = 3
)

// Enum value maps for MapperKind.
var (
	MapperKind_name = map[int32]string{
		0: "MAPPER_KIND_UNSPECIFIED",
		1: "ENUMERATE_PACKAGES",
		2: "FIND_MALFORMED_TAGS",
		3: "EXPORT_TAGS_TO_BQ",
	}
	MapperKind_value = map[string]int32{
		"MAPPER_KIND_UNSPECIFIED": 0,
		"ENUMERATE_PACKAGES":      1,
		"FIND_MALFORMED_TAGS":     2,
		"EXPORT_TAGS_TO_BQ":       3,
	}
)

func (x MapperKind) Enum() *MapperKind {
	p := new(MapperKind)
	*p = x
	return p
}

func (x MapperKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MapperKind) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_enumTypes[0].Descriptor()
}

func (MapperKind) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_enumTypes[0]
}

func (x MapperKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MapperKind.Descriptor instead.
func (MapperKind) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP(), []int{0}
}

// Defines what a mapping job should do.
type JobConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          MapperKind             `protobuf:"varint,1,opt,name=kind,proto3,enum=cipd.MapperKind" json:"kind,omitempty"`
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"` // arbitrary human readable string
	DryRun        bool                   `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobConfig) Reset() {
	*x = JobConfig{}
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobConfig) ProtoMessage() {}

func (x *JobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobConfig.ProtoReflect.Descriptor instead.
func (*JobConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP(), []int{0}
}

func (x *JobConfig) GetKind() MapperKind {
	if x != nil {
		return x.Kind
	}
	return MapperKind_MAPPER_KIND_UNSPECIFIED
}

func (x *JobConfig) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *JobConfig) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

// Identifies an instance of a mapping job.
type JobID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         int64                  `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobID) Reset() {
	*x = JobID{}
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobID) ProtoMessage() {}

func (x *JobID) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobID.ProtoReflect.Descriptor instead.
func (*JobID) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *JobID) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

// Details about a mapping job.
type JobState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Original job config, exactly as it was submitted to LaunchJob.
	Config *JobConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Current state of the job and all its shards.
	Info          *dsmapperpb.JobInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobState) Reset() {
	*x = JobState{}
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobState) ProtoMessage() {}

func (x *JobState) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobState.ProtoReflect.Descriptor instead.
func (*JobState) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP(), []int{2}
}

func (x *JobState) GetConfig() *JobConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *JobState) GetInfo() *dsmapperpb.JobInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// Result of running FixMarkedTags.
type TagFixReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fixed         []*TagFixReport_Tag    `protobuf:"bytes,1,rep,name=fixed,proto3" json:"fixed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagFixReport) Reset() {
	*x = TagFixReport{}
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagFixReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagFixReport) ProtoMessage() {}

func (x *TagFixReport) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagFixReport.ProtoReflect.Descriptor instead.
func (*TagFixReport) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *TagFixReport) GetFixed() []*TagFixReport_Tag {
	if x != nil {
		return x.Fixed
	}
	return nil
}

type TagFixReport_Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pkg           string                 `protobuf:"bytes,1,opt,name=pkg,proto3" json:"pkg,omitempty"`
	Instance      string                 `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	BrokenTag     string                 `protobuf:"bytes,3,opt,name=broken_tag,json=brokenTag,proto3" json:"broken_tag,omitempty"`
	FixedTag      string                 `protobuf:"bytes,4,opt,name=fixed_tag,json=fixedTag,proto3" json:"fixed_tag,omitempty"` // or "" if it was deleted
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TagFixReport_Tag) Reset() {
	*x = TagFixReport_Tag{}
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TagFixReport_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagFixReport_Tag) ProtoMessage() {}

func (x *TagFixReport_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagFixReport_Tag.ProtoReflect.Descriptor instead.
func (*TagFixReport_Tag) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TagFixReport_Tag) GetPkg() string {
	if x != nil {
		return x.Pkg
	}
	return ""
}

func (x *TagFixReport_Tag) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *TagFixReport_Tag) GetBrokenTag() string {
	if x != nil {
		return x.BrokenTag
	}
	return ""
}

func (x *TagFixReport_Tag) GetFixedTag() string {
	if x != nil {
		return x.FixedTag
	}
	return ""
}

var File_go_chromium_org_luci_cipd_api_admin_v1_admin_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDesc = "" +
	"\n" +
	"2go.chromium.org/luci/cipd/api/admin/v1/admin.proto\x12\x04cipd\x1a\x1bgoogle/protobuf/empty.proto\x1a>go.chromium.org/luci/server/dsmapper/dsmapperpb/messages.proto\"d\n" +
	"\tJobConfig\x12$\n" +
	"\x04kind\x18\x01 \x01(\x0e2\x10.cipd.MapperKindR\x04kind\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\x12\x17\n" +
	"\adry_run\x18\x03 \x01(\bR\x06dryRun\"\x1e\n" +
	"\x05JobID\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\x03R\x05jobId\"f\n" +
	"\bJobState\x12'\n" +
	"\x06config\x18\x01 \x01(\v2\x0f.cipd.JobConfigR\x06config\x121\n" +
	"\x04info\x18\x02 \x01(\v2\x1d.luci.server.dsmapper.JobInfoR\x04info\"\xad\x01\n" +
	"\fTagFixReport\x12,\n" +
	"\x05fixed\x18\x01 \x03(\v2\x16.cipd.TagFixReport.TagR\x05fixed\x1ao\n" +
	"\x03Tag\x12\x10\n" +
	"\x03pkg\x18\x01 \x01(\tR\x03pkg\x12\x1a\n" +
	"\binstance\x18\x02 \x01(\tR\binstance\x12\x1d\n" +
	"\n" +
	"broken_tag\x18\x03 \x01(\tR\tbrokenTag\x12\x1b\n" +
	"\tfixed_tag\x18\x04 \x01(\tR\bfixedTag*q\n" +
	"\n" +
	"MapperKind\x12\x1b\n" +
	"\x17MAPPER_KIND_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ENUMERATE_PACKAGES\x10\x01\x12\x17\n" +
	"\x13FIND_MALFORMED_TAGS\x10\x02\x12\x15\n" +
	"\x11EXPORT_TAGS_TO_BQ\x10\x032\xc1\x01\n" +
	"\x05Admin\x12)\n" +
	"\tLaunchJob\x12\x0f.cipd.JobConfig\x1a\v.cipd.JobID\x12/\n" +
	"\bAbortJob\x12\v.cipd.JobID\x1a\x16.google.protobuf.Empty\x12*\n" +
	"\vGetJobState\x12\v.cipd.JobID\x1a\x0e.cipd.JobState\x120\n" +
	"\rFixMarkedTags\x12\v.cipd.JobID\x1a\x12.cipd.TagFixReportB,Z*go.chromium.org/luci/cipd/api/admin/v1;apib\x06proto3"

var (
	file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDesc), len(file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDescData
}

var file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_goTypes = []any{
	(MapperKind)(0),            // 0: cipd.MapperKind
	(*JobConfig)(nil),          // 1: cipd.JobConfig
	(*JobID)(nil),              // 2: cipd.JobID
	(*JobState)(nil),           // 3: cipd.JobState
	(*TagFixReport)(nil),       // 4: cipd.TagFixReport
	(*TagFixReport_Tag)(nil),   // 5: cipd.TagFixReport.Tag
	(*dsmapperpb.JobInfo)(nil), // 6: luci.server.dsmapper.JobInfo
	(*emptypb.Empty)(nil),      // 7: google.protobuf.Empty
}
var file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_depIdxs = []int32{
	0, // 0: cipd.JobConfig.kind:type_name -> cipd.MapperKind
	1, // 1: cipd.JobState.config:type_name -> cipd.JobConfig
	6, // 2: cipd.JobState.info:type_name -> luci.server.dsmapper.JobInfo
	5, // 3: cipd.TagFixReport.fixed:type_name -> cipd.TagFixReport.Tag
	1, // 4: cipd.Admin.LaunchJob:input_type -> cipd.JobConfig
	2, // 5: cipd.Admin.AbortJob:input_type -> cipd.JobID
	2, // 6: cipd.Admin.GetJobState:input_type -> cipd.JobID
	2, // 7: cipd.Admin.FixMarkedTags:input_type -> cipd.JobID
	2, // 8: cipd.Admin.LaunchJob:output_type -> cipd.JobID
	7, // 9: cipd.Admin.AbortJob:output_type -> google.protobuf.Empty
	3, // 10: cipd.Admin.GetJobState:output_type -> cipd.JobState
	4, // 11: cipd.Admin.FixMarkedTags:output_type -> cipd.TagFixReport
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_init() }
func file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_init() {
	if File_go_chromium_org_luci_cipd_api_admin_v1_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDesc), len(file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cipd_api_admin_v1_admin_proto = out.File
	file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_goTypes = nil
	file_go_chromium_org_luci_cipd_api_admin_v1_admin_proto_depIdxs = nil
}
