// Copyright (c) 2016 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

syntax = "proto3";

package luci.milo.config;

option go_package = "go.chromium.org/luci/milo/proto/config;configpb";

// Settings represents the format for the global (service) config for Milo.
message Settings {
  reserved 1; // buildbot

  message Buildbucket {
    // name is the user friendly name of the Buildbucket instance we're pointing to.
    string name = 1;

    // host is the hostname of the buildbucket instance we're pointing to (eg. cr-buildbucket.appspot.com).
    string host = 2;

    // project is the name of the Google Cloud project that the pubsub topic
    // belongs to.
    //
    // Deprecated: this is no longer used. The buildbucket subscription should
    // be configured via GCP console.
    // TODO(crbug/1255983): set up subscription configuration via terraform.
    string project = 3;
  }
  Buildbucket buildbucket = 2;

  message Swarming {
    // default_host is the hostname of the swarming host Milo defaults to, if
    // none is specified.  Default host is implicitly an allowed host.
    string default_host = 1;

    // allowed_hosts is a list of hostnames of swarming instances that Milo is
    // allowed to talk to.  This is specified here for security reasons,
    // because Milo will hand out its oauth2 token to a swarming host.
    repeated string allowed_hosts = 2;
  }
  Swarming swarming = 3;

  // SourceAcls grants read access on a set of Git/Gerrit hosts or projects.
  message SourceAcls {

    // host grants read access on all project at this host.
    //
    // For more granularity, use the project field instead.
    //
    // For *.googlesource.com domains, host should not be a Gerrit host,
    // i.e.  it shouldn't be <subdomain>-review.googlesource.com.
    repeated string hosts = 1;

    // project is a URL to a Git repository.
    //
    // Read access is granted on both git data and Gerrit CLs of this project.
    //
    // For *.googlesource.com Git repositories:
    //   URL Path should not start with '/a/' (forced authentication).
    //   URL Path should not end with '.git' (redundant).
    repeated string projects = 2;

    // readers are allowed to read git/gerrit data from targets.
    //
    // Three types of identity strings are supported:
    //  * Emails.                   For example: "someuser@example.com"
    //  * Chrome-infra-auth Groups. For example: "group:committers"
    //  * Auth service identities.  For example: "kind:name"
    //
    // Required.
    repeated string readers = 3;
  }

  // source_acls instructs Milo to provide Git/Gerrit data
  // (e.g., blamelist) to some of its users on entire subdomains or individual
  // repositories (Gerrit "projects").
  //
  // Multiple records are allowed, but each host and project must appear only in
  // one record.
  //
  // See go/milo-git-acls for design rationales.
  repeated SourceAcls source_acls = 4;

  message ResultDB {
    // host is the hostname of the ResultDB instance we're pointing to for RPCs (eg. results.api.cr.dev).
    string host = 1;
  }
  ResultDB resultdb = 5;

  reserved 6; // weetbix

  message LuciAnalysis {
    // host is the hostname of the LUCI Analysis instance we're pointing to for RPCs (eg. analysis.api.luci.app).
    string host = 1;
    // ui_host is the hostname to use for links to LUCI Analysis UI (eg. luci-analysis.appspot.com).
    string ui_host = 2;
  }
  LuciAnalysis luci_analysis = 7;

  message LuciBisection {
    // host is the hostname of the LUCI Bisection instance we're pointing to for RPCs (eg. luci-bisection.appspot.com).
    string host = 1;
  }
  LuciBisection luci_bisection = 8;

  message SheriffOMatic {
    // host is the hostname of the Sheriff-O-Matic instance we're pointing to (eg. sheriff-o-matic.appspot.com).
    string host = 1;
  }
  SheriffOMatic sheriff_o_matic = 9;

  message LuciTreeStatus {
    // host is the hostname of the LUCI Tree Status instance we're pointing to for RPCs (eg. luci-tree-status.appspot.com).
    string host = 1;
  }
  LuciTreeStatus luci_tree_status = 10;

  message LuciNotify {
    // host is the hostname of the LUCI Notify instance we're pointing to for RPCs (eg. notify.api.luci.app).
    string host = 1;
  }
  LuciNotify luci_notify = 11;

  message AuthService {
    // host is the hostname of the Auth Service instance we're pointing to for RPCs (eg. chrome-infra-auth.appspot.com).
    string host = 1;
  }
  AuthService auth_service = 12;

  message CrRev {
    // host is the hostname of the Cr-Rev instance we're pointing to (eg. cr-rev.appspot.com).
    string host = 1;
  }
  CrRev cr_rev = 13;

  message Milo {
    // host is the hostname of the MILO instance we're pointing to for RPCs (e.g. milo.api.luci.app).
    string host = 1;
    // project is the name of the Google Cloud project where the milo is running.
    string project = 2;
    // api key configured in the Pantheon for error reporting
    string error_reporting_api_key = 3;
  }
  // Value set in configuration ignored, actual value picked up from command line flags to server binary.
  Milo milo = 14;

  message LUCISourceIndex {
    // host is the hostname of the LUCI Source Index instance we're pointing to for RPCs (e.g. sourceindex.api.luci.app).
    string host = 1;
  }
  LUCISourceIndex luci_source_index = 15;

  message HaTSConfig {
    // API key configured in Pantheon for HaTS
    string api_key = 1;
    // Listnr survey trigger ID
    string trigger_id = 2;
    // Listnr product ID
    string product_id = 3;
  }
  message FleetConsole {
    // host is the hostname of the FleetConsole instance we're pointing to (eg. fleet-console-dev-xxx.run.app).
    string host = 1;
    // HaTS configuration
    HaTSConfig hats = 2;
  }
  FleetConsole fleet_console = 16;

  message UFS {
    // host is the hostname of the UFS instance we're pointing to (eg. staging.ufs.api.cr.dev).
    string host = 1;
  }
  UFS ufs = 17;

  message TestInvestigate {
    // HaTS configuration for recommendations section.
    HaTSConfig hats_positive_recs = 1;
    HaTSConfig hats_negative_recs = 2;
    HaTSConfig hats_cuj = 3;
  }
  TestInvestigate test_investigate = 18;
}
