// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lexer getAllTokens case 0 1`] = `[]`;

exports[`Lexer getAllTokens case 1 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "simple",
  },
]
`;

exports[`Lexer getAllTokens case 2 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "wsBefore",
  },
]
`;

exports[`Lexer getAllTokens case 3 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "wsAfter",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 7,
    "text": " ",
  },
]
`;

exports[`Lexer getAllTokens case 4 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "wsAround",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 9,
    "text": " ",
  },
]
`;

exports[`Lexer getAllTokens case 5 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": "  ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 2,
    "text": "wsAroundLong",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 14,
    "text": "  ",
  },
]
`;

exports[`Lexer getAllTokens case 6 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": ""string"",
  },
]
`;

exports[`Lexer getAllTokens case 7 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "STRING",
    "startPos": 1,
    "text": ""string"",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 9,
    "text": " ",
  },
]
`;

exports[`Lexer getAllTokens case 8 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": ""ws string"",
  },
]
`;

exports[`Lexer getAllTokens case 9 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": ""quoted\\"string"",
  },
]
`;

exports[`Lexer getAllTokens case 10 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": "'single quoted'",
  },
]
`;

exports[`Lexer getAllTokens case 11 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": "'single " quoted'",
  },
]
`;

exports[`Lexer getAllTokens case 12 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": ""double ' quoted"",
  },
]
`;

exports[`Lexer getAllTokens case 13 1`] = `
[
  {
    "index": 0,
    "kind": "UNCLOSED_STRING",
    "startPos": 0,
    "text": "'single then double"",
  },
]
`;

exports[`Lexer getAllTokens case 14 1`] = `
[
  {
    "index": 0,
    "kind": "NEGATE",
    "startPos": 0,
    "text": "-",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "negated",
  },
]
`;

exports[`Lexer getAllTokens case 15 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "NOT",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 3,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 4,
    "text": "negated",
  },
]
`;

exports[`Lexer getAllTokens case 16 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "-",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 1,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 2,
    "text": "a",
  },
]
`;

exports[`Lexer getAllTokens case 17 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "dash-separated-name",
  },
]
`;

exports[`Lexer getAllTokens case 18 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "term",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 4,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "NEGATE",
    "startPos": 5,
    "text": "-",
  },
  {
    "index": 3,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 6,
    "text": "negated-term",
  },
]
`;

exports[`Lexer getAllTokens case 19 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "implicit",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 8,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 9,
    "text": "and",
  },
]
`;

exports[`Lexer getAllTokens case 20 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "explicit",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 8,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "KEYWORD",
    "startPos": 9,
    "text": "AND",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 12,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 13,
    "text": "and",
  },
]
`;

exports[`Lexer getAllTokens case 21 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "test",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 4,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "KEYWORD",
    "startPos": 5,
    "text": "OR",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 7,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 8,
    "text": "or",
  },
]
`;

exports[`Lexer getAllTokens case 22 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "implicit",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 8,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 9,
    "text": "and",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 12,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "KEYWORD",
    "startPos": 13,
    "text": "AND",
  },
  {
    "index": 5,
    "kind": "WHITESPACE",
    "startPos": 16,
    "text": " ",
  },
  {
    "index": 6,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 17,
    "text": "explicit",
  },
]
`;

exports[`Lexer getAllTokens case 23 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "implicit",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 8,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 9,
    "text": "with",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 13,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "KEYWORD",
    "startPos": 14,
    "text": "OR",
  },
  {
    "index": 5,
    "kind": "WHITESPACE",
    "startPos": 16,
    "text": " ",
  },
  {
    "index": 6,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 17,
    "text": "term",
  },
  {
    "index": 7,
    "kind": "WHITESPACE",
    "startPos": 21,
    "text": " ",
  },
  {
    "index": 8,
    "kind": "KEYWORD",
    "startPos": 22,
    "text": "AND",
  },
  {
    "index": 9,
    "kind": "WHITESPACE",
    "startPos": 25,
    "text": " ",
  },
  {
    "index": 10,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 26,
    "text": "explicit",
  },
  {
    "index": 11,
    "kind": "WHITESPACE",
    "startPos": 34,
    "text": " ",
  },
  {
    "index": 12,
    "kind": "KEYWORD",
    "startPos": 35,
    "text": "OR",
  },
  {
    "index": 13,
    "kind": "WHITESPACE",
    "startPos": 37,
    "text": " ",
  },
  {
    "index": 14,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 38,
    "text": "term",
  },
]
`;

exports[`Lexer getAllTokens case 24 1`] = `
[
  {
    "index": 0,
    "kind": "PAREN",
    "startPos": 0,
    "text": "(",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "composite",
  },
  {
    "index": 2,
    "kind": "PAREN",
    "startPos": 10,
    "text": ")",
  },
]
`;

exports[`Lexer getAllTokens case 25 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "PAREN",
    "startPos": 1,
    "text": "(",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 2,
    "text": "composite",
  },
  {
    "index": 3,
    "kind": "PAREN",
    "startPos": 11,
    "text": ")",
  },
  {
    "index": 4,
    "kind": "WHITESPACE",
    "startPos": 12,
    "text": " ",
  },
]
`;

exports[`Lexer getAllTokens case 26 1`] = `
[
  {
    "index": 0,
    "kind": "PAREN",
    "startPos": 0,
    "text": "(",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 1,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 2,
    "text": "composite",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 11,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "PAREN",
    "startPos": 12,
    "text": ")",
  },
]
`;

exports[`Lexer getAllTokens case 27 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": "<",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 6,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 28 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 5,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "COMPARATOR",
    "startPos": 6,
    "text": "<",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 7,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 8,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 29 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": "<",
  },
  {
    "index": 2,
    "kind": "COMPARATOR",
    "startPos": 6,
    "text": "=",
  },
  {
    "index": 3,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 7,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 30 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": ">",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 6,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 31 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": ">=",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 7,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 32 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": "=",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 6,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 33 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": "!=",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 7,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 34 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": ":",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 6,
    "text": "21",
  },
]
`;

exports[`Lexer getAllTokens case 35 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "value",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 5,
    "text": "=",
  },
  {
    "index": 2,
    "kind": "PAREN",
    "startPos": 6,
    "text": "(",
  },
  {
    "index": 3,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 7,
    "text": "composite",
  },
  {
    "index": 4,
    "kind": "PAREN",
    "startPos": 16,
    "text": ")",
  },
]
`;

exports[`Lexer getAllTokens case 36 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "member.field",
  },
]
`;

exports[`Lexer getAllTokens case 37 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "composite",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 9,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "PAREN",
    "startPos": 10,
    "text": "(",
  },
  {
    "index": 3,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 11,
    "text": "expression",
  },
  {
    "index": 4,
    "kind": "PAREN",
    "startPos": 21,
    "text": ")",
  },
]
`;

exports[`Lexer getAllTokens case 38 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FUNCTION",
    "startPos": 0,
    "text": "empty.func.call(",
  },
  {
    "index": 1,
    "kind": "PAREN",
    "startPos": 16,
    "text": ")",
  },
]
`;

exports[`Lexer getAllTokens case 39 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FUNCTION",
    "startPos": 0,
    "text": "func.call(",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 10,
    "text": "arg1",
  },
  {
    "index": 2,
    "kind": "COMMA",
    "startPos": 14,
    "text": ",",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 15,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "STRING",
    "startPos": 16,
    "text": ""arg2"",
  },
  {
    "index": 5,
    "kind": "PAREN",
    "startPos": 22,
    "text": ")",
  },
]
`;

exports[`Lexer getAllTokens case 40 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "a",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 1,
    "text": ":",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 2,
    "text": "b",
  },
  {
    "index": 3,
    "kind": "COMPARATOR",
    "startPos": 3,
    "text": ":",
  },
  {
    "index": 4,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 4,
    "text": "c",
  },
]
`;

exports[`Lexer getAllTokens case 41 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "a.b.c",
  },
]
`;

exports[`Lexer getAllTokens case 42 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "a",
  },
  {
    "index": 1,
    "kind": "COMPARATOR",
    "startPos": 1,
    "text": "=",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 2,
    "text": "1",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 3,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "KEYWORD",
    "startPos": 4,
    "text": "AND",
  },
  {
    "index": 5,
    "kind": "WHITESPACE",
    "startPos": 7,
    "text": " ",
  },
  {
    "index": 6,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 8,
    "text": "b",
  },
  {
    "index": 7,
    "kind": "COMPARATOR",
    "startPos": 9,
    "text": "=",
  },
  {
    "index": 8,
    "kind": "STRING",
    "startPos": 10,
    "text": ""2"",
  },
  {
    "index": 9,
    "kind": "WHITESPACE",
    "startPos": 13,
    "text": " ",
  },
  {
    "index": 10,
    "kind": "KEYWORD",
    "startPos": 14,
    "text": "OR",
  },
  {
    "index": 11,
    "kind": "WHITESPACE",
    "startPos": 16,
    "text": " ",
  },
  {
    "index": 12,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 17,
    "text": "c",
  },
  {
    "index": 13,
    "kind": "COMPARATOR",
    "startPos": 18,
    "text": "!=",
  },
  {
    "index": 14,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 20,
    "text": "3",
  },
]
`;

exports[`Lexer getAllTokens case 43 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "a",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 1,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "COMPARATOR",
    "startPos": 2,
    "text": "<",
  },
  {
    "index": 3,
    "kind": "WHITESPACE",
    "startPos": 3,
    "text": " ",
  },
  {
    "index": 4,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 4,
    "text": "1",
  },
  {
    "index": 5,
    "kind": "WHITESPACE",
    "startPos": 5,
    "text": " ",
  },
  {
    "index": 6,
    "kind": "KEYWORD",
    "startPos": 6,
    "text": "AND",
  },
  {
    "index": 7,
    "kind": "WHITESPACE",
    "startPos": 9,
    "text": " ",
  },
  {
    "index": 8,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 10,
    "text": "b",
  },
  {
    "index": 9,
    "kind": "WHITESPACE",
    "startPos": 11,
    "text": " ",
  },
  {
    "index": 10,
    "kind": "COMPARATOR",
    "startPos": 12,
    "text": ">",
  },
  {
    "index": 11,
    "kind": "WHITESPACE",
    "startPos": 13,
    "text": " ",
  },
  {
    "index": 12,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 14,
    "text": "2",
  },
]
`;

exports[`Lexer getAllTokens case 44 1`] = `
[
  {
    "index": 0,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 0,
    "text": "a",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 1,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "COMPARATOR",
    "startPos": 2,
    "text": "<",
  },
  {
    "index": 3,
    "kind": "COMPARATOR",
    "startPos": 3,
    "text": "=",
  },
  {
    "index": 4,
    "kind": "WHITESPACE",
    "startPos": 4,
    "text": " ",
  },
  {
    "index": 5,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 5,
    "text": "1",
  },
  {
    "index": 6,
    "kind": "WHITESPACE",
    "startPos": 6,
    "text": " ",
  },
  {
    "index": 7,
    "kind": "KEYWORD",
    "startPos": 7,
    "text": "AND",
  },
  {
    "index": 8,
    "kind": "WHITESPACE",
    "startPos": 10,
    "text": " ",
  },
  {
    "index": 9,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 11,
    "text": "b",
  },
  {
    "index": 10,
    "kind": "WHITESPACE",
    "startPos": 12,
    "text": " ",
  },
  {
    "index": 11,
    "kind": "COMPARATOR",
    "startPos": 13,
    "text": ">=",
  },
  {
    "index": 12,
    "kind": "WHITESPACE",
    "startPos": 15,
    "text": " ",
  },
  {
    "index": 13,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 16,
    "text": "2",
  },
]
`;

exports[`Lexer getAllTokens case 45 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "-",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 2,
    "text": " ",
  },
  {
    "index": 3,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 3,
    "text": "negated",
  },
  {
    "index": 4,
    "kind": "WHITESPACE",
    "startPos": 10,
    "text": " ",
  },
]
`;

exports[`Lexer getAllTokens case 46 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "PAREN",
    "startPos": 1,
    "text": "(",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 2,
    "text": " ",
  },
  {
    "index": 3,
    "kind": "PAREN",
    "startPos": 3,
    "text": ")",
  },
  {
    "index": 4,
    "kind": "WHITESPACE",
    "startPos": 4,
    "text": " ",
  },
]
`;

exports[`Lexer getAllTokens case 47 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "a",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 2,
    "text": " ",
  },
  {
    "index": 3,
    "kind": "KEYWORD",
    "startPos": 3,
    "text": "AND",
  },
]
`;

exports[`Lexer getAllTokens case 48 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "AND",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 3,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 4,
    "text": "a",
  },
]
`;

exports[`Lexer getAllTokens case 49 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "AND",
  },
]
`;

exports[`Lexer getAllTokens case 50 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "AND",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 3,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "KEYWORD",
    "startPos": 4,
    "text": "AND",
  },
]
`;

exports[`Lexer getAllTokens case 51 1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "a",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 2,
    "text": " ",
  },
  {
    "index": 3,
    "kind": "KEYWORD",
    "startPos": 3,
    "text": "OR",
  },
]
`;

exports[`Lexer getAllTokens case 52 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "OR",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 2,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 3,
    "text": "a",
  },
]
`;

exports[`Lexer getAllTokens case 53 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "OR",
  },
]
`;

exports[`Lexer getAllTokens case 54 1`] = `
[
  {
    "index": 0,
    "kind": "KEYWORD",
    "startPos": 0,
    "text": "OR",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 2,
    "text": " ",
  },
  {
    "index": 2,
    "kind": "KEYWORD",
    "startPos": 3,
    "text": "OR",
  },
]
`;

exports[`Lexer getAllTokens case 55 1`] = `
[
  {
    "index": 0,
    "kind": "INVALID_STRING",
    "startPos": 0,
    "text": ""invalid unicode \\u1"",
  },
]
`;

exports[`Lexer getAllTokens case 56 1`] = `
[
  {
    "index": 0,
    "kind": "UNCLOSED_INVALID_STRING",
    "startPos": 0,
    "text": ""backslash followed by newline \\",
  },
  {
    "index": 1,
    "kind": "WHITESPACE",
    "startPos": 32,
    "text": "
",
  },
  {
    "index": 2,
    "kind": "UNCLOSED_STRING",
    "startPos": 33,
    "text": """,
  },
]
`;

exports[`Lexer getAllTokens case 57 1`] = `
[
  {
    "index": 0,
    "kind": "STRING",
    "startPos": 0,
    "text": ""valid unicode \\u12ab"",
  },
]
`;

exports[`Lexer getAllTokens case 58 1`] = `
[
  {
    "index": 0,
    "kind": "INVALID_CHAR",
    "startPos": 0,
    "text": "\\",
  },
]
`;

exports[`Lexer getAllTokens case 59 1`] = `
[
  {
    "index": 0,
    "kind": "UNCLOSED_INVALID_STRING",
    "startPos": 0,
    "text": ""unclosed string with incomplete escape sequence \\",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  |value < 21   1`] = `
[
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "value",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  valu|e < 21   1`] = `
[
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "value",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  value < |21   1`] = `
[
  {
    "index": 4,
    "kind": "WHITESPACE",
    "startPos": 8,
    "text": " ",
  },
  {
    "index": 5,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 9,
    "text": "21",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  value < 21  | 1`] = `
[
  {
    "index": 6,
    "kind": "WHITESPACE",
    "startPos": 11,
    "text": "  ",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  value < 21 |  1`] = `
[
  {
    "index": 6,
    "kind": "WHITESPACE",
    "startPos": 11,
    "text": "  ",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  value <| 21   1`] = `
[
  {
    "index": 3,
    "kind": "COMPARATOR",
    "startPos": 7,
    "text": "<",
  },
  {
    "index": 4,
    "kind": "WHITESPACE",
    "startPos": 8,
    "text": " ",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  value |< 21   1`] = `
[
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 6,
    "text": " ",
  },
  {
    "index": 3,
    "kind": "COMPARATOR",
    "startPos": 7,
    "text": "<",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor:  value| < 21   1`] = `
[
  {
    "index": 1,
    "kind": "QUALIFIED_FIELD_OR_VALUE",
    "startPos": 1,
    "text": "value",
  },
  {
    "index": 2,
    "kind": "WHITESPACE",
    "startPos": 6,
    "text": " ",
  },
]
`;

exports[`Lexer getAtPosition inputWithCursor: | 1`] = `[]`;

exports[`Lexer getAtPosition inputWithCursor: | value < 21   1`] = `
[
  undefined,
  {
    "index": 0,
    "kind": "WHITESPACE",
    "startPos": 0,
    "text": " ",
  },
]
`;
