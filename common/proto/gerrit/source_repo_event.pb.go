// Copyright 2020 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/common/proto/gerrit/source_repo_event.proto

package gerritpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The type of the update.
type SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType int32

const (
	SourceRepoEvent_RefUpdateEvent_RefUpdate_UPDATE_TYPE_UNSPECIFIED SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType = 0
	// Create a new ref.
	SourceRepoEvent_RefUpdateEvent_RefUpdate_CREATE SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType = 1
	// Update the object that the ref points to.
	SourceRepoEvent_RefUpdateEvent_RefUpdate_UPDATE_FAST_FORWARD SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType = 2
	// Update the object that the ref points to forcibly.
	SourceRepoEvent_RefUpdateEvent_RefUpdate_UPDATE_NON_FAST_FORWARD SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType = 3
	// Delete the ref.
	SourceRepoEvent_RefUpdateEvent_RefUpdate_DELETE SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType = 4
)

// Enum value maps for SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType.
var (
	SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType_name = map[int32]string{
		0: "UPDATE_TYPE_UNSPECIFIED",
		1: "CREATE",
		2: "UPDATE_FAST_FORWARD",
		3: "UPDATE_NON_FAST_FORWARD",
		4: "DELETE",
	}
	SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType_value = map[string]int32{
		"UPDATE_TYPE_UNSPECIFIED": 0,
		"CREATE":                  1,
		"UPDATE_FAST_FORWARD":     2,
		"UPDATE_NON_FAST_FORWARD": 3,
		"DELETE":                  4,
	}
)

func (x SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType) Enum() *SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType {
	p := new(SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType)
	*p = x
	return p
}

func (x SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_enumTypes[0].Descriptor()
}

func (SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_enumTypes[0]
}

func (x SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType.Descriptor instead.
func (SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

// Cloud Pub/Sub message payload for all events in Source Repo API.
type SourceRepoEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the repo that has changed. Values are of the form
	// `projects/<project>/repos/<repo>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// URL to clone the repository from Google Cloud Source Repositories.
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// The timestamp that this event happened.
	EventTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	// The detail data of the event.
	//
	// Types that are valid to be assigned to Event:
	//
	//	*SourceRepoEvent_RefUpdateEvent_
	//	*SourceRepoEvent_CreateRepoEvent_
	//	*SourceRepoEvent_DeleteRepoEvent_
	Event         isSourceRepoEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceRepoEvent) Reset() {
	*x = SourceRepoEvent{}
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceRepoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRepoEvent) ProtoMessage() {}

func (x *SourceRepoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRepoEvent.ProtoReflect.Descriptor instead.
func (*SourceRepoEvent) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP(), []int{0}
}

func (x *SourceRepoEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceRepoEvent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SourceRepoEvent) GetEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventTime
	}
	return nil
}

func (x *SourceRepoEvent) GetEvent() isSourceRepoEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *SourceRepoEvent) GetRefUpdateEvent() *SourceRepoEvent_RefUpdateEvent {
	if x != nil {
		if x, ok := x.Event.(*SourceRepoEvent_RefUpdateEvent_); ok {
			return x.RefUpdateEvent
		}
	}
	return nil
}

func (x *SourceRepoEvent) GetCreateRepoEvent() *SourceRepoEvent_CreateRepoEvent {
	if x != nil {
		if x, ok := x.Event.(*SourceRepoEvent_CreateRepoEvent_); ok {
			return x.CreateRepoEvent
		}
	}
	return nil
}

func (x *SourceRepoEvent) GetDeleteRepoEvent() *SourceRepoEvent_DeleteRepoEvent {
	if x != nil {
		if x, ok := x.Event.(*SourceRepoEvent_DeleteRepoEvent_); ok {
			return x.DeleteRepoEvent
		}
	}
	return nil
}

type isSourceRepoEvent_Event interface {
	isSourceRepoEvent_Event()
}

type SourceRepoEvent_RefUpdateEvent_ struct {
	RefUpdateEvent *SourceRepoEvent_RefUpdateEvent `protobuf:"bytes,4,opt,name=ref_update_event,json=refUpdateEvent,proto3,oneof"`
}

type SourceRepoEvent_CreateRepoEvent_ struct {
	CreateRepoEvent *SourceRepoEvent_CreateRepoEvent `protobuf:"bytes,5,opt,name=create_repo_event,json=createRepoEvent,proto3,oneof"`
}

type SourceRepoEvent_DeleteRepoEvent_ struct {
	DeleteRepoEvent *SourceRepoEvent_DeleteRepoEvent `protobuf:"bytes,6,opt,name=delete_repo_event,json=deleteRepoEvent,proto3,oneof"`
}

func (*SourceRepoEvent_RefUpdateEvent_) isSourceRepoEvent_Event() {}

func (*SourceRepoEvent_CreateRepoEvent_) isSourceRepoEvent_Event() {}

func (*SourceRepoEvent_DeleteRepoEvent_) isSourceRepoEvent_Event() {}

// An event that changed references.
type SourceRepoEvent_RefUpdateEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user who performed the ref updates.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// Updates on references, keyed by the names of the references.
	RefUpdates    map[string]*SourceRepoEvent_RefUpdateEvent_RefUpdate `protobuf:"bytes,2,rep,name=ref_updates,json=refUpdates,proto3" json:"ref_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceRepoEvent_RefUpdateEvent) Reset() {
	*x = SourceRepoEvent_RefUpdateEvent{}
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceRepoEvent_RefUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRepoEvent_RefUpdateEvent) ProtoMessage() {}

func (x *SourceRepoEvent_RefUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRepoEvent_RefUpdateEvent.ProtoReflect.Descriptor instead.
func (*SourceRepoEvent_RefUpdateEvent) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SourceRepoEvent_RefUpdateEvent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SourceRepoEvent_RefUpdateEvent) GetRefUpdates() map[string]*SourceRepoEvent_RefUpdateEvent_RefUpdate {
	if x != nil {
		return x.RefUpdates
	}
	return nil
}

// An event that created a repository.
type SourceRepoEvent_CreateRepoEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceRepoEvent_CreateRepoEvent) Reset() {
	*x = SourceRepoEvent_CreateRepoEvent{}
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceRepoEvent_CreateRepoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRepoEvent_CreateRepoEvent) ProtoMessage() {}

func (x *SourceRepoEvent_CreateRepoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRepoEvent_CreateRepoEvent.ProtoReflect.Descriptor instead.
func (*SourceRepoEvent_CreateRepoEvent) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP(), []int{0, 1}
}

// An event that deleted a repository.
type SourceRepoEvent_DeleteRepoEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceRepoEvent_DeleteRepoEvent) Reset() {
	*x = SourceRepoEvent_DeleteRepoEvent{}
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceRepoEvent_DeleteRepoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRepoEvent_DeleteRepoEvent) ProtoMessage() {}

func (x *SourceRepoEvent_DeleteRepoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRepoEvent_DeleteRepoEvent.ProtoReflect.Descriptor instead.
func (*SourceRepoEvent_DeleteRepoEvent) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP(), []int{0, 2}
}

// An update on a reference.
type SourceRepoEvent_RefUpdateEvent_RefUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the reference. Values are of the form `refs/...` (e.g.
	// `refs/heads/master`).
	RefName string `protobuf:"bytes,1,opt,name=ref_name,json=refName,proto3" json:"ref_name,omitempty"`
	// The type of the update.
	UpdateType SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType `protobuf:"varint,2,opt,name=update_type,json=updateType,proto3,enum=gerrit.SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType" json:"update_type,omitempty"`
	// The previous object ID that the ref pointed to.
	OldId string `protobuf:"bytes,3,opt,name=old_id,json=oldId,proto3" json:"old_id,omitempty"`
	// The new object ID that the ref points to.
	NewId         string `protobuf:"bytes,4,opt,name=new_id,json=newId,proto3" json:"new_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) Reset() {
	*x = SourceRepoEvent_RefUpdateEvent_RefUpdate{}
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceRepoEvent_RefUpdateEvent_RefUpdate) ProtoMessage() {}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceRepoEvent_RefUpdateEvent_RefUpdate.ProtoReflect.Descriptor instead.
func (*SourceRepoEvent_RefUpdateEvent_RefUpdate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) GetRefName() string {
	if x != nil {
		return x.RefName
	}
	return ""
}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) GetUpdateType() SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType {
	if x != nil {
		return x.UpdateType
	}
	return SourceRepoEvent_RefUpdateEvent_RefUpdate_UPDATE_TYPE_UNSPECIFIED
}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) GetOldId() string {
	if x != nil {
		return x.OldId
	}
	return ""
}

func (x *SourceRepoEvent_RefUpdateEvent_RefUpdate) GetNewId() string {
	if x != nil {
		return x.NewId
	}
	return ""
}

var File_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDesc = string([]byte{
	0x0a, 0x40, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x07, 0x0a, 0x0f,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x52, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x65, 0x72,
	0x72, 0x69, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x11, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x9e, 0x04, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x57, 0x0a, 0x0b, 0x72,
	0x65, 0x66, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x73, 0x1a, 0xab, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a,
	0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x66, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x6c, 0x64,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x65, 0x77, 0x49, 0x64, 0x22, 0x77, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x53, 0x54, 0x5f,
	0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x53, 0x54, 0x5f, 0x46, 0x4f, 0x52,
	0x57, 0x41, 0x52, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x10, 0x04, 0x1a, 0x6f, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x52, 0x65, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52,
	0x65, 0x66, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x11, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x1a, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x3b, 0x67,
	0x65, 0x72, 0x72, 0x69, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescData []byte
)

func file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDesc), len(file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDescData
}

var file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_goTypes = []any{
	(SourceRepoEvent_RefUpdateEvent_RefUpdate_UpdateType)(0), // 0: gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdate.UpdateType
	(*SourceRepoEvent)(nil),                                  // 1: gerrit.SourceRepoEvent
	(*SourceRepoEvent_RefUpdateEvent)(nil),                   // 2: gerrit.SourceRepoEvent.RefUpdateEvent
	(*SourceRepoEvent_CreateRepoEvent)(nil),                  // 3: gerrit.SourceRepoEvent.CreateRepoEvent
	(*SourceRepoEvent_DeleteRepoEvent)(nil),                  // 4: gerrit.SourceRepoEvent.DeleteRepoEvent
	(*SourceRepoEvent_RefUpdateEvent_RefUpdate)(nil),         // 5: gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdate
	nil,                           // 6: gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdatesEntry
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_depIdxs = []int32{
	7, // 0: gerrit.SourceRepoEvent.event_time:type_name -> google.protobuf.Timestamp
	2, // 1: gerrit.SourceRepoEvent.ref_update_event:type_name -> gerrit.SourceRepoEvent.RefUpdateEvent
	3, // 2: gerrit.SourceRepoEvent.create_repo_event:type_name -> gerrit.SourceRepoEvent.CreateRepoEvent
	4, // 3: gerrit.SourceRepoEvent.delete_repo_event:type_name -> gerrit.SourceRepoEvent.DeleteRepoEvent
	6, // 4: gerrit.SourceRepoEvent.RefUpdateEvent.ref_updates:type_name -> gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdatesEntry
	0, // 5: gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdate.update_type:type_name -> gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdate.UpdateType
	5, // 6: gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdatesEntry.value:type_name -> gerrit.SourceRepoEvent.RefUpdateEvent.RefUpdate
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_init() }
func file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_init() {
	if File_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto != nil {
		return
	}
	file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes[0].OneofWrappers = []any{
		(*SourceRepoEvent_RefUpdateEvent_)(nil),
		(*SourceRepoEvent_CreateRepoEvent_)(nil),
		(*SourceRepoEvent_DeleteRepoEvent_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDesc), len(file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto = out.File
	file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_goTypes = nil
	file_go_chromium_org_luci_common_proto_gerrit_source_repo_event_proto_depIdxs = nil
}
