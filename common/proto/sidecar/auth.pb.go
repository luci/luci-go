// Copyright 2023 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/common/proto/sidecar/auth.proto

package sidecar

import (
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The protocol used by the end user to call the application server. Affects
// how some metadata keys are interpreted.
type AuthenticateRequest_Protocol int32

const (
	AuthenticateRequest_PROTOCOL_UNSPECIFIED AuthenticateRequest_Protocol = 0
	AuthenticateRequest_HTTP1                AuthenticateRequest_Protocol = 1
	AuthenticateRequest_HTTP2                AuthenticateRequest_Protocol = 2
	AuthenticateRequest_GRPC                 AuthenticateRequest_Protocol = 3
)

// Enum value maps for AuthenticateRequest_Protocol.
var (
	AuthenticateRequest_Protocol_name = map[int32]string{
		0: "PROTOCOL_UNSPECIFIED",
		1: "HTTP1",
		2: "HTTP2",
		3: "GRPC",
	}
	AuthenticateRequest_Protocol_value = map[string]int32{
		"PROTOCOL_UNSPECIFIED": 0,
		"HTTP1":                1,
		"HTTP2":                2,
		"GRPC":                 3,
	}
)

func (x AuthenticateRequest_Protocol) Enum() *AuthenticateRequest_Protocol {
	p := new(AuthenticateRequest_Protocol)
	*p = x
	return p
}

func (x AuthenticateRequest_Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticateRequest_Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_enumTypes[0].Descriptor()
}

func (AuthenticateRequest_Protocol) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_enumTypes[0]
}

func (x AuthenticateRequest_Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticateRequest_Protocol.Descriptor instead.
func (AuthenticateRequest_Protocol) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{0, 0}
}

// AuthenticateRequest contains information about an incoming request that needs
// to be authenticated.
//
// To be forward compatible the application server should send all incoming
// headers (or metadata in gRPC case) and let the sidecar server decide which
// entries to use. If necessary, the application server can omit entries that
// are obviously not used for authentication (for example custom metadata
// entries used by the application server itself). But generally it should not
// be cherry-picking headers it thinks carry authentication credentials and
// sending only them.
//
// Note that in environments where the application server runs behind a
// TLS-terminating load balancer (all cloud environments are like that),
// metadata with key `Host` (for HTTP v1) or `:authority` (for HTTP v2 and gRPC)
// is especially important to propagate, since it contains the verified
// (by the load balancer) hostname of the service being called. It is often
// needed to check JWT token audience. Omitting it may result in some JWT tokens
// not being authenticated.
//
// If the application server terminates TLS itself, it MUST also itself verify
// `Host` header (or `:authority` pseudo-header) matches the expected service
// hostname before calling Authenticate.
type AuthenticateRequest struct {
	state    protoimpl.MessageState          `protogen:"open.v1"`
	Protocol AuthenticateRequest_Protocol    `protobuf:"varint,1,opt,name=protocol,proto3,enum=luci.sidecar.AuthenticateRequest_Protocol" json:"protocol,omitempty"`
	Metadata []*AuthenticateRequest_Metadata `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty"`
	// List of groups to check an authenticated identity is a member of.
	//
	// The result of this check is returned via `groups` response field.
	Groups        []string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticateRequest) GetProtocol() AuthenticateRequest_Protocol {
	if x != nil {
		return x.Protocol
	}
	return AuthenticateRequest_PROTOCOL_UNSPECIFIED
}

func (x *AuthenticateRequest) GetMetadata() []*AuthenticateRequest_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AuthenticateRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

// AuthenticateResponse is a result of authentication (successful or not).
//
// The primary result of the authentication is `identity` which is a LUCI
// identity string (`<kind>:<value>` pair, e.g. `user:someone@example.com`).
// It can be passed to methods that do authorization checks. Additional details
// are available via `outcome` oneof. If the request is anonymous or
// authentication failed, the identity is set to `anonymous:anonymous`.
//
// If credentials are present, but invalid (e.g. expired JWT), error details are
// returned as part of `error` outcome.
type AuthenticateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An authenticated identity (`<kind>:<value>`). Details are in `outcome`.
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Sidecar server information for logging and debugging.
	ServerInfo *ServerInfo `protobuf:"bytes,2,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	// List of groups the identity is a member of.
	//
	// This is a subset of groups passed via `groups` request field.
	Groups []string `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	// Types that are valid to be assigned to Outcome:
	//
	//	*AuthenticateResponse_Error
	//	*AuthenticateResponse_Anonymous_
	//	*AuthenticateResponse_User_
	//	*AuthenticateResponse_Project_
	Outcome       isAuthenticateResponse_Outcome `protobuf_oneof:"outcome"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticateResponse) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AuthenticateResponse) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

func (x *AuthenticateResponse) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *AuthenticateResponse) GetOutcome() isAuthenticateResponse_Outcome {
	if x != nil {
		return x.Outcome
	}
	return nil
}

func (x *AuthenticateResponse) GetError() *status.Status {
	if x != nil {
		if x, ok := x.Outcome.(*AuthenticateResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *AuthenticateResponse) GetAnonymous() *AuthenticateResponse_Anonymous {
	if x != nil {
		if x, ok := x.Outcome.(*AuthenticateResponse_Anonymous_); ok {
			return x.Anonymous
		}
	}
	return nil
}

func (x *AuthenticateResponse) GetUser() *AuthenticateResponse_User {
	if x != nil {
		if x, ok := x.Outcome.(*AuthenticateResponse_User_); ok {
			return x.User
		}
	}
	return nil
}

func (x *AuthenticateResponse) GetProject() *AuthenticateResponse_Project {
	if x != nil {
		if x, ok := x.Outcome.(*AuthenticateResponse_Project_); ok {
			return x.Project
		}
	}
	return nil
}

type isAuthenticateResponse_Outcome interface {
	isAuthenticateResponse_Outcome()
}

type AuthenticateResponse_Error struct {
	// Set if the RPC to the sidecar succeeded, but passed credentials are bad.
	Error *status.Status `protobuf:"bytes,10,opt,name=error,proto3,oneof"`
}

type AuthenticateResponse_Anonymous_ struct {
	// The request had no recognized credentials attached.
	Anonymous *AuthenticateResponse_Anonymous `protobuf:"bytes,11,opt,name=anonymous,proto3,oneof"`
}

type AuthenticateResponse_User_ struct {
	// The request had an end-user credentials attached.
	User *AuthenticateResponse_User `protobuf:"bytes,12,opt,name=user,proto3,oneof"`
}

type AuthenticateResponse_Project_ struct {
	// The request is an internal LUCI call from another LUCI service.
	Project *AuthenticateResponse_Project `protobuf:"bytes,13,opt,name=project,proto3,oneof"`
}

func (*AuthenticateResponse_Error) isAuthenticateResponse_Outcome() {}

func (*AuthenticateResponse_Anonymous_) isAuthenticateResponse_Outcome() {}

func (*AuthenticateResponse_User_) isAuthenticateResponse_Outcome() {}

func (*AuthenticateResponse_Project_) isAuthenticateResponse_Outcome() {}

// IsMemberRequest specifies an identity and a list of groups to check.
type IsMemberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identity to check a membership of as a `<kind>:<value>` string.
	//
	// This is the same identity as returned in AuthenticateResponse. Possible
	// formats:
	//   - `anonymous:anonymous` for an anonymous caller.
	//   - `user:<email>` for an end user or a service account.
	//   - `project:<name>` for a LUCI project calling a LUCI service.
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// List of groups to check memberships in, must have at least one entry.
	//
	// The check is overall positive if `identity` is a member of at least one
	// group here.
	Groups        []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsMemberRequest) Reset() {
	*x = IsMemberRequest{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMemberRequest) ProtoMessage() {}

func (x *IsMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMemberRequest.ProtoReflect.Descriptor instead.
func (*IsMemberRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{2}
}

func (x *IsMemberRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *IsMemberRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

// IsMemberResponse contains outcome of a groups membership check.
type IsMemberResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the identity is a member of at least one group.
	IsMember bool `protobuf:"varint,1,opt,name=is_member,json=isMember,proto3" json:"is_member,omitempty"`
	// Sidecar server information for logging and debugging.
	ServerInfo    *ServerInfo `protobuf:"bytes,2,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsMemberResponse) Reset() {
	*x = IsMemberResponse{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsMemberResponse) ProtoMessage() {}

func (x *IsMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsMemberResponse.ProtoReflect.Descriptor instead.
func (*IsMemberResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{3}
}

func (x *IsMemberResponse) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

func (x *IsMemberResponse) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

// HasPermissionRequest identifies an identity and a permission to check.
type HasPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identity to check a permission of as a `<kind>:<value>` string.
	//
	// This is the same identity as returned in AuthenticateResponse. Possible
	// formats:
	//   - `anonymous:anonymous` for an anonymous caller.
	//   - `user:<email>` for an end user or a service account.
	//   - `project:<name>` for a LUCI project calling a LUCI service.
	Identity string `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	// Permission to check as `<service>.<subject>.<verb>` string.
	//
	// The sidecar server can only check permissions registered when it was
	// started via `-sidecar-subscribe-to-permission` command line flag. Checks
	// for any other permission will end up with INVALID_ARGUMENT error.
	Permission string `protobuf:"bytes,2,opt,name=permission,proto3" json:"permission,omitempty"`
	// A realm to check the permission in as `<project>:<realm>` string.
	//
	// A non-existing realm is replaced with the corresponding root realm (e.g. if
	// `projectA:some/realm` doesn't exist, `projectA:@root` will be used in its
	// place). If the project doesn't exist, all its realms (including the root
	// realm) are considered empty. The permission check ends with negative
	// outcome in that case.
	Realm string `protobuf:"bytes,3,opt,name=realm,proto3" json:"realm,omitempty"`
	// Attributes are the context of this particular permission check and are used
	// as inputs to `conditions` predicates in conditional bindings. If a service
	// supports conditional bindings, it must document what attributes it passes
	// with each permission it checks.
	Attributes    map[string]string `protobuf:"bytes,4,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasPermissionRequest) Reset() {
	*x = HasPermissionRequest{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasPermissionRequest) ProtoMessage() {}

func (x *HasPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasPermissionRequest.ProtoReflect.Descriptor instead.
func (*HasPermissionRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{4}
}

func (x *HasPermissionRequest) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *HasPermissionRequest) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *HasPermissionRequest) GetRealm() string {
	if x != nil {
		return x.Realm
	}
	return ""
}

func (x *HasPermissionRequest) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// HasPermissionResponse contains outcome of a permission check.
type HasPermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if the identity has the requested permission.
	HasPermission bool `protobuf:"varint,1,opt,name=has_permission,json=hasPermission,proto3" json:"has_permission,omitempty"`
	// Sidecar server information for logging and debugging.
	ServerInfo    *ServerInfo `protobuf:"bytes,2,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasPermissionResponse) Reset() {
	*x = HasPermissionResponse{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasPermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasPermissionResponse) ProtoMessage() {}

func (x *HasPermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasPermissionResponse.ProtoReflect.Descriptor instead.
func (*HasPermissionResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{5}
}

func (x *HasPermissionResponse) GetHasPermission() bool {
	if x != nil {
		return x.HasPermission
	}
	return false
}

func (x *HasPermissionResponse) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

// ServerInfo is returned with every response. It contains details about the
// sidecar server that handled the call and its current state. Useful for
// debugging. Should usually be logged by the application server in its internal
// logs. Do not return this to the end user.
type ServerInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Service name of the LUCI Sidecar server to identify its monitoring metrics.
	SidecarService string `protobuf:"bytes,1,opt,name=sidecar_service,json=sidecarService,proto3" json:"sidecar_service,omitempty"`
	// Job name of the LUCI Sidecar server to identify its monitoring metrics.
	SidecarJob string `protobuf:"bytes,2,opt,name=sidecar_job,json=sidecarJob,proto3" json:"sidecar_job,omitempty"`
	// Hostname of the LUCI Sidecar server to identify its monitoring metrics.
	SidecarHost string `protobuf:"bytes,3,opt,name=sidecar_host,json=sidecarHost,proto3" json:"sidecar_host,omitempty"`
	// Version of the LUCI Sidecar server for logs.
	SidecarVersion string `protobuf:"bytes,4,opt,name=sidecar_version,json=sidecarVersion,proto3" json:"sidecar_version,omitempty"`
	// Hostname of LUCI Auth service that produced AuthDB.
	AuthDbService string `protobuf:"bytes,5,opt,name=auth_db_service,json=authDbService,proto3" json:"auth_db_service,omitempty"`
	// Revision of LUCI AuthDB used during authorization checks.
	AuthDbRev     int64 `protobuf:"varint,6,opt,name=auth_db_rev,json=authDbRev,proto3" json:"auth_db_rev,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{6}
}

func (x *ServerInfo) GetSidecarService() string {
	if x != nil {
		return x.SidecarService
	}
	return ""
}

func (x *ServerInfo) GetSidecarJob() string {
	if x != nil {
		return x.SidecarJob
	}
	return ""
}

func (x *ServerInfo) GetSidecarHost() string {
	if x != nil {
		return x.SidecarHost
	}
	return ""
}

func (x *ServerInfo) GetSidecarVersion() string {
	if x != nil {
		return x.SidecarVersion
	}
	return ""
}

func (x *ServerInfo) GetAuthDbService() string {
	if x != nil {
		return x.AuthDbService
	}
	return ""
}

func (x *ServerInfo) GetAuthDbRev() int64 {
	if x != nil {
		return x.AuthDbRev
	}
	return 0
}

// An HTTP header or gRPC metadatum.
type AuthenticateRequest_Metadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Metadata key. Case-insensitive.
	//
	// If `protocol` is `GRPC`, keys ending with `-bin` indicate the value
	// is base64-encoded. The application server MUST base64-encode binary
	// metadata values before passing them to the sidecar server.
	//
	// For other protocols, keys ending with `-bin` have no special meaning,
	// since they don't support arbitrary binary headers.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Metadata value.
	//
	// If `protocol` is `GRPC` and the key ends with `-bin`, this MUST be
	// the base64-encoded value. The sidecar server will decode it into its
	// original binary form before using it.
	//
	// For other protocols, keys ending with `-bin` have no special meaning,
	// since they don't support arbitrary binary headers.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest_Metadata) Reset() {
	*x = AuthenticateRequest_Metadata{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest_Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest_Metadata) ProtoMessage() {}

func (x *AuthenticateRequest_Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest_Metadata.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest_Metadata) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AuthenticateRequest_Metadata) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AuthenticateRequest_Metadata) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AuthenticateResponse_Anonymous struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse_Anonymous) Reset() {
	*x = AuthenticateResponse_Anonymous{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse_Anonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse_Anonymous) ProtoMessage() {}

func (x *AuthenticateResponse_Anonymous) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse_Anonymous.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse_Anonymous) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{1, 0}
}

type AuthenticateResponse_User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An authenticated user email. Always set.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// A full user name, if available.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// An URL to profile picture, if available.
	Picture string `protobuf:"bytes,3,opt,name=picture,proto3" json:"picture,omitempty"`
	// OAuth client ID if the request was authenticated using OAuth.
	ClientId      string `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse_User) Reset() {
	*x = AuthenticateResponse_User{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse_User) ProtoMessage() {}

func (x *AuthenticateResponse_User) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse_User.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse_User) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{1, 1}
}

func (x *AuthenticateResponse_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticateResponse_User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthenticateResponse_User) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *AuthenticateResponse_User) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type AuthenticateResponse_Project struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// LUCI project name representing the context of the call.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Identity string of the LUCI service that makes the call.
	Service       string `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse_Project) Reset() {
	*x = AuthenticateResponse_Project{}
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse_Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse_Project) ProtoMessage() {}

func (x *AuthenticateResponse_Project) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse_Project.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse_Project) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP(), []int{1, 2}
}

func (x *AuthenticateResponse_Project) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *AuthenticateResponse_Project) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

var File_go_chromium_org_luci_common_proto_sidecar_auth_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDesc = string([]byte{
	0x0a, 0x34, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x02,
	0x0a, 0x13, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x46, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x32, 0x0a,
	0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x44, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x31,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x32, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x47, 0x52, 0x50, 0x43, 0x10, 0x03, 0x22, 0xc6, 0x04, 0x0a, 0x14, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x09, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x1a, 0x0b, 0x0a, 0x09, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x1a, 0x67, 0x0a,
	0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x3d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x22, 0x45, 0x0a, 0x0f, 0x49, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x6a, 0x0a, 0x10, 0x49, 0x73, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xfb, 0x01, 0x0a, 0x14, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x61, 0x6c,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x61, 0x6c, 0x6d, 0x12, 0x52,
	0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x79, 0x0a, 0x15, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61,
	0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69,
	0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xea, 0x01, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x5f,
	0x6a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x64, 0x65, 0x63,
	0x61, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x64, 0x62, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x68,
	0x44, 0x62, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x44, 0x62, 0x52, 0x65, 0x76, 0x32, 0x82, 0x02, 0x0a, 0x04, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x55, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61,
	0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x08, 0x49, 0x73, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2e, 0x49, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64, 0x65,
	0x63, 0x61, 0x72, 0x2e, 0x49, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x73, 0x69, 0x64,
	0x65, 0x63, 0x61, 0x72, 0x2e, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x2e, 0x48, 0x61, 0x73, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2b,
	0x5a, 0x29, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescData []byte
)

func file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDesc), len(file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDescData
}

var file_go_chromium_org_luci_common_proto_sidecar_auth_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_go_chromium_org_luci_common_proto_sidecar_auth_proto_goTypes = []any{
	(AuthenticateRequest_Protocol)(0),      // 0: luci.sidecar.AuthenticateRequest.Protocol
	(*AuthenticateRequest)(nil),            // 1: luci.sidecar.AuthenticateRequest
	(*AuthenticateResponse)(nil),           // 2: luci.sidecar.AuthenticateResponse
	(*IsMemberRequest)(nil),                // 3: luci.sidecar.IsMemberRequest
	(*IsMemberResponse)(nil),               // 4: luci.sidecar.IsMemberResponse
	(*HasPermissionRequest)(nil),           // 5: luci.sidecar.HasPermissionRequest
	(*HasPermissionResponse)(nil),          // 6: luci.sidecar.HasPermissionResponse
	(*ServerInfo)(nil),                     // 7: luci.sidecar.ServerInfo
	(*AuthenticateRequest_Metadata)(nil),   // 8: luci.sidecar.AuthenticateRequest.Metadata
	(*AuthenticateResponse_Anonymous)(nil), // 9: luci.sidecar.AuthenticateResponse.Anonymous
	(*AuthenticateResponse_User)(nil),      // 10: luci.sidecar.AuthenticateResponse.User
	(*AuthenticateResponse_Project)(nil),   // 11: luci.sidecar.AuthenticateResponse.Project
	nil,                                    // 12: luci.sidecar.HasPermissionRequest.AttributesEntry
	(*status.Status)(nil),                  // 13: google.rpc.Status
}
var file_go_chromium_org_luci_common_proto_sidecar_auth_proto_depIdxs = []int32{
	0,  // 0: luci.sidecar.AuthenticateRequest.protocol:type_name -> luci.sidecar.AuthenticateRequest.Protocol
	8,  // 1: luci.sidecar.AuthenticateRequest.metadata:type_name -> luci.sidecar.AuthenticateRequest.Metadata
	7,  // 2: luci.sidecar.AuthenticateResponse.server_info:type_name -> luci.sidecar.ServerInfo
	13, // 3: luci.sidecar.AuthenticateResponse.error:type_name -> google.rpc.Status
	9,  // 4: luci.sidecar.AuthenticateResponse.anonymous:type_name -> luci.sidecar.AuthenticateResponse.Anonymous
	10, // 5: luci.sidecar.AuthenticateResponse.user:type_name -> luci.sidecar.AuthenticateResponse.User
	11, // 6: luci.sidecar.AuthenticateResponse.project:type_name -> luci.sidecar.AuthenticateResponse.Project
	7,  // 7: luci.sidecar.IsMemberResponse.server_info:type_name -> luci.sidecar.ServerInfo
	12, // 8: luci.sidecar.HasPermissionRequest.attributes:type_name -> luci.sidecar.HasPermissionRequest.AttributesEntry
	7,  // 9: luci.sidecar.HasPermissionResponse.server_info:type_name -> luci.sidecar.ServerInfo
	1,  // 10: luci.sidecar.Auth.Authenticate:input_type -> luci.sidecar.AuthenticateRequest
	3,  // 11: luci.sidecar.Auth.IsMember:input_type -> luci.sidecar.IsMemberRequest
	5,  // 12: luci.sidecar.Auth.HasPermission:input_type -> luci.sidecar.HasPermissionRequest
	2,  // 13: luci.sidecar.Auth.Authenticate:output_type -> luci.sidecar.AuthenticateResponse
	4,  // 14: luci.sidecar.Auth.IsMember:output_type -> luci.sidecar.IsMemberResponse
	6,  // 15: luci.sidecar.Auth.HasPermission:output_type -> luci.sidecar.HasPermissionResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_common_proto_sidecar_auth_proto_init() }
func file_go_chromium_org_luci_common_proto_sidecar_auth_proto_init() {
	if File_go_chromium_org_luci_common_proto_sidecar_auth_proto != nil {
		return
	}
	file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes[1].OneofWrappers = []any{
		(*AuthenticateResponse_Error)(nil),
		(*AuthenticateResponse_Anonymous_)(nil),
		(*AuthenticateResponse_User_)(nil),
		(*AuthenticateResponse_Project_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDesc), len(file_go_chromium_org_luci_common_proto_sidecar_auth_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_common_proto_sidecar_auth_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_common_proto_sidecar_auth_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_common_proto_sidecar_auth_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_common_proto_sidecar_auth_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_common_proto_sidecar_auth_proto = out.File
	file_go_chromium_org_luci_common_proto_sidecar_auth_proto_goTypes = nil
	file_go_chromium_org_luci_common_proto_sidecar_auth_proto_depIdxs = nil
}
