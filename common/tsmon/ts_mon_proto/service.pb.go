// Copyright 2021 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/common/tsmon/ts_mon_proto/service.proto

package ts_mon_proto

import prpc "go.chromium.org/luci/grpc/prpc"

import (
	context "context"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MonitoringInsertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payload       *MetricsPayload        `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringInsertRequest) Reset() {
	*x = MonitoringInsertRequest{}
	mi := &file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringInsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringInsertRequest) ProtoMessage() {}

func (x *MonitoringInsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringInsertRequest.ProtoReflect.Descriptor instead.
func (*MonitoringInsertRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescGZIP(), []int{0}
}

func (x *MonitoringInsertRequest) GetPayload() *MetricsPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type MonitoringInsertResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ResponseStatus *status.Status         `protobuf:"bytes,1,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MonitoringInsertResponse) Reset() {
	*x = MonitoringInsertResponse{}
	mi := &file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringInsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringInsertResponse) ProtoMessage() {}

func (x *MonitoringInsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringInsertResponse.ProtoReflect.Descriptor instead.
func (*MonitoringInsertResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *MonitoringInsertResponse) GetResponseStatus() *status.Status {
	if x != nil {
		return x.ResponseStatus
	}
	return nil
}

var File_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDesc = string([]byte{
	0x0a, 0x3c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x73,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x78, 0x2e, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x17, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x74, 0x73, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x17, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0x57, 0x0a, 0x18,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x8c, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x06, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x78, 0x2e, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x78, 0x2e, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d,
	0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x73, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x73, 0x5f, 0x6d, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescData []byte
)

func file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDesc), len(file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDescData
}

var file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_goTypes = []any{
	(*MonitoringInsertRequest)(nil),  // 0: google.internal.prodx.mon.v1.MonitoringInsertRequest
	(*MonitoringInsertResponse)(nil), // 1: google.internal.prodx.mon.v1.MonitoringInsertResponse
	(*MetricsPayload)(nil),           // 2: ts_mon.proto.MetricsPayload
	(*status.Status)(nil),            // 3: google.rpc.Status
}
var file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_depIdxs = []int32{
	2, // 0: google.internal.prodx.mon.v1.MonitoringInsertRequest.payload:type_name -> ts_mon.proto.MetricsPayload
	3, // 1: google.internal.prodx.mon.v1.MonitoringInsertResponse.response_status:type_name -> google.rpc.Status
	0, // 2: google.internal.prodx.mon.v1.MonitoringService.Insert:input_type -> google.internal.prodx.mon.v1.MonitoringInsertRequest
	1, // 3: google.internal.prodx.mon.v1.MonitoringService.Insert:output_type -> google.internal.prodx.mon.v1.MonitoringInsertResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_init() }
func file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_init() {
	if File_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto != nil {
		return
	}
	file_go_chromium_org_luci_common_tsmon_ts_mon_proto_metrics_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDesc), len(file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto = out.File
	file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_goTypes = nil
	file_go_chromium_org_luci_common_tsmon_ts_mon_proto_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MonitoringServiceClient is the client API for MonitoringService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringServiceClient interface {
	Insert(ctx context.Context, in *MonitoringInsertRequest, opts ...grpc.CallOption) (*MonitoringInsertResponse, error)
}
type monitoringServicePRPCClient struct {
	client *prpc.Client
}

func NewMonitoringServicePRPCClient(client *prpc.Client) MonitoringServiceClient {
	return &monitoringServicePRPCClient{client}
}

func (c *monitoringServicePRPCClient) Insert(ctx context.Context, in *MonitoringInsertRequest, opts ...grpc.CallOption) (*MonitoringInsertResponse, error) {
	out := new(MonitoringInsertResponse)
	err := c.client.Call(ctx, "google.internal.prodx.mon.v1.MonitoringService", "Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type monitoringServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMonitoringServiceClient(cc grpc.ClientConnInterface) MonitoringServiceClient {
	return &monitoringServiceClient{cc}
}

func (c *monitoringServiceClient) Insert(ctx context.Context, in *MonitoringInsertRequest, opts ...grpc.CallOption) (*MonitoringInsertResponse, error) {
	out := new(MonitoringInsertResponse)
	err := c.cc.Invoke(ctx, "/google.internal.prodx.mon.v1.MonitoringService/Insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MonitoringServiceServer is the server API for MonitoringService service.
type MonitoringServiceServer interface {
	Insert(context.Context, *MonitoringInsertRequest) (*MonitoringInsertResponse, error)
}

// UnimplementedMonitoringServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMonitoringServiceServer struct {
}

func (*UnimplementedMonitoringServiceServer) Insert(context.Context, *MonitoringInsertRequest) (*MonitoringInsertResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method Insert not implemented")
}

func RegisterMonitoringServiceServer(s prpc.Registrar, srv MonitoringServiceServer) {
	s.RegisterService(&_MonitoringService_serviceDesc, srv)
}

func _MonitoringService_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MonitoringInsertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MonitoringServiceServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.internal.prodx.mon.v1.MonitoringService/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MonitoringServiceServer).Insert(ctx, req.(*MonitoringInsertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MonitoringService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.internal.prodx.mon.v1.MonitoringService",
	HandlerType: (*MonitoringServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Insert",
			Handler:    _MonitoringService_Insert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/common/tsmon/ts_mon_proto/service.proto",
}
