// Copyright 2016 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/common/data/text/templateproto/template.proto

package templateproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Value defines a specific value for a parameter, and is used at Template
// expansion time.
type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*Value_Int
	//	*Value_Uint
	//	*Value_Float
	//	*Value_Bool
	//	*Value_Str
	//	*Value_Bytes
	//	*Value_Object
	//	*Value_Array
	//	*Value_Null
	Value         isValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{0}
}

func (x *Value) GetValue() isValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Value) GetInt() int64 {
	if x != nil {
		if x, ok := x.Value.(*Value_Int); ok {
			return x.Int
		}
	}
	return 0
}

func (x *Value) GetUint() uint64 {
	if x != nil {
		if x, ok := x.Value.(*Value_Uint); ok {
			return x.Uint
		}
	}
	return 0
}

func (x *Value) GetFloat() float64 {
	if x != nil {
		if x, ok := x.Value.(*Value_Float); ok {
			return x.Float
		}
	}
	return 0
}

func (x *Value) GetBool() bool {
	if x != nil {
		if x, ok := x.Value.(*Value_Bool); ok {
			return x.Bool
		}
	}
	return false
}

func (x *Value) GetStr() string {
	if x != nil {
		if x, ok := x.Value.(*Value_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *Value) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Value.(*Value_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *Value) GetObject() string {
	if x != nil {
		if x, ok := x.Value.(*Value_Object); ok {
			return x.Object
		}
	}
	return ""
}

func (x *Value) GetArray() string {
	if x != nil {
		if x, ok := x.Value.(*Value_Array); ok {
			return x.Array
		}
	}
	return ""
}

func (x *Value) GetNull() *emptypb.Empty {
	if x != nil {
		if x, ok := x.Value.(*Value_Null); ok {
			return x.Null
		}
	}
	return nil
}

type isValue_Value interface {
	isValue_Value()
}

type Value_Int struct {
	Int int64 `protobuf:"varint,1,opt,name=int,proto3,oneof"`
}

type Value_Uint struct {
	Uint uint64 `protobuf:"varint,2,opt,name=uint,proto3,oneof"`
}

type Value_Float struct {
	Float float64 `protobuf:"fixed64,3,opt,name=float,proto3,oneof"`
}

type Value_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

type Value_Str struct {
	Str string `protobuf:"bytes,5,opt,name=str,proto3,oneof"`
}

type Value_Bytes struct {
	Bytes []byte `protobuf:"bytes,6,opt,name=bytes,proto3,oneof"`
}

type Value_Object struct {
	Object string `protobuf:"bytes,7,opt,name=object,proto3,oneof"`
}

type Value_Array struct {
	Array string `protobuf:"bytes,8,opt,name=array,proto3,oneof"`
}

type Value_Null struct {
	Null *emptypb.Empty `protobuf:"bytes,9,opt,name=null,proto3,oneof"`
}

func (*Value_Int) isValue_Value() {}

func (*Value_Uint) isValue_Value() {}

func (*Value_Float) isValue_Value() {}

func (*Value_Bool) isValue_Value() {}

func (*Value_Str) isValue_Value() {}

func (*Value_Bytes) isValue_Value() {}

func (*Value_Object) isValue_Value() {}

func (*Value_Array) isValue_Value() {}

func (*Value_Null) isValue_Value() {}

type Schema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Schema:
	//
	//	*Schema_Int
	//	*Schema_Uint
	//	*Schema_Float
	//	*Schema_Bool
	//	*Schema_Str
	//	*Schema_Bytes
	//	*Schema_Enum
	//	*Schema_Object
	//	*Schema_Array
	Schema        isSchema_Schema `protobuf_oneof:"schema"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema) Reset() {
	*x = Schema{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{1}
}

func (x *Schema) GetSchema() isSchema_Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *Schema) GetInt() *Schema_Atom {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Int); ok {
			return x.Int
		}
	}
	return nil
}

func (x *Schema) GetUint() *Schema_Atom {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Uint); ok {
			return x.Uint
		}
	}
	return nil
}

func (x *Schema) GetFloat() *Schema_Atom {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Float); ok {
			return x.Float
		}
	}
	return nil
}

func (x *Schema) GetBool() *Schema_Atom {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Bool); ok {
			return x.Bool
		}
	}
	return nil
}

func (x *Schema) GetStr() *Schema_Sequence {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Str); ok {
			return x.Str
		}
	}
	return nil
}

func (x *Schema) GetBytes() *Schema_Sequence {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *Schema) GetEnum() *Schema_Set {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Enum); ok {
			return x.Enum
		}
	}
	return nil
}

func (x *Schema) GetObject() *Schema_JSON {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Object); ok {
			return x.Object
		}
	}
	return nil
}

func (x *Schema) GetArray() *Schema_JSON {
	if x != nil {
		if x, ok := x.Schema.(*Schema_Array); ok {
			return x.Array
		}
	}
	return nil
}

type isSchema_Schema interface {
	isSchema_Schema()
}

type Schema_Int struct {
	Int *Schema_Atom `protobuf:"bytes,1,opt,name=int,proto3,oneof"`
}

type Schema_Uint struct {
	Uint *Schema_Atom `protobuf:"bytes,2,opt,name=uint,proto3,oneof"`
}

type Schema_Float struct {
	Float *Schema_Atom `protobuf:"bytes,3,opt,name=float,proto3,oneof"`
}

type Schema_Bool struct {
	Bool *Schema_Atom `protobuf:"bytes,4,opt,name=bool,proto3,oneof"`
}

type Schema_Str struct {
	Str *Schema_Sequence `protobuf:"bytes,5,opt,name=str,proto3,oneof"`
}

type Schema_Bytes struct {
	Bytes *Schema_Sequence `protobuf:"bytes,6,opt,name=bytes,proto3,oneof"`
}

type Schema_Enum struct {
	Enum *Schema_Set `protobuf:"bytes,7,opt,name=enum,proto3,oneof"` // populated with Value_Str
}

type Schema_Object struct {
	Object *Schema_JSON `protobuf:"bytes,8,opt,name=object,proto3,oneof"`
}

type Schema_Array struct {
	Array *Schema_JSON `protobuf:"bytes,9,opt,name=array,proto3,oneof"`
}

func (*Schema_Int) isSchema_Schema() {}

func (*Schema_Uint) isSchema_Schema() {}

func (*Schema_Float) isSchema_Schema() {}

func (*Schema_Bool) isSchema_Schema() {}

func (*Schema_Str) isSchema_Schema() {}

func (*Schema_Bytes) isSchema_Schema() {}

func (*Schema_Enum) isSchema_Schema() {}

func (*Schema_Object) isSchema_Schema() {}

func (*Schema_Array) isSchema_Schema() {}

// File represents a file full of template definitions.
type File struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Template      map[string]*File_Template `protobuf:"bytes,1,rep,name=template,proto3" json:"template,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{2}
}

func (x *File) GetTemplate() map[string]*File_Template {
	if x != nil {
		return x.Template
	}
	return nil
}

type Specifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TemplateName  string                 `protobuf:"bytes,1,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`
	Params        map[string]*Value      `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Specifier) Reset() {
	*x = Specifier{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Specifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Specifier) ProtoMessage() {}

func (x *Specifier) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Specifier.ProtoReflect.Descriptor instead.
func (*Specifier) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{3}
}

func (x *Specifier) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *Specifier) GetParams() map[string]*Value {
	if x != nil {
		return x.Params
	}
	return nil
}

type Schema_Set struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// entry lists the possible tokens that this set can have.
	Entry         []*Schema_Set_Entry `protobuf:"bytes,1,rep,name=entry,proto3" json:"entry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema_Set) Reset() {
	*x = Schema_Set{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Set) ProtoMessage() {}

func (x *Schema_Set) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Set.ProtoReflect.Descriptor instead.
func (*Schema_Set) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Schema_Set) GetEntry() []*Schema_Set_Entry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type Schema_JSON struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// restricts the maximum amount of bytes that a Value for this field may
	// take.
	MaxLength     uint32 `protobuf:"varint,1,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema_JSON) Reset() {
	*x = Schema_JSON{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema_JSON) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_JSON) ProtoMessage() {}

func (x *Schema_JSON) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_JSON.ProtoReflect.Descriptor instead.
func (*Schema_JSON) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Schema_JSON) GetMaxLength() uint32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type Schema_Sequence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// restricts the maximum amount of bytes that a Value for this field may
	// take.
	MaxLength     uint32 `protobuf:"varint,1,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema_Sequence) Reset() {
	*x = Schema_Sequence{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema_Sequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Sequence) ProtoMessage() {}

func (x *Schema_Sequence) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Sequence.ProtoReflect.Descriptor instead.
func (*Schema_Sequence) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{1, 2}
}

func (x *Schema_Sequence) GetMaxLength() uint32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type Schema_Atom struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema_Atom) Reset() {
	*x = Schema_Atom{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema_Atom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Atom) ProtoMessage() {}

func (x *Schema_Atom) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Atom.ProtoReflect.Descriptor instead.
func (*Schema_Atom) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{1, 3}
}

type Schema_Set_Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Markdown-formatted documentation for this schema entry.
	Doc           string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Token         string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema_Set_Entry) Reset() {
	*x = Schema_Set_Entry{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema_Set_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema_Set_Entry) ProtoMessage() {}

func (x *Schema_Set_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema_Set_Entry.ProtoReflect.Descriptor instead.
func (*Schema_Set_Entry) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *Schema_Set_Entry) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *Schema_Set_Entry) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Template defines a single template.
type File_Template struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Markdown-formatted documentation for this schema entry.
	Doc string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	// body is the main JSON output for this template. It must have the form
	// of valid json, modulo the substitution parameters. In order for this
	// Template to be valid, body must parse as valid JSON, after all
	// substitutions have been applied.
	Body string `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// param is a listing of all of the parameterized bits in the Template body.
	// The key must match the regex /\${[^}]+}/. So "${foo}" would be ok, but
	// "foo", "$foo", or "${}" would not.
	//
	// params provided here must be present in Body at least once in order
	// for the Template to be valid.
	Param         map[string]*File_Template_Parameter `protobuf:"bytes,3,rep,name=param,proto3" json:"param,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File_Template) Reset() {
	*x = File_Template{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File_Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File_Template) ProtoMessage() {}

func (x *File_Template) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File_Template.ProtoReflect.Descriptor instead.
func (*File_Template) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{2, 0}
}

func (x *File_Template) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *File_Template) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *File_Template) GetParam() map[string]*File_Template_Parameter {
	if x != nil {
		return x.Param
	}
	return nil
}

type File_Template_Parameter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Markdown-formatted documentation for this schema entry.
	Doc     string `protobuf:"bytes,1,opt,name=doc,proto3" json:"doc,omitempty"`
	Default *Value `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	// nullable indicates if 'null' is a valid value for this parameter. This
	// can be used to distinguish e.g. "" from not-supplied. If default is
	// Value{null: {}}, this must be true.
	Nullable      bool    `protobuf:"varint,3,opt,name=nullable,proto3" json:"nullable,omitempty"`
	Schema        *Schema `protobuf:"bytes,4,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File_Template_Parameter) Reset() {
	*x = File_Template_Parameter{}
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File_Template_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File_Template_Parameter) ProtoMessage() {}

func (x *File_Template_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File_Template_Parameter.ProtoReflect.Descriptor instead.
func (*File_Template_Parameter) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *File_Template_Parameter) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *File_Template_Parameter) GetDefault() *Value {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *File_Template_Parameter) GetNullable() bool {
	if x != nil {
		return x.Nullable
	}
	return false
}

func (x *File_Template_Parameter) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

var File_go_chromium_org_luci_common_data_text_templateproto_template_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDesc = string([]byte{
	0x0a, 0x42, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf4, 0x01, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x75, 0x6c, 0x6c, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaa, 0x05, 0x0a, 0x06, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x2e, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x03, 0x69,
	0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x75, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x74, 0x6f, 0x6d, 0x48,
	0x00, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x41, 0x74,
	0x6f, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x03, 0x73, 0x74,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x36,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x48,
	0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x4a,
	0x53, 0x4f, 0x4e, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x32, 0x0a,
	0x05, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x2e, 0x4a, 0x53, 0x4f, 0x4e, 0x48, 0x00, 0x52, 0x05, 0x61, 0x72, 0x72, 0x61,
	0x79, 0x1a, 0x6d, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x53,
	0x65, 0x74, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x1a,
	0x2f, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0x25, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x1a, 0x29, 0x0a, 0x08, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x1a, 0x06, 0x0a, 0x04, 0x41, 0x74, 0x6f, 0x6d, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x22, 0x8f, 0x04, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x3d, 0x0a,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0xec, 0x02, 0x0a,
	0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12,
	0x3d, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x98,
	0x01, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x2e,
	0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6e, 0x75, 0x6c, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x1a, 0x60, 0x0a, 0x0a, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x59, 0x0a, 0x0d, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x01, 0x0a, 0x09, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x4f, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x74, 0x65, 0x78,
	0x74, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescData []byte
)

func file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDesc), len(file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDescData
}

var file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_go_chromium_org_luci_common_data_text_templateproto_template_proto_goTypes = []any{
	(*Value)(nil),                   // 0: templateproto.Value
	(*Schema)(nil),                  // 1: templateproto.Schema
	(*File)(nil),                    // 2: templateproto.File
	(*Specifier)(nil),               // 3: templateproto.Specifier
	(*Schema_Set)(nil),              // 4: templateproto.Schema.Set
	(*Schema_JSON)(nil),             // 5: templateproto.Schema.JSON
	(*Schema_Sequence)(nil),         // 6: templateproto.Schema.Sequence
	(*Schema_Atom)(nil),             // 7: templateproto.Schema.Atom
	(*Schema_Set_Entry)(nil),        // 8: templateproto.Schema.Set.Entry
	(*File_Template)(nil),           // 9: templateproto.File.Template
	nil,                             // 10: templateproto.File.TemplateEntry
	(*File_Template_Parameter)(nil), // 11: templateproto.File.Template.Parameter
	nil,                             // 12: templateproto.File.Template.ParamEntry
	nil,                             // 13: templateproto.Specifier.ParamsEntry
	(*emptypb.Empty)(nil),           // 14: google.protobuf.Empty
}
var file_go_chromium_org_luci_common_data_text_templateproto_template_proto_depIdxs = []int32{
	14, // 0: templateproto.Value.null:type_name -> google.protobuf.Empty
	7,  // 1: templateproto.Schema.int:type_name -> templateproto.Schema.Atom
	7,  // 2: templateproto.Schema.uint:type_name -> templateproto.Schema.Atom
	7,  // 3: templateproto.Schema.float:type_name -> templateproto.Schema.Atom
	7,  // 4: templateproto.Schema.bool:type_name -> templateproto.Schema.Atom
	6,  // 5: templateproto.Schema.str:type_name -> templateproto.Schema.Sequence
	6,  // 6: templateproto.Schema.bytes:type_name -> templateproto.Schema.Sequence
	4,  // 7: templateproto.Schema.enum:type_name -> templateproto.Schema.Set
	5,  // 8: templateproto.Schema.object:type_name -> templateproto.Schema.JSON
	5,  // 9: templateproto.Schema.array:type_name -> templateproto.Schema.JSON
	10, // 10: templateproto.File.template:type_name -> templateproto.File.TemplateEntry
	13, // 11: templateproto.Specifier.params:type_name -> templateproto.Specifier.ParamsEntry
	8,  // 12: templateproto.Schema.Set.entry:type_name -> templateproto.Schema.Set.Entry
	12, // 13: templateproto.File.Template.param:type_name -> templateproto.File.Template.ParamEntry
	9,  // 14: templateproto.File.TemplateEntry.value:type_name -> templateproto.File.Template
	0,  // 15: templateproto.File.Template.Parameter.default:type_name -> templateproto.Value
	1,  // 16: templateproto.File.Template.Parameter.schema:type_name -> templateproto.Schema
	11, // 17: templateproto.File.Template.ParamEntry.value:type_name -> templateproto.File.Template.Parameter
	0,  // 18: templateproto.Specifier.ParamsEntry.value:type_name -> templateproto.Value
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_common_data_text_templateproto_template_proto_init() }
func file_go_chromium_org_luci_common_data_text_templateproto_template_proto_init() {
	if File_go_chromium_org_luci_common_data_text_templateproto_template_proto != nil {
		return
	}
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[0].OneofWrappers = []any{
		(*Value_Int)(nil),
		(*Value_Uint)(nil),
		(*Value_Float)(nil),
		(*Value_Bool)(nil),
		(*Value_Str)(nil),
		(*Value_Bytes)(nil),
		(*Value_Object)(nil),
		(*Value_Array)(nil),
		(*Value_Null)(nil),
	}
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes[1].OneofWrappers = []any{
		(*Schema_Int)(nil),
		(*Schema_Uint)(nil),
		(*Schema_Float)(nil),
		(*Schema_Bool)(nil),
		(*Schema_Str)(nil),
		(*Schema_Bytes)(nil),
		(*Schema_Enum)(nil),
		(*Schema_Object)(nil),
		(*Schema_Array)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDesc), len(file_go_chromium_org_luci_common_data_text_templateproto_template_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_common_data_text_templateproto_template_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_common_data_text_templateproto_template_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_common_data_text_templateproto_template_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_common_data_text_templateproto_template_proto = out.File
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_goTypes = nil
	file_go_chromium_org_luci_common_data_text_templateproto_template_proto_depIdxs = nil
}
