// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: go.chromium.org/luci/auth_service/api/rpcpb/authdb.proto

package rpcpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetSnapshotRequest is passed to GetSnapshot rpc.
type GetSnapshotRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of the snapshot to get or 0 to get the latest one.
	// Not all versions may be available (i.e. there may be gaps in revision
	// numbers).
	Revision int64 `protobuf:"varint,1,opt,name=revision,proto3" json:"revision,omitempty"`
	// If true response will not return actual snapshot, just its SHA256
	// hash, revision number and timestamp.
	SkipBody      bool `protobuf:"varint,2,opt,name=skip_body,json=skipBody,proto3" json:"skip_body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSnapshotRequest) Reset() {
	*x = GetSnapshotRequest{}
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSnapshotRequest) ProtoMessage() {}

func (x *GetSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSnapshotRequest.ProtoReflect.Descriptor instead.
func (*GetSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescGZIP(), []int{0}
}

func (x *GetSnapshotRequest) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *GetSnapshotRequest) GetSkipBody() bool {
	if x != nil {
		return x.SkipBody
	}
	return false
}

// Snapshot contains information about a specific AuthDB revision.
// The revision number is used to identify this snapshot.
type Snapshot struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Revision number of this Snapshot.
	AuthDbRev int64 `protobuf:"varint,1,opt,name=auth_db_rev,json=authDbRev,proto3" json:"auth_db_rev,omitempty"`
	// SHA256 hash for this Snapshot.
	AuthDbSha256 string `protobuf:"bytes,2,opt,name=auth_db_sha256,json=authDbSha256,proto3" json:"auth_db_sha256,omitempty"`
	// Deflated AuthDB proto message, omitted if skip_body is true.
	AuthDbDeflated []byte `protobuf:"bytes,3,opt,name=auth_db_deflated,json=authDbDeflated,proto3" json:"auth_db_deflated,omitempty"`
	// Time that this Snapshot was created.
	CreatedTs     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescGZIP(), []int{1}
}

func (x *Snapshot) GetAuthDbRev() int64 {
	if x != nil {
		return x.AuthDbRev
	}
	return 0
}

func (x *Snapshot) GetAuthDbSha256() string {
	if x != nil {
		return x.AuthDbSha256
	}
	return ""
}

func (x *Snapshot) GetAuthDbDeflated() []byte {
	if x != nil {
		return x.AuthDbDeflated
	}
	return nil
}

func (x *Snapshot) GetCreatedTs() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTs
	}
	return nil
}

// GetPrincipalPermissionsRequest is to specify any principal (group, user, blob) for
// which permissions should be fetched.
type GetPrincipalPermissionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Principal     *Principal             `protobuf:"bytes,1,opt,name=principal,proto3" json:"principal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrincipalPermissionsRequest) Reset() {
	*x = GetPrincipalPermissionsRequest{}
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrincipalPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrincipalPermissionsRequest) ProtoMessage() {}

func (x *GetPrincipalPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrincipalPermissionsRequest.ProtoReflect.Descriptor instead.
func (*GetPrincipalPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescGZIP(), []int{2}
}

func (x *GetPrincipalPermissionsRequest) GetPrincipal() *Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

// PrincipalPermissions specifies a list of realm permissions for a single principal.
type PrincipalPermissions struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RealmPermissions []*RealmPermissions    `protobuf:"bytes,1,rep,name=realmPermissions,proto3" json:"realmPermissions,omitempty"`
	// Principal that was used for querying permissions, e.g. "group:administrators".
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrincipalPermissions) Reset() {
	*x = PrincipalPermissions{}
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrincipalPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrincipalPermissions) ProtoMessage() {}

func (x *PrincipalPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrincipalPermissions.ProtoReflect.Descriptor instead.
func (*PrincipalPermissions) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescGZIP(), []int{3}
}

func (x *PrincipalPermissions) GetRealmPermissions() []*RealmPermissions {
	if x != nil {
		return x.RealmPermissions
	}
	return nil
}

func (x *PrincipalPermissions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// RealmPermissions specifies a realm name and the permissions a principal has in it.
type RealmPermissions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Permissions   []string               `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RealmPermissions) Reset() {
	*x = RealmPermissions{}
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RealmPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealmPermissions) ProtoMessage() {}

func (x *RealmPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealmPermissions.ProtoReflect.Descriptor instead.
func (*RealmPermissions) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescGZIP(), []int{4}
}

func (x *RealmPermissions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RealmPermissions) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

var File_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDesc = "" +
	"\n" +
	"8go.chromium.org/luci/auth_service/api/rpcpb/authdb.proto\x12\fauth.service\x1a\x1fgoogle/protobuf/timestamp.proto\x1a8go.chromium.org/luci/auth_service/api/rpcpb/groups.proto\"M\n" +
	"\x12GetSnapshotRequest\x12\x1a\n" +
	"\brevision\x18\x01 \x01(\x03R\brevision\x12\x1b\n" +
	"\tskip_body\x18\x02 \x01(\bR\bskipBody\"\xb5\x01\n" +
	"\bSnapshot\x12\x1e\n" +
	"\vauth_db_rev\x18\x01 \x01(\x03R\tauthDbRev\x12$\n" +
	"\x0eauth_db_sha256\x18\x02 \x01(\tR\fauthDbSha256\x12(\n" +
	"\x10auth_db_deflated\x18\x03 \x01(\fR\x0eauthDbDeflated\x129\n" +
	"\n" +
	"created_ts\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedTs\"W\n" +
	"\x1eGetPrincipalPermissionsRequest\x125\n" +
	"\tprincipal\x18\x01 \x01(\v2\x17.auth.service.PrincipalR\tprincipal\"v\n" +
	"\x14PrincipalPermissions\x12J\n" +
	"\x10realmPermissions\x18\x01 \x03(\v2\x1e.auth.service.RealmPermissionsR\x10realmPermissions\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"H\n" +
	"\x10RealmPermissions\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vpermissions\x18\x02 \x03(\tR\vpermissions2\xbe\x01\n" +
	"\x06AuthDB\x12G\n" +
	"\vGetSnapshot\x12 .auth.service.GetSnapshotRequest\x1a\x16.auth.service.Snapshot\x12k\n" +
	"\x17GetPrincipalPermissions\x12,.auth.service.GetPrincipalPermissionsRequest\x1a\".auth.service.PrincipalPermissionsB-Z+go.chromium.org/luci/auth_service/api/rpcpbb\x06proto3"

var (
	file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescData []byte
)

func file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDesc), len(file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDescData
}

var file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_goTypes = []any{
	(*GetSnapshotRequest)(nil),             // 0: auth.service.GetSnapshotRequest
	(*Snapshot)(nil),                       // 1: auth.service.Snapshot
	(*GetPrincipalPermissionsRequest)(nil), // 2: auth.service.GetPrincipalPermissionsRequest
	(*PrincipalPermissions)(nil),           // 3: auth.service.PrincipalPermissions
	(*RealmPermissions)(nil),               // 4: auth.service.RealmPermissions
	(*timestamppb.Timestamp)(nil),          // 5: google.protobuf.Timestamp
	(*Principal)(nil),                      // 6: auth.service.Principal
}
var file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_depIdxs = []int32{
	5, // 0: auth.service.Snapshot.created_ts:type_name -> google.protobuf.Timestamp
	6, // 1: auth.service.GetPrincipalPermissionsRequest.principal:type_name -> auth.service.Principal
	4, // 2: auth.service.PrincipalPermissions.realmPermissions:type_name -> auth.service.RealmPermissions
	0, // 3: auth.service.AuthDB.GetSnapshot:input_type -> auth.service.GetSnapshotRequest
	2, // 4: auth.service.AuthDB.GetPrincipalPermissions:input_type -> auth.service.GetPrincipalPermissionsRequest
	1, // 5: auth.service.AuthDB.GetSnapshot:output_type -> auth.service.Snapshot
	3, // 6: auth.service.AuthDB.GetPrincipalPermissions:output_type -> auth.service.PrincipalPermissions
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_init() }
func file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_init() {
	if File_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto != nil {
		return
	}
	file_go_chromium_org_luci_auth_service_api_rpcpb_groups_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDesc), len(file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto = out.File
	file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_goTypes = nil
	file_go_chromium_org_luci_auth_service_api_rpcpb_authdb_proto_depIdxs = nil
}
