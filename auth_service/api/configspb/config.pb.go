// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/auth_service/api/configspb/config.proto

package configspb

import (
	protocol "go.chromium.org/luci/server/auth/service/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auth Service configuration that applies specifically to the service, not to
// any linked services.
//
// Provided via 'settings.cfg' config file.
type SettingsCfg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable ts_mon based monitoring.
	EnableTsMonitoring bool `protobuf:"varint,1,opt,name=enable_ts_monitoring,json=enableTsMonitoring,proto3" json:"enable_ts_monitoring,omitempty"`
	// If set, store the latest AuthDB snapshot in Google Storage.
	//
	// Should have format "<bucket>/<prefix>".
	//
	// Auth service will take ownership of two objects there:
	//  1. latest.json: JSON-serialized AuthDBRevision proto.
	//  2. latest.db: binary-serialized SignedAuthDB with actual AuthDB data.
	//
	// When AuthDB changes, Auth service updates latest.db, then latest.json, and
	// finally sends a PubSub notification.
	//
	// Consumers can either poll latest.json for changes, or they can setup
	// a PubSub subscription via /auth_service/api/v1/authdb/subscription/ to get
	// notified.
	//
	// Requires at least one AuthDB change (e.g. a group update) for the files
	// to appear after setting or changing auth_db_gs_path.
	//
	// When changing or removing auth_db_gs_path, files at the old location are
	// not automatically cleaned up.
	AuthDbGsPath string `protobuf:"bytes,2,opt,name=auth_db_gs_path,json=authDbGsPath,proto3" json:"auth_db_gs_path,omitempty"`
	// Whether exporting to BQ is enabled.
	EnableBqExport bool `protobuf:"varint,3,opt,name=enable_bq_export,json=enableBqExport,proto3" json:"enable_bq_export,omitempty"`
	// URL for an integrated UI for Auth Service.
	IntegratedUiUrl string `protobuf:"bytes,4,opt,name=integrated_ui_url,json=integratedUiUrl,proto3" json:"integrated_ui_url,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SettingsCfg) Reset() {
	*x = SettingsCfg{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsCfg) ProtoMessage() {}

func (x *SettingsCfg) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsCfg.ProtoReflect.Descriptor instead.
func (*SettingsCfg) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{0}
}

func (x *SettingsCfg) GetEnableTsMonitoring() bool {
	if x != nil {
		return x.EnableTsMonitoring
	}
	return false
}

func (x *SettingsCfg) GetAuthDbGsPath() string {
	if x != nil {
		return x.AuthDbGsPath
	}
	return ""
}

func (x *SettingsCfg) GetEnableBqExport() bool {
	if x != nil {
		return x.EnableBqExport
	}
	return false
}

func (x *SettingsCfg) GetIntegratedUiUrl() string {
	if x != nil {
		return x.IntegratedUiUrl
	}
	return ""
}

// Configuration of groups imported from external sources.
//
// Provided via 'imports.cfg' config file.
type GroupImporterConfig struct {
	state         protoimpl.MessageState                    `protogen:"open.v1"`
	TarballUpload []*GroupImporterConfig_TarballUploadEntry `protobuf:"bytes,3,rep,name=tarball_upload,json=tarballUpload,proto3" json:"tarball_upload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupImporterConfig) Reset() {
	*x = GroupImporterConfig{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupImporterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupImporterConfig) ProtoMessage() {}

func (x *GroupImporterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupImporterConfig.ProtoReflect.Descriptor instead.
func (*GroupImporterConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{1}
}

func (x *GroupImporterConfig) GetTarballUpload() []*GroupImporterConfig_TarballUploadEntry {
	if x != nil {
		return x.TarballUpload
	}
	return nil
}

// IP allowlists config: a set of named IP allowlists.
type IPAllowlistConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A set of named subnets.
	IpAllowlists  []*IPAllowlistConfig_IPAllowlist `protobuf:"bytes,1,rep,name=ip_allowlists,json=ipAllowlists,proto3" json:"ip_allowlists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAllowlistConfig) Reset() {
	*x = IPAllowlistConfig{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAllowlistConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAllowlistConfig) ProtoMessage() {}

func (x *IPAllowlistConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAllowlistConfig.ProtoReflect.Descriptor instead.
func (*IPAllowlistConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{2}
}

func (x *IPAllowlistConfig) GetIpAllowlists() []*IPAllowlistConfig_IPAllowlist {
	if x != nil {
		return x.IpAllowlists
	}
	return nil
}

// Legacy config, this is maintained to support clients still utilizing
// https://crsrc.org/i/luci/client/utils/oauth.py;l=419;drc=173496da114efb94dceedb58e588b9c58dabc5e9
//
// Global config. Includes OAuth client_id allowlist and token server URL.
//
// Provided via 'oauth.cfg' config file.
type OAuthConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ClientID returned by /auth/api/v1/server/oauth_config endpoint to clients.
	PrimaryClientId string `protobuf:"bytes,1,opt,name=primary_client_id,json=primaryClientId,proto3" json:"primary_client_id,omitempty"`
	// Client secret (that's not really a secret, since it is visible) returned
	// by /auth/api/v1/server/oauth_config endpoint to clients. Corresponding
	// callback URL must be localhost or urn:ietf:wg:oauth:2.0:oob.
	PrimaryClientSecret string `protobuf:"bytes,2,opt,name=primary_client_secret,json=primaryClientSecret,proto3" json:"primary_client_secret,omitempty"`
	// Allowlist of all accepted client_ids (in addition to the primary one).
	ClientIds []string `protobuf:"bytes,3,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"`
	// URL of a token server to use to generate delegation tokens.
	TokenServerUrl string `protobuf:"bytes,4,opt,name=token_server_url,json=tokenServerUrl,proto3" json:"token_server_url,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *OAuthConfig) Reset() {
	*x = OAuthConfig{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthConfig) ProtoMessage() {}

func (x *OAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthConfig.ProtoReflect.Descriptor instead.
func (*OAuthConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{3}
}

func (x *OAuthConfig) GetPrimaryClientId() string {
	if x != nil {
		return x.PrimaryClientId
	}
	return ""
}

func (x *OAuthConfig) GetPrimaryClientSecret() string {
	if x != nil {
		return x.PrimaryClientSecret
	}
	return ""
}

func (x *OAuthConfig) GetClientIds() []string {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

func (x *OAuthConfig) GetTokenServerUrl() string {
	if x != nil {
		return x.TokenServerUrl
	}
	return ""
}

// Provided via 'permissions.cfg' config file.
// Defines the list of roles and their respective permissions.
type PermissionsConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Representation of all defined roles.
	Role []*PermissionsConfig_Role `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty"`
	// Defines attributes that can be referenced in certain conditions.
	Attribute     []string `protobuf:"bytes,2,rep,name=attribute,proto3" json:"attribute,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionsConfig) Reset() {
	*x = PermissionsConfig{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionsConfig) ProtoMessage() {}

func (x *PermissionsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionsConfig.ProtoReflect.Descriptor instead.
func (*PermissionsConfig) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{4}
}

func (x *PermissionsConfig) GetRole() []*PermissionsConfig_Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *PermissionsConfig) GetAttribute() []string {
	if x != nil {
		return x.Attribute
	}
	return nil
}

// Accept a tarball upload from some external service.
//
// The tarball is pushed to the service (via PUT to
// /auth_service/api/v1/importer/ingest_tarball/<name>).
type GroupImporterConfig_TarballUploadEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifies this particular entry. Used in push API requests.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A service account email that is allowed to do this push.
	AuthorizedUploader []string `protobuf:"bytes,2,rep,name=authorized_uploader,json=authorizedUploader,proto3" json:"authorized_uploader,omitempty"`
	// Email domain to append to imported identities.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// List of group systems expected to be found in the archive. They act as
	// prefixes to group names, e.g. 'ldap'. Each system corresponds to
	// a subdirectory in the tarball. Each tarball may have groups from multiple
	// external systems, but groups from some external system must not be split
	// between multiple tarballs. When importer sees <group system name>/* in
	// a tarball, it modifies group list from that system on the auth_service to
	// match group list in the tarball _exactly_. For example it removes groups
	// that are on the server, but no longer present in the tarball.
	Systems []string `protobuf:"bytes,4,rep,name=systems,proto3" json:"systems,omitempty"`
	// List of groups to import from the tarball (as filenames relative to
	// tarball root, e.g. 'ldap/some-group'). If empty, imports all groups in
	// the tarball.
	Groups        []string `protobuf:"bytes,5,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupImporterConfig_TarballUploadEntry) Reset() {
	*x = GroupImporterConfig_TarballUploadEntry{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupImporterConfig_TarballUploadEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupImporterConfig_TarballUploadEntry) ProtoMessage() {}

func (x *GroupImporterConfig_TarballUploadEntry) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupImporterConfig_TarballUploadEntry.ProtoReflect.Descriptor instead.
func (*GroupImporterConfig_TarballUploadEntry) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GroupImporterConfig_TarballUploadEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupImporterConfig_TarballUploadEntry) GetAuthorizedUploader() []string {
	if x != nil {
		return x.AuthorizedUploader
	}
	return nil
}

func (x *GroupImporterConfig_TarballUploadEntry) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *GroupImporterConfig_TarballUploadEntry) GetSystems() []string {
	if x != nil {
		return x.Systems
	}
	return nil
}

func (x *GroupImporterConfig_TarballUploadEntry) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type IPAllowlistConfig_IPAllowlist struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the IP allowlist.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// List of subnets.
	Subnets []string `protobuf:"bytes,2,rep,name=subnets,proto3" json:"subnets,omitempty"`
	// Names of other IPAllowlist entities to include.
	Includes      []string `protobuf:"bytes,3,rep,name=includes,proto3" json:"includes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPAllowlistConfig_IPAllowlist) Reset() {
	*x = IPAllowlistConfig_IPAllowlist{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPAllowlistConfig_IPAllowlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPAllowlistConfig_IPAllowlist) ProtoMessage() {}

func (x *IPAllowlistConfig_IPAllowlist) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPAllowlistConfig_IPAllowlist.ProtoReflect.Descriptor instead.
func (*IPAllowlistConfig_IPAllowlist) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{2, 0}
}

func (x *IPAllowlistConfig_IPAllowlist) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IPAllowlistConfig_IPAllowlist) GetSubnets() []string {
	if x != nil {
		return x.Subnets
	}
	return nil
}

func (x *IPAllowlistConfig_IPAllowlist) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

// Defines a role that includes given permissions and other roles.
// The role should not have been defined before. To include this role into another
// role, you can specify this role by name.
type PermissionsConfig_Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier for a role, will have the form <prefix><project>.<noun>
	//
	//	examples:
	//	  "role/exampleproject.reader"
	//	  "role/exampleproject.owner"
	//
	// Prefixes:
	//
	//	"role/" -- role names defined in Auth service code.
	//	"customRole/" -- role names that can be defined in user-supplied realms.cfg.
	//	"role/luci.internal." -- interally used roles that are forbidden in realms.cfg.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// List of permissions associated with this role, same permission may not be
	// declared more than once per role.
	// Permissions should be of the form: <service>.<subject>.<verb>
	Permissions []*protocol.Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// List of other roles to include in this role, includes all the permissions
	// that the included role contains. The referenced role should be defined already.
	Includes      []string `protobuf:"bytes,3,rep,name=includes,proto3" json:"includes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionsConfig_Role) Reset() {
	*x = PermissionsConfig_Role{}
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionsConfig_Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionsConfig_Role) ProtoMessage() {}

func (x *PermissionsConfig_Role) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionsConfig_Role.ProtoReflect.Descriptor instead.
func (*PermissionsConfig_Role) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PermissionsConfig_Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionsConfig_Role) GetPermissions() []*protocol.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *PermissionsConfig_Role) GetIncludes() []string {
	if x != nil {
		return x.Includes
	}
	return nil
}

var File_go_chromium_org_luci_auth_service_api_configspb_config_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDesc = "" +
	"\n" +
	"<go.chromium.org/luci/auth_service/api/configspb/config.proto\x12\fauth.configs\x1aTgo.chromium.org/luci/server/auth/service/protocol/components/auth/proto/realms.proto\"\xbc\x01\n" +
	"\vSettingsCfg\x120\n" +
	"\x14enable_ts_monitoring\x18\x01 \x01(\bR\x12enableTsMonitoring\x12%\n" +
	"\x0fauth_db_gs_path\x18\x02 \x01(\tR\fauthDbGsPath\x12(\n" +
	"\x10enable_bq_export\x18\x03 \x01(\bR\x0eenableBqExport\x12*\n" +
	"\x11integrated_ui_url\x18\x04 \x01(\tR\x0fintegratedUiUrl\"\xa4\x02\n" +
	"\x13GroupImporterConfig\x12[\n" +
	"\x0etarball_upload\x18\x03 \x03(\v24.auth.configs.GroupImporterConfig.TarballUploadEntryR\rtarballUpload\x1a\xa3\x01\n" +
	"\x12TarballUploadEntry\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\x13authorized_uploader\x18\x02 \x03(\tR\x12authorizedUploader\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12\x18\n" +
	"\asystems\x18\x04 \x03(\tR\asystems\x12\x16\n" +
	"\x06groups\x18\x05 \x03(\tR\x06groupsJ\x04\b\x01\x10\x02J\x04\b\x02\x10\x03\"\xc4\x01\n" +
	"\x11IPAllowlistConfig\x12P\n" +
	"\rip_allowlists\x18\x01 \x03(\v2+.auth.configs.IPAllowlistConfig.IPAllowlistR\fipAllowlists\x1aW\n" +
	"\vIPAllowlist\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\asubnets\x18\x02 \x03(\tR\asubnets\x12\x1a\n" +
	"\bincludes\x18\x03 \x03(\tR\bincludesJ\x04\b\x02\x10\x03\"\xb6\x01\n" +
	"\vOAuthConfig\x12*\n" +
	"\x11primary_client_id\x18\x01 \x01(\tR\x0fprimaryClientId\x122\n" +
	"\x15primary_client_secret\x18\x02 \x01(\tR\x13primaryClientSecret\x12\x1d\n" +
	"\n" +
	"client_ids\x18\x03 \x03(\tR\tclientIds\x12(\n" +
	"\x10token_server_url\x18\x04 \x01(\tR\x0etokenServerUrl\"\xe9\x01\n" +
	"\x11PermissionsConfig\x128\n" +
	"\x04role\x18\x01 \x03(\v2$.auth.configs.PermissionsConfig.RoleR\x04role\x12\x1c\n" +
	"\tattribute\x18\x02 \x03(\tR\tattribute\x1a|\n" +
	"\x04Role\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12D\n" +
	"\vpermissions\x18\x02 \x03(\v2\".components.auth.realms.PermissionR\vpermissions\x12\x1a\n" +
	"\bincludes\x18\x03 \x03(\tR\bincludesB1Z/go.chromium.org/luci/auth_service/api/configspbb\x06proto3"

var (
	file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescData []byte
)

func file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDesc), len(file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDescData
}

var file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_go_chromium_org_luci_auth_service_api_configspb_config_proto_goTypes = []any{
	(*SettingsCfg)(nil),                            // 0: auth.configs.SettingsCfg
	(*GroupImporterConfig)(nil),                    // 1: auth.configs.GroupImporterConfig
	(*IPAllowlistConfig)(nil),                      // 2: auth.configs.IPAllowlistConfig
	(*OAuthConfig)(nil),                            // 3: auth.configs.OAuthConfig
	(*PermissionsConfig)(nil),                      // 4: auth.configs.PermissionsConfig
	(*GroupImporterConfig_TarballUploadEntry)(nil), // 5: auth.configs.GroupImporterConfig.TarballUploadEntry
	(*IPAllowlistConfig_IPAllowlist)(nil),          // 6: auth.configs.IPAllowlistConfig.IPAllowlist
	(*PermissionsConfig_Role)(nil),                 // 7: auth.configs.PermissionsConfig.Role
	(*protocol.Permission)(nil),                    // 8: components.auth.realms.Permission
}
var file_go_chromium_org_luci_auth_service_api_configspb_config_proto_depIdxs = []int32{
	5, // 0: auth.configs.GroupImporterConfig.tarball_upload:type_name -> auth.configs.GroupImporterConfig.TarballUploadEntry
	6, // 1: auth.configs.IPAllowlistConfig.ip_allowlists:type_name -> auth.configs.IPAllowlistConfig.IPAllowlist
	7, // 2: auth.configs.PermissionsConfig.role:type_name -> auth.configs.PermissionsConfig.Role
	8, // 3: auth.configs.PermissionsConfig.Role.permissions:type_name -> components.auth.realms.Permission
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_auth_service_api_configspb_config_proto_init() }
func file_go_chromium_org_luci_auth_service_api_configspb_config_proto_init() {
	if File_go_chromium_org_luci_auth_service_api_configspb_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDesc), len(file_go_chromium_org_luci_auth_service_api_configspb_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_auth_service_api_configspb_config_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_auth_service_api_configspb_config_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_auth_service_api_configspb_config_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_auth_service_api_configspb_config_proto = out.File
	file_go_chromium_org_luci_auth_service_api_configspb_config_proto_goTypes = nil
	file_go_chromium_org_luci_auth_service_api_configspb_config_proto_depIdxs = nil
}
