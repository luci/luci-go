// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/cv/api/v1/run.proto

package cvpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status describes the status of a CV Run.
type Run_Status int32

const (
	// Unspecified status.
	Run_STATUS_UNSPECIFIED Run_Status = 0
	// Run has not started yet.
	//
	// It is either because Run Manager hasn't processed the StartEvent yet or
	// the RunOwner has exhausted all the quota and waiting for new quota to be
	// available.
	Run_PENDING Run_Status = 1
	// Run is running.
	Run_RUNNING Run_Status = 2
	// Run is waiting for submission.
	//
	// Run is in this status if one of the following scenarios is true:
	//  1. Tree is closed at the time Run attempts to submit.
	//  2. There is another Run in the same LUCI Project that is currently
	//     submitting.
	//  3. The submission is rate-limited according to the submit option in
	//     Project Config.
	//
	// This status is cancellable.
	Run_WAITING_FOR_SUBMISSION Run_Status = 4
	// Run is submitting.
	//
	// A Run can't be cancelled while submitting. A Run may transition from
	// this status to either `WAITING_FOR_SUBMISSION` status or a non-cancelled
	// terminal status.
	Run_SUBMITTING Run_Status = 5
	// ENDED_MASK can be used as a bitmask to check if a Run has ended.
	// This MUST NOT be used as the status of a Run.
	Run_ENDED_MASK Run_Status = 64
	// Run ends successfully.
	Run_SUCCEEDED Run_Status = 65
	// Run ends unsuccessfully.
	Run_FAILED Run_Status = 66
	// Run is cancelled.
	Run_CANCELLED Run_Status = 67
)

// Enum value maps for Run_Status.
var (
	Run_Status_name = map[int32]string{
		0:  "STATUS_UNSPECIFIED",
		1:  "PENDING",
		2:  "RUNNING",
		4:  "WAITING_FOR_SUBMISSION",
		5:  "SUBMITTING",
		64: "ENDED_MASK",
		65: "SUCCEEDED",
		66: "FAILED",
		67: "CANCELLED",
	}
	Run_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED":     0,
		"PENDING":                1,
		"RUNNING":                2,
		"WAITING_FOR_SUBMISSION": 4,
		"SUBMITTING":             5,
		"ENDED_MASK":             64,
		"SUCCEEDED":              65,
		"FAILED":                 66,
		"CANCELLED":              67,
	}
)

func (x Run_Status) Enum() *Run_Status {
	p := new(Run_Status)
	*p = x
	return p
}

func (x Run_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Run_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_cv_api_v1_run_proto_enumTypes[0].Descriptor()
}

func (Run_Status) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_cv_api_v1_run_proto_enumTypes[0]
}

func (x Run_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Run_Status.Descriptor instead.
func (Run_Status) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescGZIP(), []int{0, 0}
}

// Run includes the high-level information about a CV Run.
type Run struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Run.
	//
	// The format of an ID is "projects/$luci-project/runs/$id", where
	// - luci-project is the name of the LUCI project the Run belongs to
	// - id is an opaque key unique in the LUCI project.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status of the Run.
	Status Run_Status `protobuf:"varint,2,opt,name=status,proto3,enum=cv.v1.Run_Status" json:"status,omitempty"`
	// eversion is the entity version, which is monotonically increasing.
	Eversion      int64 `protobuf:"varint,3,opt,name=eversion,proto3" json:"eversion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Run) Reset() {
	*x = Run{}
	mi := &file_go_chromium_org_luci_cv_api_v1_run_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Run) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Run) ProtoMessage() {}

func (x *Run) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v1_run_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Run.ProtoReflect.Descriptor instead.
func (*Run) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescGZIP(), []int{0}
}

func (x *Run) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Run) GetStatus() Run_Status {
	if x != nil {
		return x.Status
	}
	return Run_STATUS_UNSPECIFIED
}

func (x *Run) GetEversion() int64 {
	if x != nil {
		return x.Eversion
	}
	return 0
}

var File_go_chromium_org_luci_cv_api_v1_run_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cv_api_v1_run_proto_rawDesc = string([]byte{
	0x0a, 0x28, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x75, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x76, 0x2e, 0x76,
	0x31, 0x22, 0xff, 0x01, 0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x76, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x75, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xa0, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x53, 0x55, 0x42,
	0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x42,
	0x4d, 0x49, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x44,
	0x45, 0x44, 0x5f, 0x4d, 0x41, 0x53, 0x4b, 0x10, 0x40, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43,
	0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x41, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x42, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45,
	0x44, 0x10, 0x43, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69,
	0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x76, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_api_v1_run_proto_rawDesc), len(file_go_chromium_org_luci_cv_api_v1_run_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cv_api_v1_run_proto_rawDescData
}

var file_go_chromium_org_luci_cv_api_v1_run_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_cv_api_v1_run_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_go_chromium_org_luci_cv_api_v1_run_proto_goTypes = []any{
	(Run_Status)(0), // 0: cv.v1.Run.Status
	(*Run)(nil),     // 1: cv.v1.Run
}
var file_go_chromium_org_luci_cv_api_v1_run_proto_depIdxs = []int32{
	0, // 0: cv.v1.Run.status:type_name -> cv.v1.Run.Status
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cv_api_v1_run_proto_init() }
func file_go_chromium_org_luci_cv_api_v1_run_proto_init() {
	if File_go_chromium_org_luci_cv_api_v1_run_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_api_v1_run_proto_rawDesc), len(file_go_chromium_org_luci_cv_api_v1_run_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cv_api_v1_run_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cv_api_v1_run_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_cv_api_v1_run_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_cv_api_v1_run_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cv_api_v1_run_proto = out.File
	file_go_chromium_org_luci_cv_api_v1_run_proto_goTypes = nil
	file_go_chromium_org_luci_cv_api_v1_run_proto_depIdxs = nil
}
