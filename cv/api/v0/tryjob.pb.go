// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/cv/api/v0/tryjob.proto

package cvpb

import (
	proto "go.chromium.org/luci/buildbucket/proto"
	v2 "go.chromium.org/luci/cv/api/config/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TryjobStatus is the status of a tryjob.
type TryjobStatus int32

const (
	// STATUS_UNSPECIFIED is never used.
	TryjobStatus_TRYJOB_STATUS_UNSPECIFIED TryjobStatus = 0
	// PENDING means tryjob is being triggered by CV.
	TryjobStatus_PENDING TryjobStatus = 1
	// RUNNING means tryjob is currently running.
	//
	// This status is from CV's PoV. As soon as LUCI CV successfully launches
	// the tryjob against the backend, it's considered running. However, it's
	// still possible the tryjob is pending the backend system (for example,
	// waiting for the swarming bot).
	TryjobStatus_RUNNING TryjobStatus = 2
	// SUCCEEDED means that run's CL(s) are considered OK by this tryjob.
	TryjobStatus_SUCCEEDED TryjobStatus = 3
	// FAILED means that run's CL(s) are considered NOT OK by this tryjob.
	TryjobStatus_FAILED TryjobStatus = 4
	// CANCELLED means the tryjob gets cancelled by LUCI CV.
	//
	// Note that, this only counts the cancellation initiated by LUCI CV. If
	// user requested cancelling a build through Buildbucket UI for example, the
	// status would be FAILED instead.
	TryjobStatus_CANCELLED TryjobStatus = 5
	// UNTRIGGERED means the tryjob was not triggered.
	//
	// Possible reasons includes getting permission denied from Buildbucket,
	// Buildbucket is temporarily down.
	TryjobStatus_UNTRIGGERED TryjobStatus = 6
)

// Enum value maps for TryjobStatus.
var (
	TryjobStatus_name = map[int32]string{
		0: "TRYJOB_STATUS_UNSPECIFIED",
		1: "PENDING",
		2: "RUNNING",
		3: "SUCCEEDED",
		4: "FAILED",
		5: "CANCELLED",
		6: "UNTRIGGERED",
	}
	TryjobStatus_value = map[string]int32{
		"TRYJOB_STATUS_UNSPECIFIED": 0,
		"PENDING":                   1,
		"RUNNING":                   2,
		"SUCCEEDED":                 3,
		"FAILED":                    4,
		"CANCELLED":                 5,
		"UNTRIGGERED":               6,
	}
)

func (x TryjobStatus) Enum() *TryjobStatus {
	p := new(TryjobStatus)
	*p = x
	return p
}

func (x TryjobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TryjobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes[0].Descriptor()
}

func (TryjobStatus) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes[0]
}

func (x TryjobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TryjobStatus.Descriptor instead.
func (TryjobStatus) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{0}
}

// Status is a high level status of a Tryjob.
type Tryjob_Status int32

const (
	// STATUS_UNSPECIFIED is never used.
	Tryjob_STATUS_UNSPECIFIED Tryjob_Status = 0
	// PENDING means Tryjob is being triggered by CV.
	//
	// *must* have no Result.
	Tryjob_PENDING Tryjob_Status = 1
	// TRIGGERED means Tryjob was triggered.
	//
	// *may* have been triggered by not CV but another user, service, etc.
	// *may* have a Result, which *may* still change.
	Tryjob_TRIGGERED Tryjob_Status = 2
	// ENDED is a completed Tryjob. Final status.
	//
	// *must* have a Result, whose Status is not UNKNOWN.
	Tryjob_ENDED Tryjob_Status = 3
	// CANCELLED is Tryjob cancelled by CV. Final status.
	//
	// *must* have no Result.
	Tryjob_CANCELLED Tryjob_Status = 4
	// UNTRIGGERED means Tryjob was not triggered. Final status.
	//
	// *must* have no Result.
	Tryjob_UNTRIGGERED Tryjob_Status = 5
)

// Enum value maps for Tryjob_Status.
var (
	Tryjob_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PENDING",
		2: "TRIGGERED",
		3: "ENDED",
		4: "CANCELLED",
		5: "UNTRIGGERED",
	}
	Tryjob_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PENDING":            1,
		"TRIGGERED":          2,
		"ENDED":              3,
		"CANCELLED":          4,
		"UNTRIGGERED":        5,
	}
)

func (x Tryjob_Status) Enum() *Tryjob_Status {
	p := new(Tryjob_Status)
	*p = x
	return p
}

func (x Tryjob_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tryjob_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes[1].Descriptor()
}

func (Tryjob_Status) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes[1]
}

func (x Tryjob_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tryjob_Status.Descriptor instead.
func (Tryjob_Status) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{0, 0}
}

type Tryjob_Result_Status int32

const (
	// RESULT_STATUS_UNSPECIFIED is never used.
	Tryjob_Result_RESULT_STATUS_UNSPECIFIED Tryjob_Result_Status = 0
	// UNKNOWN means Tryjob didn't reach a conclusion.
	Tryjob_Result_UNKNOWN Tryjob_Result_Status = 1
	// SUCCEEDED means that Run's CLs are considered OK by this Tryjob.
	Tryjob_Result_SUCCEEDED Tryjob_Result_Status = 2
	// FAILED_PERMANENTLY means that Run's CLs are most likely not good.
	Tryjob_Result_FAILED_PERMANENTLY Tryjob_Result_Status = 3
	// FAILED_TRANSIENTLY means that Run's CLs are most likely not to blame
	// for the failure.
	// TODO(crbug/1227363): consider removing transiency aspect if possible.
	Tryjob_Result_FAILED_TRANSIENTLY Tryjob_Result_Status = 4
	// TIMEOUT means the Tryjob ran over some deadline and did not make a
	// decision about this Run's CLs.
	Tryjob_Result_TIMEOUT Tryjob_Result_Status = 5
)

// Enum value maps for Tryjob_Result_Status.
var (
	Tryjob_Result_Status_name = map[int32]string{
		0: "RESULT_STATUS_UNSPECIFIED",
		1: "UNKNOWN",
		2: "SUCCEEDED",
		3: "FAILED_PERMANENTLY",
		4: "FAILED_TRANSIENTLY",
		5: "TIMEOUT",
	}
	Tryjob_Result_Status_value = map[string]int32{
		"RESULT_STATUS_UNSPECIFIED": 0,
		"UNKNOWN":                   1,
		"SUCCEEDED":                 2,
		"FAILED_PERMANENTLY":        3,
		"FAILED_TRANSIENTLY":        4,
		"TIMEOUT":                   5,
	}
)

func (x Tryjob_Result_Status) Enum() *Tryjob_Result_Status {
	p := new(Tryjob_Result_Status)
	*p = x
	return p
}

func (x Tryjob_Result_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tryjob_Result_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes[2].Descriptor()
}

func (Tryjob_Result_Status) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes[2]
}

func (x Tryjob_Result_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tryjob_Result_Status.Descriptor instead.
func (Tryjob_Result_Status) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{0, 0, 0}
}

// Tryjob represents a Run's view of a Tryjob.
type Tryjob struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the Tryjob.
	Status Tryjob_Status `protobuf:"varint,2,opt,name=status,proto3,enum=cv.v0.Tryjob_Status" json:"status,omitempty"`
	// Result of the Tryjob.
	Result *Tryjob_Result `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	// Indicates whether this Tryjob is considered critical to a Run's final
	// status. If true, failure of this Tryjob will fail the Run immediately.
	// Run is considered SUCCEEDED iff all critical Tryjobs have passed.
	//
	// As of Mar. 2022, a Tryjob is considered critical if it is not experimental
	// or it is triggered directly by `Cq-Include-Trybots` footer.
	Critical bool `protobuf:"varint,4,opt,name=critical,proto3" json:"critical,omitempty"`
	// Indicates whether a Run is reusing this Tryjob rather than triggering
	// its own Tryjob. A Run may reuse Tryjobs triggered by some previous Runs or
	// maually by users as long as CV sees fit.
	Reuse         bool `protobuf:"varint,5,opt,name=reuse,proto3" json:"reuse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tryjob) Reset() {
	*x = Tryjob{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tryjob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tryjob) ProtoMessage() {}

func (x *Tryjob) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tryjob.ProtoReflect.Descriptor instead.
func (*Tryjob) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{0}
}

func (x *Tryjob) GetStatus() Tryjob_Status {
	if x != nil {
		return x.Status
	}
	return Tryjob_STATUS_UNSPECIFIED
}

func (x *Tryjob) GetResult() *Tryjob_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *Tryjob) GetCritical() bool {
	if x != nil {
		return x.Critical
	}
	return false
}

func (x *Tryjob) GetReuse() bool {
	if x != nil {
		return x.Reuse
	}
	return false
}

// TryjobResult is the result of a tryjob.
type TryjobResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Backend houses backend-specific output.
	//
	// Types that are valid to be assigned to Backend:
	//
	//	*TryjobResult_Buildbucket_
	Backend       isTryjobResult_Backend `protobuf_oneof:"backend"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TryjobResult) Reset() {
	*x = TryjobResult{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryjobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryjobResult) ProtoMessage() {}

func (x *TryjobResult) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryjobResult.ProtoReflect.Descriptor instead.
func (*TryjobResult) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{1}
}

func (x *TryjobResult) GetBackend() isTryjobResult_Backend {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *TryjobResult) GetBuildbucket() *TryjobResult_Buildbucket {
	if x != nil {
		if x, ok := x.Backend.(*TryjobResult_Buildbucket_); ok {
			return x.Buildbucket
		}
	}
	return nil
}

type isTryjobResult_Backend interface {
	isTryjobResult_Backend()
}

type TryjobResult_Buildbucket_ struct {
	Buildbucket *TryjobResult_Buildbucket `protobuf:"bytes,1,opt,name=buildbucket,proto3,oneof"`
}

func (*TryjobResult_Buildbucket_) isTryjobResult_Backend() {}

type TryjobInvocation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Config is the configuration of the tryjob defined in the project config.
	BuilderConfig *v2.Verifiers_Tryjob_Builder `protobuf:"bytes,1,opt,name=builder_config,json=builderConfig,proto3" json:"builder_config,omitempty"`
	// Final status of this tryjob invocation at the time run ends.
	//
	// This should be the status of the latest attempt (i.e. first element in
	// `attempts` field).
	Status TryjobStatus `protobuf:"varint,2,opt,name=status,proto3,enum=cv.v0.TryjobStatus" json:"status,omitempty"`
	// Indicates whether this tryjob invocation is considered critical to a run's
	// final status. If true, failure of this tryjob invocation will fail the run
	// immediately. Run is considered SUCCEEDED iff all critical tryjobs have
	// passed.
	//
	// As of Dec 2023, a tryjob invocation is considered critical if it is not
	// experimental or it is triggered directly by `Cq-Include-Trybots` footer.
	Critical bool `protobuf:"varint,3,opt,name=critical,proto3" json:"critical,omitempty"`
	// Attempts are all attempts for this tryjob invocation.
	//
	// Sorted from the latest attempt made to the earliest attempt made.
	// Must contain at least one element.
	Attempts      []*TryjobInvocation_Attempt `protobuf:"bytes,4,rep,name=attempts,proto3" json:"attempts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TryjobInvocation) Reset() {
	*x = TryjobInvocation{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryjobInvocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryjobInvocation) ProtoMessage() {}

func (x *TryjobInvocation) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryjobInvocation.ProtoReflect.Descriptor instead.
func (*TryjobInvocation) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{2}
}

func (x *TryjobInvocation) GetBuilderConfig() *v2.Verifiers_Tryjob_Builder {
	if x != nil {
		return x.BuilderConfig
	}
	return nil
}

func (x *TryjobInvocation) GetStatus() TryjobStatus {
	if x != nil {
		return x.Status
	}
	return TryjobStatus_TRYJOB_STATUS_UNSPECIFIED
}

func (x *TryjobInvocation) GetCritical() bool {
	if x != nil {
		return x.Critical
	}
	return false
}

func (x *TryjobInvocation) GetAttempts() []*TryjobInvocation_Attempt {
	if x != nil {
		return x.Attempts
	}
	return nil
}

// Result of a Tryjob.
type Tryjob_Result struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the Result.
	//
	// This is the verdict of verification of Run's CLs by this Tryjob.
	Status Tryjob_Result_Status `protobuf:"varint,1,opt,name=status,proto3,enum=cv.v0.Tryjob_Result_Status" json:"status,omitempty"`
	// Backend houses backend-specific output.
	//
	// Types that are valid to be assigned to Backend:
	//
	//	*Tryjob_Result_Buildbucket_
	Backend       isTryjob_Result_Backend `protobuf_oneof:"backend"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tryjob_Result) Reset() {
	*x = Tryjob_Result{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tryjob_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tryjob_Result) ProtoMessage() {}

func (x *Tryjob_Result) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tryjob_Result.ProtoReflect.Descriptor instead.
func (*Tryjob_Result) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Tryjob_Result) GetStatus() Tryjob_Result_Status {
	if x != nil {
		return x.Status
	}
	return Tryjob_Result_RESULT_STATUS_UNSPECIFIED
}

func (x *Tryjob_Result) GetBackend() isTryjob_Result_Backend {
	if x != nil {
		return x.Backend
	}
	return nil
}

func (x *Tryjob_Result) GetBuildbucket() *Tryjob_Result_Buildbucket {
	if x != nil {
		if x, ok := x.Backend.(*Tryjob_Result_Buildbucket_); ok {
			return x.Buildbucket
		}
	}
	return nil
}

type isTryjob_Result_Backend interface {
	isTryjob_Result_Backend()
}

type Tryjob_Result_Buildbucket_ struct {
	Buildbucket *Tryjob_Result_Buildbucket `protobuf:"bytes,5,opt,name=buildbucket,proto3,oneof"`
}

func (*Tryjob_Result_Buildbucket_) isTryjob_Result_Backend() {}

type Tryjob_Result_Buildbucket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tryjob_Result_Buildbucket) Reset() {
	*x = Tryjob_Result_Buildbucket{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tryjob_Result_Buildbucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tryjob_Result_Buildbucket) ProtoMessage() {}

func (x *Tryjob_Result_Buildbucket) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tryjob_Result_Buildbucket.ProtoReflect.Descriptor instead.
func (*Tryjob_Result_Buildbucket) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Tryjob_Result_Buildbucket) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TryjobResult_Buildbucket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Buildbucket host.
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// ID of the build.
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// Buildbucket builder.
	Builder       *proto.BuilderID `protobuf:"bytes,3,opt,name=builder,proto3" json:"builder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TryjobResult_Buildbucket) Reset() {
	*x = TryjobResult_Buildbucket{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryjobResult_Buildbucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryjobResult_Buildbucket) ProtoMessage() {}

func (x *TryjobResult_Buildbucket) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryjobResult_Buildbucket.ProtoReflect.Descriptor instead.
func (*TryjobResult_Buildbucket) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{1, 0}
}

func (x *TryjobResult_Buildbucket) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TryjobResult_Buildbucket) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TryjobResult_Buildbucket) GetBuilder() *proto.BuilderID {
	if x != nil {
		return x.Builder
	}
	return nil
}

// Attempt represents an attempt to invoke the tryjob.
type TryjobInvocation_Attempt struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status is the status of this tryjob attempt at the time the run ends.
	Status TryjobStatus `protobuf:"varint,1,opt,name=status,proto3,enum=cv.v0.TryjobStatus" json:"status,omitempty"`
	// Result is the result of this tryjob attempt at the time the run ends.
	//
	// It's possible that result is empty. For example, the run ends even before
	// LUCI CV launches any tryjob.
	Result *TryjobResult `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	// Indicates whether this attempt is a reuse of previously triggered tryjob
	// rather than launching its own tryjob.
	Reuse         bool `protobuf:"varint,3,opt,name=reuse,proto3" json:"reuse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TryjobInvocation_Attempt) Reset() {
	*x = TryjobInvocation_Attempt{}
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryjobInvocation_Attempt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryjobInvocation_Attempt) ProtoMessage() {}

func (x *TryjobInvocation_Attempt) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryjobInvocation_Attempt.ProtoReflect.Descriptor instead.
func (*TryjobInvocation_Attempt) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TryjobInvocation_Attempt) GetStatus() TryjobStatus {
	if x != nil {
		return x.Status
	}
	return TryjobStatus_TRYJOB_STATUS_UNSPECIFIED
}

func (x *TryjobInvocation_Attempt) GetResult() *TryjobResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TryjobInvocation_Attempt) GetReuse() bool {
	if x != nil {
		return x.Reuse
	}
	return false
}

var File_go_chromium_org_luci_cv_api_v0_tryjob_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDesc = string([]byte{
	0x0a, 0x2b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x2f, 0x74, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x76, 0x2e, 0x76, 0x30, 0x1a, 0x3b, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75,
	0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x32, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x04, 0x0a, 0x06, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62,
	0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x75, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x75, 0x73, 0x65, 0x1a, 0xb6,
	0x02, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x76, 0x2e, 0x76,
	0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44,
	0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a,
	0x6f, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x1a, 0x23, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x80, 0x01, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x01,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e,
	0x45, 0x4e, 0x54, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x45, 0x4e, 0x54, 0x4c, 0x59, 0x10, 0x04, 0x12,
	0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x05, 0x42, 0x09, 0x0a, 0x07,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22, 0x67, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e,
	0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45,
	0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12,
	0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x45, 0x44, 0x10, 0x05,
	0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x79, 0x6a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63,
	0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x00, 0x52,
	0x0b, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x1a, 0x66, 0x0a, 0x0b,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x33, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x76,
	0x32, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x07, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22,
	0xdf, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63,
	0x76, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65,
	0x72, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x74, 0x74,
	0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x76,
	0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x52, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x1a, 0x79, 0x0a, 0x07, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x72, 0x65, 0x75, 0x73,
	0x65, 0x2a, 0x82, 0x01, 0x0a, 0x0c, 0x54, 0x72, 0x79, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x59, 0x4a, 0x4f, 0x42, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x54, 0x52, 0x49, 0x47, 0x47,
	0x45, 0x52, 0x45, 0x44, 0x10, 0x06, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72,
	0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63,
	0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x3b, 0x63, 0x76, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDesc), len(file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDescData
}

var file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_go_chromium_org_luci_cv_api_v0_tryjob_proto_goTypes = []any{
	(TryjobStatus)(0),                   // 0: cv.v0.TryjobStatus
	(Tryjob_Status)(0),                  // 1: cv.v0.Tryjob.Status
	(Tryjob_Result_Status)(0),           // 2: cv.v0.Tryjob.Result.Status
	(*Tryjob)(nil),                      // 3: cv.v0.Tryjob
	(*TryjobResult)(nil),                // 4: cv.v0.TryjobResult
	(*TryjobInvocation)(nil),            // 5: cv.v0.TryjobInvocation
	(*Tryjob_Result)(nil),               // 6: cv.v0.Tryjob.Result
	(*Tryjob_Result_Buildbucket)(nil),   // 7: cv.v0.Tryjob.Result.Buildbucket
	(*TryjobResult_Buildbucket)(nil),    // 8: cv.v0.TryjobResult.Buildbucket
	(*TryjobInvocation_Attempt)(nil),    // 9: cv.v0.TryjobInvocation.Attempt
	(*v2.Verifiers_Tryjob_Builder)(nil), // 10: cv.config.Verifiers.Tryjob.Builder
	(*proto.BuilderID)(nil),             // 11: buildbucket.v2.BuilderID
}
var file_go_chromium_org_luci_cv_api_v0_tryjob_proto_depIdxs = []int32{
	1,  // 0: cv.v0.Tryjob.status:type_name -> cv.v0.Tryjob.Status
	6,  // 1: cv.v0.Tryjob.result:type_name -> cv.v0.Tryjob.Result
	8,  // 2: cv.v0.TryjobResult.buildbucket:type_name -> cv.v0.TryjobResult.Buildbucket
	10, // 3: cv.v0.TryjobInvocation.builder_config:type_name -> cv.config.Verifiers.Tryjob.Builder
	0,  // 4: cv.v0.TryjobInvocation.status:type_name -> cv.v0.TryjobStatus
	9,  // 5: cv.v0.TryjobInvocation.attempts:type_name -> cv.v0.TryjobInvocation.Attempt
	2,  // 6: cv.v0.Tryjob.Result.status:type_name -> cv.v0.Tryjob.Result.Status
	7,  // 7: cv.v0.Tryjob.Result.buildbucket:type_name -> cv.v0.Tryjob.Result.Buildbucket
	11, // 8: cv.v0.TryjobResult.Buildbucket.builder:type_name -> buildbucket.v2.BuilderID
	0,  // 9: cv.v0.TryjobInvocation.Attempt.status:type_name -> cv.v0.TryjobStatus
	4,  // 10: cv.v0.TryjobInvocation.Attempt.result:type_name -> cv.v0.TryjobResult
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cv_api_v0_tryjob_proto_init() }
func file_go_chromium_org_luci_cv_api_v0_tryjob_proto_init() {
	if File_go_chromium_org_luci_cv_api_v0_tryjob_proto != nil {
		return
	}
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[1].OneofWrappers = []any{
		(*TryjobResult_Buildbucket_)(nil),
	}
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes[3].OneofWrappers = []any{
		(*Tryjob_Result_Buildbucket_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDesc), len(file_go_chromium_org_luci_cv_api_v0_tryjob_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cv_api_v0_tryjob_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cv_api_v0_tryjob_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_cv_api_v0_tryjob_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_cv_api_v0_tryjob_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cv_api_v0_tryjob_proto = out.File
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_goTypes = nil
	file_go_chromium_org_luci_cv_api_v0_tryjob_proto_depIdxs = nil
}
