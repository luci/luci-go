// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/cv/api/v0/service_runs.proto

package cvpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is CV Run ID, e.g. "projects/chromium/runs/9991234120-1-badcafe"
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRunRequest) Reset() {
	*x = GetRunRequest{}
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunRequest) ProtoMessage() {}

func (x *GetRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunRequest.ProtoReflect.Descriptor instead.
func (*GetRunRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescGZIP(), []int{0}
}

func (x *GetRunRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A request message for SearchRuns RPC.
type SearchRunsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Returned Runs must satisfy this predicate. Required.
	Predicate *RunPredicate `protobuf:"bytes,1,opt,name=predicate,proto3" json:"predicate,omitempty"`
	// Maximum number of Runs to return at once.
	//
	// Default 32; maximum 128.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Value of SearchRunsResponse.next_page_token from the previous response.
	// Use it to continue searching.
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRunsRequest) Reset() {
	*x = SearchRunsRequest{}
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRunsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRunsRequest) ProtoMessage() {}

func (x *SearchRunsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRunsRequest.ProtoReflect.Descriptor instead.
func (*SearchRunsRequest) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescGZIP(), []int{1}
}

func (x *SearchRunsRequest) GetPredicate() *RunPredicate {
	if x != nil {
		return x.Predicate
	}
	return nil
}

func (x *SearchRunsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchRunsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// A response message for SearchRuns RPC.
type SearchRunsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Search results.
	//
	// Ordered by Run ID ascending; as a result, the Runs will be ordered by LUCI
	// project in ascending lexicographic order and within each project will be
	// ordered from newest to oldest.
	Runs []*Run `protobuf:"bytes,1,rep,name=runs,proto3" json:"runs,omitempty"`
	// Value for SearchRunsRequest.page_token to continue searching.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRunsResponse) Reset() {
	*x = SearchRunsResponse{}
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRunsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRunsResponse) ProtoMessage() {}

func (x *SearchRunsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRunsResponse.ProtoReflect.Descriptor instead.
func (*SearchRunsResponse) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRunsResponse) GetRuns() []*Run {
	if x != nil {
		return x.Runs
	}
	return nil
}

func (x *SearchRunsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// A predicate for a SearchRuns query.
//
// If a field value is empty, it is ignored, unless stated otherwise.
type RunPredicate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Limit results to this LUCI project. Required.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// The Run must include each of these Gerrit CLs, and may include others.
	//
	// The Patchset field in the GerritChanges is disallowed; Runs for the CL
	// across all patchsets will be returned.
	GerritChanges []*GerritChange `protobuf:"bytes,2,rep,name=gerrit_changes,json=gerritChanges,proto3" json:"gerrit_changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunPredicate) Reset() {
	*x = RunPredicate{}
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunPredicate) ProtoMessage() {}

func (x *RunPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunPredicate.ProtoReflect.Descriptor instead.
func (*RunPredicate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescGZIP(), []int{3}
}

func (x *RunPredicate) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *RunPredicate) GetGerritChanges() []*GerritChange {
	if x != nil {
		return x.GerritChanges
	}
	return nil
}

var File_go_chromium_org_luci_cv_api_v0_service_runs_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDesc = string([]byte{
	0x0a, 0x31, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x75, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x1a, 0x28, 0x67, 0x6f, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69,
	0x2f, 0x63, 0x76, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x2f, 0x72, 0x75, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x09, 0x70,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x75, 0x6e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x12, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x04, 0x72, 0x75, 0x6e, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x64, 0x0a, 0x0c, 0x52, 0x75, 0x6e, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x76, 0x2e,
	0x76, 0x30, 0x2e, 0x47, 0x65, 0x72, 0x72, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x0d, 0x67, 0x65, 0x72, 0x72, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x32, 0x75,
	0x0a, 0x04, 0x52, 0x75, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e,
	0x12, 0x14, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x52,
	0x75, 0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x73,
	0x12, 0x18, 0x2e, 0x63, 0x76, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x75, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x76, 0x2e,
	0x76, 0x30, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x75, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x30, 0x3b, 0x63, 0x76, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDesc), len(file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDescData
}

var file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_go_chromium_org_luci_cv_api_v0_service_runs_proto_goTypes = []any{
	(*GetRunRequest)(nil),      // 0: cv.v0.GetRunRequest
	(*SearchRunsRequest)(nil),  // 1: cv.v0.SearchRunsRequest
	(*SearchRunsResponse)(nil), // 2: cv.v0.SearchRunsResponse
	(*RunPredicate)(nil),       // 3: cv.v0.RunPredicate
	(*Run)(nil),                // 4: cv.v0.Run
	(*GerritChange)(nil),       // 5: cv.v0.GerritChange
}
var file_go_chromium_org_luci_cv_api_v0_service_runs_proto_depIdxs = []int32{
	3, // 0: cv.v0.SearchRunsRequest.predicate:type_name -> cv.v0.RunPredicate
	4, // 1: cv.v0.SearchRunsResponse.runs:type_name -> cv.v0.Run
	5, // 2: cv.v0.RunPredicate.gerrit_changes:type_name -> cv.v0.GerritChange
	0, // 3: cv.v0.Runs.GetRun:input_type -> cv.v0.GetRunRequest
	1, // 4: cv.v0.Runs.SearchRuns:input_type -> cv.v0.SearchRunsRequest
	4, // 5: cv.v0.Runs.GetRun:output_type -> cv.v0.Run
	2, // 6: cv.v0.Runs.SearchRuns:output_type -> cv.v0.SearchRunsResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cv_api_v0_service_runs_proto_init() }
func file_go_chromium_org_luci_cv_api_v0_service_runs_proto_init() {
	if File_go_chromium_org_luci_cv_api_v0_service_runs_proto != nil {
		return
	}
	file_go_chromium_org_luci_cv_api_v0_run_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDesc), len(file_go_chromium_org_luci_cv_api_v0_service_runs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_chromium_org_luci_cv_api_v0_service_runs_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cv_api_v0_service_runs_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_cv_api_v0_service_runs_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cv_api_v0_service_runs_proto = out.File
	file_go_chromium_org_luci_cv_api_v0_service_runs_proto_goTypes = nil
	file_go_chromium_org_luci_cv_api_v0_service_runs_proto_depIdxs = nil
}
