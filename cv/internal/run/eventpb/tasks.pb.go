// Copyright 2020 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.2
// source: go.chromium.org/luci/cv/internal/run/eventpb/tasks.proto

package eventpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ManageRunTask sends a signal to RunManager to process events.
//
// Always used with de-duplication and thus can't be created from a
// transaction.
//
// Queue: "manage-run".
type ManageRunTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageRunTask) Reset() {
	*x = ManageRunTask{}
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageRunTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageRunTask) ProtoMessage() {}

func (x *ManageRunTask) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageRunTask.ProtoReflect.Descriptor instead.
func (*ManageRunTask) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescGZIP(), []int{0}
}

func (x *ManageRunTask) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

// KickManageRunTask starts a task to actually enqueue ManageRunTask. It exists
// in order to send a deduplicatable ManageRunTask from a transaction.
//
// Queue: "kick-manage-run".
type KickManageRunTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	Eta           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=eta,proto3" json:"eta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickManageRunTask) Reset() {
	*x = KickManageRunTask{}
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickManageRunTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickManageRunTask) ProtoMessage() {}

func (x *KickManageRunTask) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickManageRunTask.ProtoReflect.Descriptor instead.
func (*KickManageRunTask) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescGZIP(), []int{1}
}

func (x *KickManageRunTask) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *KickManageRunTask) GetEta() *timestamppb.Timestamp {
	if x != nil {
		return x.Eta
	}
	return nil
}

// ManageRunLongOpTask performs potentially slow work on behalf a Run.
//
// A task of this kind is always created transactionally with the Run entity
// modification recording the operation in OngoingLongOps.
//
// A task of this kind does not modify the Run entity directly, but communicates
// back with Run Manager by sending at least the completion event, and possibly other
// events.
//
// Queue: "manage-run-long-op".
type ManageRunLongOpTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RunId         string                 `protobuf:"bytes,1,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
	OperationId   string                 `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManageRunLongOpTask) Reset() {
	*x = ManageRunLongOpTask{}
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManageRunLongOpTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageRunLongOpTask) ProtoMessage() {}

func (x *ManageRunLongOpTask) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageRunLongOpTask.ProtoReflect.Descriptor instead.
func (*ManageRunLongOpTask) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescGZIP(), []int{2}
}

func (x *ManageRunLongOpTask) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *ManageRunLongOpTask) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

var File_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDesc = string([]byte{
	0x0a, 0x38, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x63, 0x76, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x74,
	0x61, 0x73, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x63, 0x76, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0d, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x75,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x11,
	0x4b, 0x69, 0x63, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x52, 0x75, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x03, 0x65, 0x74, 0x61, 0x22, 0x4f, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x52, 0x75, 0x6e, 0x4c, 0x6f, 0x6e, 0x67, 0x4f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x0a,
	0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x75, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x6f, 0x2e, 0x63, 0x68,
	0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f,
	0x63, 0x76, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x75, 0x6e, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x3b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescData []byte
)

func file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDesc), len(file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDescData
}

var file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_goTypes = []any{
	(*ManageRunTask)(nil),         // 0: cv.internal.run.eventpb.ManageRunTask
	(*KickManageRunTask)(nil),     // 1: cv.internal.run.eventpb.KickManageRunTask
	(*ManageRunLongOpTask)(nil),   // 2: cv.internal.run.eventpb.ManageRunLongOpTask
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_depIdxs = []int32{
	3, // 0: cv.internal.run.eventpb.KickManageRunTask.eta:type_name -> google.protobuf.Timestamp
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_init() }
func file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_init() {
	if File_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDesc), len(file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto = out.File
	file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_goTypes = nil
	file_go_chromium_org_luci_cv_internal_run_eventpb_tasks_proto_depIdxs = nil
}
