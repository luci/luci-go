// Copyright 2016 The LUCI Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: go.chromium.org/luci/swarming/proto/config/config.proto

package configpb

import (
	_ "go.chromium.org/luci/common/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Schema for settings.cfg service config file in luci-config.
type SettingsCfg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id to inject into pages if applicable.
	GoogleAnalytics string `protobuf:"bytes,1,opt,name=google_analytics,json=googleAnalytics,proto3" json:"google_analytics,omitempty"`
	// The number of seconds an old task can be deduped from.
	// Default is one week: 7*24*60*60 = 604800
	ReusableTaskAgeSecs int32 `protobuf:"varint,2,opt,name=reusable_task_age_secs,json=reusableTaskAgeSecs,proto3" json:"reusable_task_age_secs,omitempty"`
	// The amount of time that has to pass before a machine is considered dead.
	// Default is 600 (10 minutes).
	BotDeathTimeoutSecs int32 `protobuf:"varint,3,opt,name=bot_death_timeout_secs,json=botDeathTimeoutSecs,proto3" json:"bot_death_timeout_secs,omitempty"`
	// Enable ts_mon based monitoring.
	EnableTsMonitoring bool `protobuf:"varint,4,opt,name=enable_ts_monitoring,json=enableTsMonitoring,proto3" json:"enable_ts_monitoring,omitempty"`
	// (deprecated, see pools.proto) Configuration for swarming-cipd integration.
	Cipd *CipdSettings `protobuf:"bytes,6,opt,name=cipd,proto3" json:"cipd,omitempty"`
	// Emergency setting to disable bot task reaping. When set, all bots are
	// always put to sleep and are never granted task.
	ForceBotsToSleepAndNotRunTask bool `protobuf:"varint,8,opt,name=force_bots_to_sleep_and_not_run_task,json=forceBotsToSleepAndNotRunTask,proto3" json:"force_bots_to_sleep_and_not_run_task,omitempty"`
	// oauth client id for the ui. This is created in the developer's console
	// under Credentials.
	UiClientId string `protobuf:"bytes,9,opt,name=ui_client_id,json=uiClientId,proto3" json:"ui_client_id,omitempty"`
	// A url to a task display server (e.g. milo).  This should have a %s where
	// a task id can go.
	DisplayServerUrlTemplate string `protobuf:"bytes,11,opt,name=display_server_url_template,json=displayServerUrlTemplate,proto3" json:"display_server_url_template,omitempty"`
	// Sets a maximum sleep time in seconds for bots that limits the exponental
	// backoff. If missing, the task scheduler will provide the default maximum
	// (usually 60s, but see bot_code/task_scheduler.py for details).
	MaxBotSleepTime int32 `protobuf:"varint,12,opt,name=max_bot_sleep_time,json=maxBotSleepTime,proto3" json:"max_bot_sleep_time,omitempty"`
	// Names of the authorization groups used by components/auth.
	Auth *AuthSettings `protobuf:"bytes,13,opt,name=auth,proto3" json:"auth,omitempty"`
	// Sets the default gRPC proxy for the bot's Isolate server calls.
	BotIsolateGrpcProxy string `protobuf:"bytes,14,opt,name=bot_isolate_grpc_proxy,json=botIsolateGrpcProxy,proto3" json:"bot_isolate_grpc_proxy,omitempty"`
	// Sets the default gRPC proxy for the bot's Swarming server calls.
	BotSwarmingGrpcProxy string `protobuf:"bytes,15,opt,name=bot_swarming_grpc_proxy,json=botSwarmingGrpcProxy,proto3" json:"bot_swarming_grpc_proxy,omitempty"`
	// Any extra urls that should be added to frame-src, e.g. anything that
	// will be linked to from the display server.
	// This originally added things to child-src, which was deprecated:
	// https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/child-src
	ExtraChildSrcCspUrl []string `protobuf:"bytes,16,rep,name=extra_child_src_csp_url,json=extraChildSrcCspUrl,proto3" json:"extra_child_src_csp_url,omitempty"`
	// Whether swarming should batch notifications to the external scheduler.
	EnableBatchEsNotifications bool `protobuf:"varint,18,opt,name=enable_batch_es_notifications,json=enableBatchEsNotifications,proto3" json:"enable_batch_es_notifications,omitempty"`
	// Configuration for Swarming-ResultDB integration.
	Resultdb *ResultDBSettings `protobuf:"bytes,19,opt,name=resultdb,proto3" json:"resultdb,omitempty"`
	// Configuration for RBE-CAS integration.
	Cas *CASSettings `protobuf:"bytes,20,opt,name=cas,proto3" json:"cas,omitempty"`
	// Configuration for Python => Go RPC servers migration.
	TrafficMigration *TrafficMigration `protobuf:"bytes,21,opt,name=traffic_migration,json=trafficMigration,proto3" json:"traffic_migration,omitempty"`
	// Configuration of the bot deployment process.
	BotDeployment *BotDeployment `protobuf:"bytes,22,opt,name=bot_deployment,json=botDeployment,proto3" json:"bot_deployment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsCfg) Reset() {
	*x = SettingsCfg{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsCfg) ProtoMessage() {}

func (x *SettingsCfg) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsCfg.ProtoReflect.Descriptor instead.
func (*SettingsCfg) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *SettingsCfg) GetGoogleAnalytics() string {
	if x != nil {
		return x.GoogleAnalytics
	}
	return ""
}

func (x *SettingsCfg) GetReusableTaskAgeSecs() int32 {
	if x != nil {
		return x.ReusableTaskAgeSecs
	}
	return 0
}

func (x *SettingsCfg) GetBotDeathTimeoutSecs() int32 {
	if x != nil {
		return x.BotDeathTimeoutSecs
	}
	return 0
}

func (x *SettingsCfg) GetEnableTsMonitoring() bool {
	if x != nil {
		return x.EnableTsMonitoring
	}
	return false
}

func (x *SettingsCfg) GetCipd() *CipdSettings {
	if x != nil {
		return x.Cipd
	}
	return nil
}

func (x *SettingsCfg) GetForceBotsToSleepAndNotRunTask() bool {
	if x != nil {
		return x.ForceBotsToSleepAndNotRunTask
	}
	return false
}

func (x *SettingsCfg) GetUiClientId() string {
	if x != nil {
		return x.UiClientId
	}
	return ""
}

func (x *SettingsCfg) GetDisplayServerUrlTemplate() string {
	if x != nil {
		return x.DisplayServerUrlTemplate
	}
	return ""
}

func (x *SettingsCfg) GetMaxBotSleepTime() int32 {
	if x != nil {
		return x.MaxBotSleepTime
	}
	return 0
}

func (x *SettingsCfg) GetAuth() *AuthSettings {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SettingsCfg) GetBotIsolateGrpcProxy() string {
	if x != nil {
		return x.BotIsolateGrpcProxy
	}
	return ""
}

func (x *SettingsCfg) GetBotSwarmingGrpcProxy() string {
	if x != nil {
		return x.BotSwarmingGrpcProxy
	}
	return ""
}

func (x *SettingsCfg) GetExtraChildSrcCspUrl() []string {
	if x != nil {
		return x.ExtraChildSrcCspUrl
	}
	return nil
}

func (x *SettingsCfg) GetEnableBatchEsNotifications() bool {
	if x != nil {
		return x.EnableBatchEsNotifications
	}
	return false
}

func (x *SettingsCfg) GetResultdb() *ResultDBSettings {
	if x != nil {
		return x.Resultdb
	}
	return nil
}

func (x *SettingsCfg) GetCas() *CASSettings {
	if x != nil {
		return x.Cas
	}
	return nil
}

func (x *SettingsCfg) GetTrafficMigration() *TrafficMigration {
	if x != nil {
		return x.TrafficMigration
	}
	return nil
}

func (x *SettingsCfg) GetBotDeployment() *BotDeployment {
	if x != nil {
		return x.BotDeployment
	}
	return nil
}

// A CIPD package.
type CipdPackage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A template of a full CIPD package name, e.g.
	// "infra/tools/cipd/${platform}"
	// See also cipd.ALL_PARAMS.
	PackageName string `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// Valid package version for all packages matched by package name.
	Version       string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CipdPackage) Reset() {
	*x = CipdPackage{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CipdPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CipdPackage) ProtoMessage() {}

func (x *CipdPackage) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CipdPackage.ProtoReflect.Descriptor instead.
func (*CipdPackage) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{1}
}

func (x *CipdPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *CipdPackage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Settings for Swarming-CIPD integration.
type CipdSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL of the default CIPD server to use if it is not specified in a task.
	// Must start with "https://" or "http://",
	// e.g. "https://chrome-infra-packages.appspot.com".
	DefaultServer string `protobuf:"bytes,1,opt,name=default_server,json=defaultServer,proto3" json:"default_server,omitempty"`
	// Package of the default CIPD client to use if it is not specified in a
	// task.
	DefaultClientPackage *CipdPackage `protobuf:"bytes,2,opt,name=default_client_package,json=defaultClientPackage,proto3" json:"default_client_package,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CipdSettings) Reset() {
	*x = CipdSettings{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CipdSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CipdSettings) ProtoMessage() {}

func (x *CipdSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CipdSettings.ProtoReflect.Descriptor instead.
func (*CipdSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{2}
}

func (x *CipdSettings) GetDefaultServer() string {
	if x != nil {
		return x.DefaultServer
	}
	return ""
}

func (x *CipdSettings) GetDefaultClientPackage() *CipdPackage {
	if x != nil {
		return x.DefaultClientPackage
	}
	return nil
}

type AuthSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Members of this group have full administrative access.
	//
	// Grants:
	// - config view and edit
	// - delete any bot
	// - all of bot_bootstrap_group membership
	// - all of privileged_users_group membership
	AdminsGroup string `protobuf:"bytes,1,opt,name=admins_group,json=adminsGroup,proto3" json:"admins_group,omitempty"`
	// Members of this group can fetch swarming bot code and bootstrap bots.
	//
	// Grants:
	// - bot create: create a token to anonymously fetch the bot code.
	BotBootstrapGroup string `protobuf:"bytes,2,opt,name=bot_bootstrap_group,json=botBootstrapGroup,proto3" json:"bot_bootstrap_group,omitempty"`
	// Members of this group can schedule tasks and see everyone else's tasks.
	//
	// Grants:
	// - cancel any task
	// - edit (terminate) any bot
	// - all of view_all_bots_group membership
	// - all of view_all_tasks_group membership
	PrivilegedUsersGroup string `protobuf:"bytes,3,opt,name=privileged_users_group,json=privilegedUsersGroup,proto3" json:"privileged_users_group,omitempty"`
	// Members of this group can schedule tasks and see only their own tasks.
	//
	// Grants:
	// - create a task
	// - view and edit own task
	UsersGroup string `protobuf:"bytes,4,opt,name=users_group,json=usersGroup,proto3" json:"users_group,omitempty"`
	// Members of this group can view all bots. This is a read-only group.
	//
	// Grants:
	// - view all bots
	ViewAllBotsGroup string `protobuf:"bytes,5,opt,name=view_all_bots_group,json=viewAllBotsGroup,proto3" json:"view_all_bots_group,omitempty"`
	// Members of this group can view all tasks. This is a read-only group.
	//
	// Grants:
	// - view all tasks
	ViewAllTasksGroup string `protobuf:"bytes,6,opt,name=view_all_tasks_group,json=viewAllTasksGroup,proto3" json:"view_all_tasks_group,omitempty"`
	// List of Realm permissions enforced by default.
	// This field will be deprecated after migration.
	EnforcedRealmPermissions []RealmPermission `protobuf:"varint,7,rep,packed,name=enforced_realm_permissions,json=enforcedRealmPermissions,proto3,enum=swarming.config.RealmPermission" json:"enforced_realm_permissions,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AuthSettings) Reset() {
	*x = AuthSettings{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthSettings) ProtoMessage() {}

func (x *AuthSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthSettings.ProtoReflect.Descriptor instead.
func (*AuthSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{3}
}

func (x *AuthSettings) GetAdminsGroup() string {
	if x != nil {
		return x.AdminsGroup
	}
	return ""
}

func (x *AuthSettings) GetBotBootstrapGroup() string {
	if x != nil {
		return x.BotBootstrapGroup
	}
	return ""
}

func (x *AuthSettings) GetPrivilegedUsersGroup() string {
	if x != nil {
		return x.PrivilegedUsersGroup
	}
	return ""
}

func (x *AuthSettings) GetUsersGroup() string {
	if x != nil {
		return x.UsersGroup
	}
	return ""
}

func (x *AuthSettings) GetViewAllBotsGroup() string {
	if x != nil {
		return x.ViewAllBotsGroup
	}
	return ""
}

func (x *AuthSettings) GetViewAllTasksGroup() string {
	if x != nil {
		return x.ViewAllTasksGroup
	}
	return ""
}

func (x *AuthSettings) GetEnforcedRealmPermissions() []RealmPermission {
	if x != nil {
		return x.EnforcedRealmPermissions
	}
	return nil
}

// Settings for Swarming-ResultDB integration.
type ResultDBSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URL of the ResultDB server to use.
	// Must start with "https://" or "http://",
	// e.g. "https://results.api.cr.dev".
	Server        string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultDBSettings) Reset() {
	*x = ResultDBSettings{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultDBSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDBSettings) ProtoMessage() {}

func (x *ResultDBSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDBSettings.ProtoReflect.Descriptor instead.
func (*ResultDBSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{4}
}

func (x *ResultDBSettings) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

// Settings for CAS integration.
type CASSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Host of the CAS viewer.
	// Must start with "https://" or "http://",
	// e.g. "https://cas-viewer.appspot.com".
	ViewerServer  string `protobuf:"bytes,1,opt,name=viewer_server,json=viewerServer,proto3" json:"viewer_server,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CASSettings) Reset() {
	*x = CASSettings{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CASSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CASSettings) ProtoMessage() {}

func (x *CASSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CASSettings.ProtoReflect.Descriptor instead.
func (*CASSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{5}
}

func (x *CASSettings) GetViewerServer() string {
	if x != nil {
		return x.ViewerServer
	}
	return ""
}

// Configuration for Python => Go RPC servers migration.
type TrafficMigration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All routes where traffic splitting is enabled.
	Routes        []*TrafficMigration_Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrafficMigration) Reset() {
	*x = TrafficMigration{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficMigration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficMigration) ProtoMessage() {}

func (x *TrafficMigration) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficMigration.ProtoReflect.Descriptor instead.
func (*TrafficMigration) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{6}
}

func (x *TrafficMigration) GetRoutes() []*TrafficMigration_Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

// Configuration of the bot deployment process.
type BotDeployment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The bot package to use on majority of bots.
	Stable *BotDeployment_BotPackage `protobuf:"bytes,1,opt,name=stable,proto3" json:"stable,omitempty"`
	// The bot package to use on a canary subset of bots.
	Canary *BotDeployment_BotPackage `protobuf:"bytes,2,opt,name=canary,proto3" json:"canary,omitempty"`
	// Percent of bots to put into the canary set.
	CanaryPercent int32 `protobuf:"varint,3,opt,name=canary_percent,json=canaryPercent,proto3" json:"canary_percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotDeployment) Reset() {
	*x = BotDeployment{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotDeployment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotDeployment) ProtoMessage() {}

func (x *BotDeployment) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotDeployment.ProtoReflect.Descriptor instead.
func (*BotDeployment) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{7}
}

func (x *BotDeployment) GetStable() *BotDeployment_BotPackage {
	if x != nil {
		return x.Stable
	}
	return nil
}

func (x *BotDeployment) GetCanary() *BotDeployment_BotPackage {
	if x != nil {
		return x.Canary
	}
	return nil
}

func (x *BotDeployment) GetCanaryPercent() int32 {
	if x != nil {
		return x.CanaryPercent
	}
	return 0
}

type TrafficMigration_Route struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// What route to apply this config on.
	// Route keys are "/prpc/<service>/<method>".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A portion of requests (in percents) to route to the Go version.
	RouteToGoPercent int32 `protobuf:"varint,2,opt,name=route_to_go_percent,json=routeToGoPercent,proto3" json:"route_to_go_percent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TrafficMigration_Route) Reset() {
	*x = TrafficMigration_Route{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficMigration_Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficMigration_Route) ProtoMessage() {}

func (x *TrafficMigration_Route) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficMigration_Route.ProtoReflect.Descriptor instead.
func (*TrafficMigration_Route) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{6, 0}
}

func (x *TrafficMigration_Route) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TrafficMigration_Route) GetRouteToGoPercent() int32 {
	if x != nil {
		return x.RouteToGoPercent
	}
	return 0
}

type BotDeployment_BotPackage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The CIPD server URL, e.g. "https://chrome-infra-packages.appspot.com".
	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	// The CIPD package with the Swarming bot e.g. "infra/luci/swarming_bot".
	Pkg string `protobuf:"bytes,2,opt,name=pkg,proto3" json:"pkg,omitempty"`
	// The version of the package to use e.g. "git_revision:XXX".
	Version       string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BotDeployment_BotPackage) Reset() {
	*x = BotDeployment_BotPackage{}
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BotDeployment_BotPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotDeployment_BotPackage) ProtoMessage() {}

func (x *BotDeployment_BotPackage) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotDeployment_BotPackage.ProtoReflect.Descriptor instead.
func (*BotDeployment_BotPackage) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP(), []int{7, 0}
}

func (x *BotDeployment_BotPackage) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *BotDeployment_BotPackage) GetPkg() string {
	if x != nil {
		return x.Pkg
	}
	return ""
}

func (x *BotDeployment_BotPackage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_go_chromium_org_luci_swarming_proto_config_config_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDesc = "" +
	"\n" +
	"7go.chromium.org/luci/swarming/proto/config/config.proto\x12\x0fswarming.config\x1a7go.chromium.org/luci/swarming/proto/config/realms.proto\x1a/go.chromium.org/luci/common/proto/options.proto\"\x98\b\n" +
	"\vSettingsCfg\x12)\n" +
	"\x10google_analytics\x18\x01 \x01(\tR\x0fgoogleAnalytics\x123\n" +
	"\x16reusable_task_age_secs\x18\x02 \x01(\x05R\x13reusableTaskAgeSecs\x123\n" +
	"\x16bot_death_timeout_secs\x18\x03 \x01(\x05R\x13botDeathTimeoutSecs\x120\n" +
	"\x14enable_ts_monitoring\x18\x04 \x01(\bR\x12enableTsMonitoring\x121\n" +
	"\x04cipd\x18\x06 \x01(\v2\x1d.swarming.config.CipdSettingsR\x04cipd\x12K\n" +
	"$force_bots_to_sleep_and_not_run_task\x18\b \x01(\bR\x1dforceBotsToSleepAndNotRunTask\x12 \n" +
	"\fui_client_id\x18\t \x01(\tR\n" +
	"uiClientId\x12=\n" +
	"\x1bdisplay_server_url_template\x18\v \x01(\tR\x18displayServerUrlTemplate\x12+\n" +
	"\x12max_bot_sleep_time\x18\f \x01(\x05R\x0fmaxBotSleepTime\x121\n" +
	"\x04auth\x18\r \x01(\v2\x1d.swarming.config.AuthSettingsR\x04auth\x123\n" +
	"\x16bot_isolate_grpc_proxy\x18\x0e \x01(\tR\x13botIsolateGrpcProxy\x125\n" +
	"\x17bot_swarming_grpc_proxy\x18\x0f \x01(\tR\x14botSwarmingGrpcProxy\x124\n" +
	"\x17extra_child_src_csp_url\x18\x10 \x03(\tR\x13extraChildSrcCspUrl\x12A\n" +
	"\x1denable_batch_es_notifications\x18\x12 \x01(\bR\x1aenableBatchEsNotifications\x12=\n" +
	"\bresultdb\x18\x13 \x01(\v2!.swarming.config.ResultDBSettingsR\bresultdb\x12.\n" +
	"\x03cas\x18\x14 \x01(\v2\x1c.swarming.config.CASSettingsR\x03cas\x12N\n" +
	"\x11traffic_migration\x18\x15 \x01(\v2!.swarming.config.TrafficMigrationR\x10trafficMigration\x12E\n" +
	"\x0ebot_deployment\x18\x16 \x01(\v2\x1e.swarming.config.BotDeploymentR\rbotDeploymentJ\x04\b\x05\x10\x06J\x04\b\a\x10\bJ\x04\b\n" +
	"\x10\vJ\x04\b\x11\x10\x12\"J\n" +
	"\vCipdPackage\x12!\n" +
	"\fpackage_name\x18\x01 \x01(\tR\vpackageName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"\x89\x01\n" +
	"\fCipdSettings\x12%\n" +
	"\x0edefault_server\x18\x01 \x01(\tR\rdefaultServer\x12R\n" +
	"\x16default_client_package\x18\x02 \x01(\v2\x1c.swarming.config.CipdPackageR\x14defaultClientPackage\"\xf8\x02\n" +
	"\fAuthSettings\x12!\n" +
	"\fadmins_group\x18\x01 \x01(\tR\vadminsGroup\x12.\n" +
	"\x13bot_bootstrap_group\x18\x02 \x01(\tR\x11botBootstrapGroup\x124\n" +
	"\x16privileged_users_group\x18\x03 \x01(\tR\x14privilegedUsersGroup\x12\x1f\n" +
	"\vusers_group\x18\x04 \x01(\tR\n" +
	"usersGroup\x12-\n" +
	"\x13view_all_bots_group\x18\x05 \x01(\tR\x10viewAllBotsGroup\x12/\n" +
	"\x14view_all_tasks_group\x18\x06 \x01(\tR\x11viewAllTasksGroup\x12^\n" +
	"\x1aenforced_realm_permissions\x18\a \x03(\x0e2 .swarming.config.RealmPermissionR\x18enforcedRealmPermissions\"*\n" +
	"\x10ResultDBSettings\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\"2\n" +
	"\vCASSettings\x12#\n" +
	"\rviewer_server\x18\x01 \x01(\tR\fviewerServer\"\x9f\x01\n" +
	"\x10TrafficMigration\x12?\n" +
	"\x06routes\x18\x01 \x03(\v2'.swarming.config.TrafficMigration.RouteR\x06routes\x1aJ\n" +
	"\x05Route\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12-\n" +
	"\x13route_to_go_percent\x18\x02 \x01(\x05R\x10routeToGoPercent\"\x8e\x02\n" +
	"\rBotDeployment\x12A\n" +
	"\x06stable\x18\x01 \x01(\v2).swarming.config.BotDeployment.BotPackageR\x06stable\x12A\n" +
	"\x06canary\x18\x02 \x01(\v2).swarming.config.BotDeployment.BotPackageR\x06canary\x12%\n" +
	"\x0ecanary_percent\x18\x03 \x01(\x05R\rcanaryPercent\x1aP\n" +
	"\n" +
	"BotPackage\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\x12\x10\n" +
	"\x03pkg\x18\x02 \x01(\tR\x03pkg\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversionBy\xa2\xfe#@\n" +
	">https://config.luci.app/schemas/services/swarming:settings.cfgZ3go.chromium.org/luci/swarming/proto/config;configpbb\x06proto3"

var (
	file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescData []byte
)

func file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDesc), len(file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDescData
}

var file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_go_chromium_org_luci_swarming_proto_config_config_proto_goTypes = []any{
	(*SettingsCfg)(nil),              // 0: swarming.config.SettingsCfg
	(*CipdPackage)(nil),              // 1: swarming.config.CipdPackage
	(*CipdSettings)(nil),             // 2: swarming.config.CipdSettings
	(*AuthSettings)(nil),             // 3: swarming.config.AuthSettings
	(*ResultDBSettings)(nil),         // 4: swarming.config.ResultDBSettings
	(*CASSettings)(nil),              // 5: swarming.config.CASSettings
	(*TrafficMigration)(nil),         // 6: swarming.config.TrafficMigration
	(*BotDeployment)(nil),            // 7: swarming.config.BotDeployment
	(*TrafficMigration_Route)(nil),   // 8: swarming.config.TrafficMigration.Route
	(*BotDeployment_BotPackage)(nil), // 9: swarming.config.BotDeployment.BotPackage
	(RealmPermission)(0),             // 10: swarming.config.RealmPermission
}
var file_go_chromium_org_luci_swarming_proto_config_config_proto_depIdxs = []int32{
	2,  // 0: swarming.config.SettingsCfg.cipd:type_name -> swarming.config.CipdSettings
	3,  // 1: swarming.config.SettingsCfg.auth:type_name -> swarming.config.AuthSettings
	4,  // 2: swarming.config.SettingsCfg.resultdb:type_name -> swarming.config.ResultDBSettings
	5,  // 3: swarming.config.SettingsCfg.cas:type_name -> swarming.config.CASSettings
	6,  // 4: swarming.config.SettingsCfg.traffic_migration:type_name -> swarming.config.TrafficMigration
	7,  // 5: swarming.config.SettingsCfg.bot_deployment:type_name -> swarming.config.BotDeployment
	1,  // 6: swarming.config.CipdSettings.default_client_package:type_name -> swarming.config.CipdPackage
	10, // 7: swarming.config.AuthSettings.enforced_realm_permissions:type_name -> swarming.config.RealmPermission
	8,  // 8: swarming.config.TrafficMigration.routes:type_name -> swarming.config.TrafficMigration.Route
	9,  // 9: swarming.config.BotDeployment.stable:type_name -> swarming.config.BotDeployment.BotPackage
	9,  // 10: swarming.config.BotDeployment.canary:type_name -> swarming.config.BotDeployment.BotPackage
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_swarming_proto_config_config_proto_init() }
func file_go_chromium_org_luci_swarming_proto_config_config_proto_init() {
	if File_go_chromium_org_luci_swarming_proto_config_config_proto != nil {
		return
	}
	file_go_chromium_org_luci_swarming_proto_config_realms_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDesc), len(file_go_chromium_org_luci_swarming_proto_config_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_swarming_proto_config_config_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_swarming_proto_config_config_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_swarming_proto_config_config_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_swarming_proto_config_config_proto = out.File
	file_go_chromium_org_luci_swarming_proto_config_config_proto_goTypes = nil
	file_go_chromium_org_luci_swarming_proto_config_config_proto_depIdxs = nil
}
