cron:


### Tasks

- description: >-
    Catch TaskRunResult's where the bot died and failed sending updates.
  url: /internal/cron/important/scheduler/abort_bot_missing
  schedule: every 1 minutes
  target: backend

- description: Catch TaskToRunShards that are expired.
  url: /internal/cron/important/scheduler/abort_expired
  schedule: every 1 minutes
  target: backend

- description: Removes expired task dimension sets from the datastore.
  url: /internal/cron/cleanup/task_dimension_sets
  schedule: every 1 minutes
  target: backend

- description: Removes stale BotDimensionsMatches from the datastore.
  url: /internal/cron/cleanup/bot_dimensions_matches
  schedule: every 1 minutes
  target: backend

- description: Triggers TQ tasks to delete old TaskRequest entity groups
  url: /internal/cron/cleanup-old-tasks
  schedule: every 10 minutes
  target: default-go


### Named caches

- description: >-
    Update named caches cache sizes; this is important to ensure the bots have
    enough free disk space for cold named cache.
  url: /internal/cron/important/named_caches/update
  schedule: every 10 minutes synchronized
  target: backend

### External schedulers

- description: Cancel tasks at the behest of external scheduler.
  url: /internal/cron/important/external_scheduler/cancellations
  schedule: every 1 minutes
  target: backend

- description: Notify external scheduler based on its desired callbacks.
  url: /internal/cron/important/external_scheduler/get_callbacks
  schedule: every 1 minutes
  target: backend

### ereporter2

- description: ereporter2 cleanup
  url: /internal/cron/ereporter2/cleanup
  schedule: every 1 hours
  target: backend

- description: ereporter2 mail exception report
  url: /internal/cron/ereporter2/mail
  schedule: every 1 hours synchronized
  target: backend


### Monitoring

- description: Send ts_mon metrics
  url: /internal/cron/ts_mon/send
  schedule: every 1 minutes
  target: backend

- description: >-
    Efficiently visit all the bots. Any operation requiring some type of
    bot state aggregation should be done here.
  url: /internal/cron/report-bots
  schedule: every 1 minutes
  target: monitor

- description: Report Task running/pending metrics from go service
  url: /internal/cron/report-tasks
  schedule: every 1 minutes
  target: monitor


### Configs

- description: read luci-config configs
  # Handled by inclusion of components/config in app.yaml.
  url: /internal/cron/config/update
  schedule: every 1 minutes
  target: backend

- description: assemble bot groups configs
  url: /internal/cron/important/bot_groups_config
  schedule: every 1 minutes
  target: backend


### Crons handled by the Go portion.

- description: read server configs in Go
  url: /internal/cron/update-config
  schedule: every 1 minutes
  target: default-go

- description: Trigger task queues to send rows to to BigQuery
  url: /internal/cron/bq-export
  schedule: every 1 minutes
  target: exporter

### TQ sweep

- description: TQ sweeper
  url: /internal/tasks/c/sweep
  schedule: every 1 minutes
  target: default-go
