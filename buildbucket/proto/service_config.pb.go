// Copyright 2018 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Schemas for service configs.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: go.chromium.org/luci/buildbucket/proto/service_config.proto

package buildbucketpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A CustomMetricBase tells the base metric of a given custom metric.
//
// Buildbucket will determine what to report to and the annotation for
// a given CustomMetric, based on the specified metric base. Visit
// http://shortn/_6bc0aXIouD to find all the supported metric bases.
type CustomMetricBase int32

const (
	CustomMetricBase_CUSTOM_METRIC_BASE_UNSET CustomMetricBase = 0
	// Build event metrics.
	// A counter metric for Build creation.
	// Default metric field: None.
	CustomMetricBase_CUSTOM_METRIC_BASE_CREATED CustomMetricBase = 1
	//	A counter metric for Build start..
	//
	// Default metric field: None.
	CustomMetricBase_CUSTOM_METRIC_BASE_STARTED CustomMetricBase = 2
	// A counter metric for Build completion..
	// Default metric field: status.
	CustomMetricBase_CUSTOM_METRIC_BASE_COMPLETED CustomMetricBase = 3
	// The time elapsed from the build creation to the completion.
	// Default metric field: status.
	CustomMetricBase_CUSTOM_METRIC_BASE_CYCLE_DURATIONS CustomMetricBase = 4
	// The time elapsed from the build start to the completion.
	// Default metric field: status.
	CustomMetricBase_CUSTOM_METRIC_BASE_RUN_DURATIONS CustomMetricBase = 5
	// The time elapsed from the build creation to the start.
	// Default metric field: None.
	CustomMetricBase_CUSTOM_METRIC_BASE_SCHEDULING_DURATIONS CustomMetricBase = 6
	// Builder metrics.
	// The age of the oldest build that has been scheduled but not started yet
	// (aka age of the oldest pending build).
	// Default metric field: None.
	CustomMetricBase_CUSTOM_METRIC_BASE_MAX_AGE_SCHEDULED CustomMetricBase = 7
	// Number of Builds for each Build status.
	// Default metric field: status.
	CustomMetricBase_CUSTOM_METRIC_BASE_COUNT CustomMetricBase = 8
	// Number of consecutive failures since the last successful build.
	// Default metric field: status.
	CustomMetricBase_CUSTOM_METRIC_BASE_CONSECUTIVE_FAILURE_COUNT CustomMetricBase = 9
	// Age of builds for pending(may be extended to other statuses later) status.
	// Default metric field: status.
	CustomMetricBase_CUSTOM_METRIC_BASE_AGE CustomMetricBase = 10
)

// Enum value maps for CustomMetricBase.
var (
	CustomMetricBase_name = map[int32]string{
		0:  "CUSTOM_METRIC_BASE_UNSET",
		1:  "CUSTOM_METRIC_BASE_CREATED",
		2:  "CUSTOM_METRIC_BASE_STARTED",
		3:  "CUSTOM_METRIC_BASE_COMPLETED",
		4:  "CUSTOM_METRIC_BASE_CYCLE_DURATIONS",
		5:  "CUSTOM_METRIC_BASE_RUN_DURATIONS",
		6:  "CUSTOM_METRIC_BASE_SCHEDULING_DURATIONS",
		7:  "CUSTOM_METRIC_BASE_MAX_AGE_SCHEDULED",
		8:  "CUSTOM_METRIC_BASE_COUNT",
		9:  "CUSTOM_METRIC_BASE_CONSECUTIVE_FAILURE_COUNT",
		10: "CUSTOM_METRIC_BASE_AGE",
	}
	CustomMetricBase_value = map[string]int32{
		"CUSTOM_METRIC_BASE_UNSET":                     0,
		"CUSTOM_METRIC_BASE_CREATED":                   1,
		"CUSTOM_METRIC_BASE_STARTED":                   2,
		"CUSTOM_METRIC_BASE_COMPLETED":                 3,
		"CUSTOM_METRIC_BASE_CYCLE_DURATIONS":           4,
		"CUSTOM_METRIC_BASE_RUN_DURATIONS":             5,
		"CUSTOM_METRIC_BASE_SCHEDULING_DURATIONS":      6,
		"CUSTOM_METRIC_BASE_MAX_AGE_SCHEDULED":         7,
		"CUSTOM_METRIC_BASE_COUNT":                     8,
		"CUSTOM_METRIC_BASE_CONSECUTIVE_FAILURE_COUNT": 9,
		"CUSTOM_METRIC_BASE_AGE":                       10,
	}
)

func (x CustomMetricBase) Enum() *CustomMetricBase {
	p := new(CustomMetricBase)
	*p = x
	return p
}

func (x CustomMetricBase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomMetricBase) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_enumTypes[0].Descriptor()
}

func (CustomMetricBase) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_enumTypes[0]
}

func (x CustomMetricBase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CustomMetricBase.Descriptor instead.
func (CustomMetricBase) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{0}
}

// Schema of settings.cfg file, a service config.
type SettingsCfg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Swarmbucket settings.
	Swarming   *SwarmingSettings   `protobuf:"bytes,1,opt,name=swarming,proto3" json:"swarming,omitempty"`
	Logdog     *LogDogSettings     `protobuf:"bytes,2,opt,name=logdog,proto3" json:"logdog,omitempty"`
	Resultdb   *ResultDBSettings   `protobuf:"bytes,4,opt,name=resultdb,proto3" json:"resultdb,omitempty"`
	Experiment *ExperimentSettings `protobuf:"bytes,5,opt,name=experiment,proto3" json:"experiment,omitempty"`
	Cipd       *CipdSettings       `protobuf:"bytes,6,opt,name=cipd,proto3" json:"cipd,omitempty"`
	// List of Gerrit hosts to force git authentication for.
	//
	// By default public hosts are accessed anonymously, and the anonymous access
	// has very low quota. Context needs to know all such hostnames in advance to
	// be able to force authenticated access to them.
	KnownPublicGerritHosts []string `protobuf:"bytes,3,rep,name=known_public_gerrit_hosts,json=knownPublicGerritHosts,proto3" json:"known_public_gerrit_hosts,omitempty"`
	// List of known backend configurations.
	Backends []*BackendSetting `protobuf:"bytes,7,rep,name=backends,proto3" json:"backends,omitempty"`
	// A swarming_host -> backend_target map.
	// It's used during the raw swarming to swarming based backend migration to
	// derive a backend config from swarming related configs.
	// So we could control the migration process behind the scene.
	SwarmingBackends map[string]string `protobuf:"bytes,8,rep,name=swarming_backends,json=swarmingBackends,proto3" json:"swarming_backends,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Custom metrics.
	//
	// Global config to register custom build metrics that more than one LUCI
	// projects may report data to.
	// Therefore, the metric names must be unique globally.
	CustomMetrics []*CustomMetric `protobuf:"bytes,9,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingsCfg) Reset() {
	*x = SettingsCfg{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingsCfg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingsCfg) ProtoMessage() {}

func (x *SettingsCfg) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingsCfg.ProtoReflect.Descriptor instead.
func (*SettingsCfg) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{0}
}

func (x *SettingsCfg) GetSwarming() *SwarmingSettings {
	if x != nil {
		return x.Swarming
	}
	return nil
}

func (x *SettingsCfg) GetLogdog() *LogDogSettings {
	if x != nil {
		return x.Logdog
	}
	return nil
}

func (x *SettingsCfg) GetResultdb() *ResultDBSettings {
	if x != nil {
		return x.Resultdb
	}
	return nil
}

func (x *SettingsCfg) GetExperiment() *ExperimentSettings {
	if x != nil {
		return x.Experiment
	}
	return nil
}

func (x *SettingsCfg) GetCipd() *CipdSettings {
	if x != nil {
		return x.Cipd
	}
	return nil
}

func (x *SettingsCfg) GetKnownPublicGerritHosts() []string {
	if x != nil {
		return x.KnownPublicGerritHosts
	}
	return nil
}

func (x *SettingsCfg) GetBackends() []*BackendSetting {
	if x != nil {
		return x.Backends
	}
	return nil
}

func (x *SettingsCfg) GetSwarmingBackends() map[string]string {
	if x != nil {
		return x.SwarmingBackends
	}
	return nil
}

func (x *SettingsCfg) GetCustomMetrics() []*CustomMetric {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

// Backend setting.
type BackendSetting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Target backend. e.g. "swarming://chromium-swarm".
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// hostname for the target backend. e.g. chromium-swarm.appspot.com
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The associated UpdateBuildTask pubsub id for this task backend.
	// This must be set in order for buildbucket to recieve task updates and send
	// a pubsup topic that the task backend can use to send updates to.
	// This id is provided by the backend owner, but added to buildbucket's service
	// config by the buildbucket team.
	// Buildbucket will subscribe to the pubsub subscription, which itself is
	// subscribed to the topic that task backends send messages to.
	// i.e.
	//
	//	For this pubsub subscription:
	//	    project/cr-buildbucket/subscriptions/chormium-swarm-backend
	//	and topic:
	//	    project/cr-buildbucket/topics/chormium-swarm-backend
	//	The pubsub_id would be:
	//	    chormium-swarm-backend
	//
	// DEPRECATED: please set into `full_mode` field.
	//
	// Deprecated: Marked as deprecated in go.chromium.org/luci/buildbucket/proto/service_config.proto.
	PubsubId string `protobuf:"bytes,3,opt,name=pubsub_id,json=pubsubId,proto3" json:"pubsub_id,omitempty"`
	// DEPRECATED: please set into `full_mode` field.
	//
	// Deprecated: Marked as deprecated in go.chromium.org/luci/buildbucket/proto/service_config.proto.
	BuildSyncSetting *BackendSetting_BuildSyncSetting `protobuf:"bytes,4,opt,name=build_sync_setting,json=buildSyncSetting,proto3" json:"build_sync_setting,omitempty"`
	// The mode of the backend.
	//
	// Types that are valid to be assigned to Mode:
	//
	//	*BackendSetting_FullMode_
	//	*BackendSetting_LiteMode_
	Mode isBackendSetting_Mode `protobuf_oneof:"Mode"`
	// Maximum time for Buildbucket to retry creating a task.
	//
	// Default timeout is 10 minutes.
	//
	// If the timeout is reached, the build is marked as INFRA_FAILURE status.
	TaskCreatingTimeout *durationpb.Duration `protobuf:"bytes,7,opt,name=task_creating_timeout,json=taskCreatingTimeout,proto3" json:"task_creating_timeout,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BackendSetting) Reset() {
	*x = BackendSetting{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackendSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendSetting) ProtoMessage() {}

func (x *BackendSetting) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendSetting.ProtoReflect.Descriptor instead.
func (*BackendSetting) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{1}
}

func (x *BackendSetting) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *BackendSetting) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// Deprecated: Marked as deprecated in go.chromium.org/luci/buildbucket/proto/service_config.proto.
func (x *BackendSetting) GetPubsubId() string {
	if x != nil {
		return x.PubsubId
	}
	return ""
}

// Deprecated: Marked as deprecated in go.chromium.org/luci/buildbucket/proto/service_config.proto.
func (x *BackendSetting) GetBuildSyncSetting() *BackendSetting_BuildSyncSetting {
	if x != nil {
		return x.BuildSyncSetting
	}
	return nil
}

func (x *BackendSetting) GetMode() isBackendSetting_Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *BackendSetting) GetFullMode() *BackendSetting_FullMode {
	if x != nil {
		if x, ok := x.Mode.(*BackendSetting_FullMode_); ok {
			return x.FullMode
		}
	}
	return nil
}

func (x *BackendSetting) GetLiteMode() *BackendSetting_LiteMode {
	if x != nil {
		if x, ok := x.Mode.(*BackendSetting_LiteMode_); ok {
			return x.LiteMode
		}
	}
	return nil
}

func (x *BackendSetting) GetTaskCreatingTimeout() *durationpb.Duration {
	if x != nil {
		return x.TaskCreatingTimeout
	}
	return nil
}

type isBackendSetting_Mode interface {
	isBackendSetting_Mode()
}

type BackendSetting_FullMode_ struct {
	FullMode *BackendSetting_FullMode `protobuf:"bytes,5,opt,name=full_mode,json=fullMode,proto3,oneof"`
}

type BackendSetting_LiteMode_ struct {
	LiteMode *BackendSetting_LiteMode `protobuf:"bytes,6,opt,name=lite_mode,json=liteMode,proto3,oneof"`
}

func (*BackendSetting_FullMode_) isBackendSetting_Mode() {}

func (*BackendSetting_LiteMode_) isBackendSetting_Mode() {}

// Swarmbucket settings.
type SwarmingSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Swarmbucket build URLs will point to this Milo instance.
	MiloHostname string `protobuf:"bytes,2,opt,name=milo_hostname,json=miloHostname,proto3" json:"milo_hostname,omitempty"`
	// These caches are available to all builders implicitly.
	// A builder may override a cache specified here.
	GlobalCaches []*BuilderConfig_CacheEntry `protobuf:"bytes,4,rep,name=global_caches,json=globalCaches,proto3" json:"global_caches,omitempty"`
	// Packages available to the user executable in $PATH.
	// Installed in "{TASK_RUN_DIR}/cipd_bin_packages".
	// "{TASK_RUN_DIR}/cipd_bin_packages" and
	// "{TASK_RUN_DIR}/cipd_bin_packages/bin" are prepended to $PATH.
	UserPackages []*SwarmingSettings_Package `protobuf:"bytes,5,rep,name=user_packages,json=userPackages,proto3" json:"user_packages,omitempty"`
	// Package of buildbucket agent,
	// https://chromium.googlesource.com/infra/luci/luci-go/+/HEAD/buildbucket/cmd/bbagent
	// used to run LUCI executables.
	BbagentPackage *SwarmingSettings_Package `protobuf:"bytes,8,opt,name=bbagent_package,json=bbagentPackage,proto3" json:"bbagent_package,omitempty"`
	// CIPD package of kitchen binary. DEPRECATED. TODO(nodir): remove.
	KitchenPackage *SwarmingSettings_Package `protobuf:"bytes,7,opt,name=kitchen_package,json=kitchenPackage,proto3" json:"kitchen_package,omitempty"`
	// Package of alternative buildbucket agent sources.
	// They should only be used in certain situations (i.e. in an experiment),
	// so they should have constraints on either omit_on_experiment
	// or include_on_experiment.
	AlternativeAgentPackages []*SwarmingSettings_Package `protobuf:"bytes,9,rep,name=alternative_agent_packages,json=alternativeAgentPackages,proto3" json:"alternative_agent_packages,omitempty"`
	// Packages for bbagent to use.
	// Installed in "{TASK_RUN_DIR}/bbagent_utility_packages".
	BbagentUtilityPackages []*SwarmingSettings_Package `protobuf:"bytes,10,rep,name=bbagent_utility_packages,json=bbagentUtilityPackages,proto3" json:"bbagent_utility_packages,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SwarmingSettings) Reset() {
	*x = SwarmingSettings{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwarmingSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwarmingSettings) ProtoMessage() {}

func (x *SwarmingSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwarmingSettings.ProtoReflect.Descriptor instead.
func (*SwarmingSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{2}
}

func (x *SwarmingSettings) GetMiloHostname() string {
	if x != nil {
		return x.MiloHostname
	}
	return ""
}

func (x *SwarmingSettings) GetGlobalCaches() []*BuilderConfig_CacheEntry {
	if x != nil {
		return x.GlobalCaches
	}
	return nil
}

func (x *SwarmingSettings) GetUserPackages() []*SwarmingSettings_Package {
	if x != nil {
		return x.UserPackages
	}
	return nil
}

func (x *SwarmingSettings) GetBbagentPackage() *SwarmingSettings_Package {
	if x != nil {
		return x.BbagentPackage
	}
	return nil
}

func (x *SwarmingSettings) GetKitchenPackage() *SwarmingSettings_Package {
	if x != nil {
		return x.KitchenPackage
	}
	return nil
}

func (x *SwarmingSettings) GetAlternativeAgentPackages() []*SwarmingSettings_Package {
	if x != nil {
		return x.AlternativeAgentPackages
	}
	return nil
}

func (x *SwarmingSettings) GetBbagentUtilityPackages() []*SwarmingSettings_Package {
	if x != nil {
		return x.BbagentUtilityPackages
	}
	return nil
}

type LogDogSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Hostname of the LogDog instance to use, e.g. "logs.chromium.org".
	Hostname      string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogDogSettings) Reset() {
	*x = LogDogSettings{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogDogSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogDogSettings) ProtoMessage() {}

func (x *LogDogSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogDogSettings.ProtoReflect.Descriptor instead.
func (*LogDogSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{3}
}

func (x *LogDogSettings) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

// ExperimentSettings controls all well-known global experiment values.
type ExperimentSettings struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Experiments   []*ExperimentSettings_Experiment `protobuf:"bytes,1,rep,name=experiments,proto3" json:"experiments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExperimentSettings) Reset() {
	*x = ExperimentSettings{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentSettings) ProtoMessage() {}

func (x *ExperimentSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentSettings.ProtoReflect.Descriptor instead.
func (*ExperimentSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{4}
}

func (x *ExperimentSettings) GetExperiments() []*ExperimentSettings_Experiment {
	if x != nil {
		return x.Experiments
	}
	return nil
}

// A predicate for a builder.
type BuilderPredicate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// OR-connected list of regular expressions for a string
	// "{project}/{bucket}/{builder}".
	// Each regex is wrapped in ^ and $ automatically.
	// Examples:
	//
	//	# All builders in "chromium" project
	//	regex: "chromium/.+"
	//	# A specific builder.
	//	regex: "infra/ci/infra-continuous-trusty-64"
	//
	// Defaults to [".*"].
	Regex []string `protobuf:"bytes,1,rep,name=regex,proto3" json:"regex,omitempty"`
	// Like regex field, but negation. Negation always wins.
	RegexExclude  []string `protobuf:"bytes,2,rep,name=regex_exclude,json=regexExclude,proto3" json:"regex_exclude,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuilderPredicate) Reset() {
	*x = BuilderPredicate{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuilderPredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuilderPredicate) ProtoMessage() {}

func (x *BuilderPredicate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuilderPredicate.ProtoReflect.Descriptor instead.
func (*BuilderPredicate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{5}
}

func (x *BuilderPredicate) GetRegex() []string {
	if x != nil {
		return x.Regex
	}
	return nil
}

func (x *BuilderPredicate) GetRegexExclude() []string {
	if x != nil {
		return x.RegexExclude
	}
	return nil
}

type ResultDBSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Hostname of the ResultDB instance to use, e.g. "results.api.cr.dev".
	Hostname      string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResultDBSettings) Reset() {
	*x = ResultDBSettings{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResultDBSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultDBSettings) ProtoMessage() {}

func (x *ResultDBSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultDBSettings.ProtoReflect.Descriptor instead.
func (*ResultDBSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{6}
}

func (x *ResultDBSettings) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type CipdSettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// default CIPD server to use for this setting configuration,
	// e.g. "chrome-infra-packages.appspot.com".
	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	// Source of the cipd package itself
	Source        *CipdSettings_Source `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CipdSettings) Reset() {
	*x = CipdSettings{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CipdSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CipdSettings) ProtoMessage() {}

func (x *CipdSettings) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CipdSettings.ProtoReflect.Descriptor instead.
func (*CipdSettings) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{7}
}

func (x *CipdSettings) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *CipdSettings) GetSource() *CipdSettings_Source {
	if x != nil {
		return x.Source
	}
	return nil
}

// CustomMetric is a metric object that collects a series of data
// exported by a given metric class.
//
// All metrics are using luci.Builder schema at https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/buildbucket/metrics/builder.go;l=26-48;drc=b77d0c2bd4bbb536f8e349e993e3ca18818c51e7.
//
// Builders can then reference a custom metric by name to report their build
// metrics.
//
// Note: if you ever want to remove a custom metric, the best practice is to
// remove its references from builders first, then remove it from the service
// config. Otherwise any change to a builder config refers to this custom metric
// would fail validation (for using an unregistered custom metric). But this
// is not a hard error for build creation or event reporting: missing metric
// would just be silently ignored.
type CustomMetric struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the metric.
	//
	// Each builder that uses this metric needs to add a CustomMetricDefinition entry in
	// their config, with the same name as here.
	//
	// Must be unique globally across all LUCI projects.
	// Must conform to ^(/[a-zA-Z0-9_-]+)+$ (See
	// https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/common/tsmon/registry/registry.go;l=33;drc=b77d0c2bd4bbb536f8e349e993e3ca18818c51e7).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the metric.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Metric field names in addtion to the default ones.
	//
	// Default metric fields can be found in CustomMetricBase comments.
	//
	// Each builder that uses this metric must specify how to populate each
	// field's value in their configurations, see CustomMetricDefinition.Fields.
	//
	// Must not have duplicates.
	//
	// Custom builder metric cannot have any custom fields in addition to their
	// defaults, i.e. if it's one of
	// * CUSTOM_METRIC_BASE_MAX_AGE_SCHEDULED
	// * CUSTOM_METRIC_BASE_COUNT
	// * CUSTOM_METRIC_BASE_CONSECUTIVE_FAILURE_COUNT
	//
	// The value type of all metric fields is always string.
	// Each Field must conform to ^[A-Za-z_][A-Za-z0-9_]*$ (See
	// https://source.chromium.org/chromium/infra/infra/+/main:go/src/go.chromium.org/luci/common/tsmon/registry/registry.go;l=34;drc=b77d0c2bd4bbb536f8e349e993e3ca18818c51e7).
	//
	// Note that the possible values of each field should be bounded.
	// So below fields should not be included:
	// * build id
	// * any timestamp (e.g. build's creation time)
	// * any markdown strings (e.g. build's summary_markdown)
	// * any log strings (e.g. build's output logs)
	// * any PII
	// * build's gitiles commit hash
	// * build's gerrit change number
	// * etc
	ExtraFields []string `protobuf:"bytes,3,rep,name=extra_fields,json=extraFields,proto3" json:"extra_fields,omitempty"`
	// Metric class determines which data to be collected and reported
	// to the metric.
	//
	// Types that are valid to be assigned to Class:
	//
	//	*CustomMetric_MetricBase
	Class         isCustomMetric_Class `protobuf_oneof:"class"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CustomMetric) Reset() {
	*x = CustomMetric{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMetric) ProtoMessage() {}

func (x *CustomMetric) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMetric.ProtoReflect.Descriptor instead.
func (*CustomMetric) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{8}
}

func (x *CustomMetric) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomMetric) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CustomMetric) GetExtraFields() []string {
	if x != nil {
		return x.ExtraFields
	}
	return nil
}

func (x *CustomMetric) GetClass() isCustomMetric_Class {
	if x != nil {
		return x.Class
	}
	return nil
}

func (x *CustomMetric) GetMetricBase() CustomMetricBase {
	if x != nil {
		if x, ok := x.Class.(*CustomMetric_MetricBase); ok {
			return x.MetricBase
		}
	}
	return CustomMetricBase_CUSTOM_METRIC_BASE_UNSET
}

type isCustomMetric_Class interface {
	isCustomMetric_Class()
}

type CustomMetric_MetricBase struct {
	MetricBase CustomMetricBase `protobuf:"varint,4,opt,name=metric_base,json=metricBase,proto3,enum=buildbucket.CustomMetricBase,oneof"`
}

func (*CustomMetric_MetricBase) isCustomMetric_Class() {}

// Setting for the fetch tasks cron job.
type BackendSetting_BuildSyncSetting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of shards for Buildbucket to save the update_time of the builds on
	// this backend.
	//
	// In Build model, we need to keep an index on the build update time in order
	// to get all builds it haven't heard for a while.
	// To avoid hotspotting, a new computed property NextBackendSyncTime is added
	// for indexing, with format
	// <backend_target>--<project>--<shard index>--<update_time>.
	//
	// Because some backends serves significantly larger amount of builds than
	// other backends, we need different number of shards for each backend.
	//
	// Must be greater than or equal to 0, while 0 effectively means 1 shard.
	//
	// Note: when updating this field, the new number MUST be greater than the
	// old one.
	Shards int32 `protobuf:"varint,1,opt,name=shards,proto3" json:"shards,omitempty"`
	// How often should a incomplete build get updated. If Buildbucket doesn't
	// hear from this build for sync_interval, it will sync it with its backend
	// task.
	//
	// Buildbucket runs a cron job to find builds to sync every minute, so
	// sync_interval_seconds must be greater than or equal to 60.
	//
	// If unset, a default threshold of 5min will be applied.
	SyncIntervalSeconds int32 `protobuf:"varint,2,opt,name=sync_interval_seconds,json=syncIntervalSeconds,proto3" json:"sync_interval_seconds,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BackendSetting_BuildSyncSetting) Reset() {
	*x = BackendSetting_BuildSyncSetting{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackendSetting_BuildSyncSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendSetting_BuildSyncSetting) ProtoMessage() {}

func (x *BackendSetting_BuildSyncSetting) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendSetting_BuildSyncSetting.ProtoReflect.Descriptor instead.
func (*BackendSetting_BuildSyncSetting) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{1, 0}
}

func (x *BackendSetting_BuildSyncSetting) GetShards() int32 {
	if x != nil {
		return x.Shards
	}
	return 0
}

func (x *BackendSetting_BuildSyncSetting) GetSyncIntervalSeconds() int32 {
	if x != nil {
		return x.SyncIntervalSeconds
	}
	return 0
}

// The corresponding backend should be a full-featured `TaskBackend`
// implementation.
type BackendSetting_FullMode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The associated UpdateBuildTask pubsub id for this task backend.
	// This must be set in order for buildbucket to recieve task updates and send
	// a pubsup topic that the task backend can use to send updates to.
	// This id is provided by the backend owner, but added to buildbucket's service
	// config by the buildbucket team.
	// Buildbucket will subscribe to the pubsub subscription, which itself is
	// subscribed to the topic that task backends send messages to.
	// i.e.
	//
	//	For this pubsub subscription:
	//	    project/cr-buildbucket/subscriptions/chormium-swarm-backend
	//	and topic:
	//	    project/cr-buildbucket/topics/chormium-swarm-backend
	//	The pubsub_id would be:
	//	    chormium-swarm-backend
	PubsubId string `protobuf:"bytes,1,opt,name=pubsub_id,json=pubsubId,proto3" json:"pubsub_id,omitempty"`
	// The setting for syncing backend tasks.
	BuildSyncSetting *BackendSetting_BuildSyncSetting `protobuf:"bytes,2,opt,name=build_sync_setting,json=buildSyncSetting,proto3" json:"build_sync_setting,omitempty"`
	// If set to true, visiting "cr-buildbucket.appspot.com/build/<build_id>"
	// will be redirected to the corresponding task page instead of the Milo
	// build page.
	//
	// To visit the Milo build page with this configuration on, please use
	// "ci.chromium.org/b/<build_id>".
	RedirectToTaskPage bool `protobuf:"varint,3,opt,name=redirect_to_task_page,json=redirectToTaskPage,proto3" json:"redirect_to_task_page,omitempty"`
	// If set to true, Buildbucket will set the final build status to SUCCESS
	// if the backend task is SUCCESS, regardless the build's output status.
	//
	// For standard backends like Swarming, the build should always finish
	// before the backend task - unless the task crashes or being killed.
	// So in the case that build output status is not ended, Buildbucket
	// sets the build's final status with the task's status -if it ends
	// with a non SUCCESS status. But if the task has
	// ended with a SUCCESS status while the build is still running, Buildbucket
	// considers that impossible and sets the build to INFRA_FAILURE.
	//
	// But for other backends e.g. Skia, we cannot have the assumption that
	// build always finishes before task. And to them a successful task always
	// means a successful build.
	SucceedBuildIfTaskIsSucceeded bool `protobuf:"varint,4,opt,name=succeed_build_if_task_is_succeeded,json=succeedBuildIfTaskIsSucceeded,proto3" json:"succeed_build_if_task_is_succeeded,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *BackendSetting_FullMode) Reset() {
	*x = BackendSetting_FullMode{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackendSetting_FullMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendSetting_FullMode) ProtoMessage() {}

func (x *BackendSetting_FullMode) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendSetting_FullMode.ProtoReflect.Descriptor instead.
func (*BackendSetting_FullMode) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{1, 1}
}

func (x *BackendSetting_FullMode) GetPubsubId() string {
	if x != nil {
		return x.PubsubId
	}
	return ""
}

func (x *BackendSetting_FullMode) GetBuildSyncSetting() *BackendSetting_BuildSyncSetting {
	if x != nil {
		return x.BuildSyncSetting
	}
	return nil
}

func (x *BackendSetting_FullMode) GetRedirectToTaskPage() bool {
	if x != nil {
		return x.RedirectToTaskPage
	}
	return false
}

func (x *BackendSetting_FullMode) GetSucceedBuildIfTaskIsSucceeded() bool {
	if x != nil {
		return x.SucceedBuildIfTaskIsSucceeded
	}
	return false
}

// The corresponding backend should be a `TaskBackendLite` implementation,
// where it doesn't support the task update and sync.
type BackendSetting_LiteMode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackendSetting_LiteMode) Reset() {
	*x = BackendSetting_LiteMode{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackendSetting_LiteMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendSetting_LiteMode) ProtoMessage() {}

func (x *BackendSetting_LiteMode) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendSetting_LiteMode.ProtoReflect.Descriptor instead.
func (*BackendSetting_LiteMode) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{1, 2}
}

// CIPD package. Does not specify installation path.
type SwarmingSettings_Package struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CIPD package name, e.g. "infra/python/cpython/${platform}"
	PackageName string `protobuf:"bytes,1,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// CIPD instance version, e.g. "version:2.7.15.chromium14".
	// Used for non-canary builds.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// CIPD instance version for canary builds.
	// Defaults to version.
	VersionCanary string `protobuf:"bytes,3,opt,name=version_canary,json=versionCanary,proto3" json:"version_canary,omitempty"`
	// Include in builders matching the predicate.
	Builders *BuilderPredicate `protobuf:"bytes,4,opt,name=builders,proto3" json:"builders,omitempty"`
	// Subdirectory to install the package into, relative to the installation
	// root. Useful if installing two packages at the same root would conflict.
	Subdir string `protobuf:"bytes,5,opt,name=subdir,proto3" json:"subdir,omitempty"`
	// Omit this package from the build having any of these experiments.
	OmitOnExperiment []string `protobuf:"bytes,6,rep,name=omit_on_experiment,json=omitOnExperiment,proto3" json:"omit_on_experiment,omitempty"`
	// If non-empty, include this package only on builds which have any of these
	// experiments set. `omit_on_experiment` takes precedence if an experiment
	// is in both of these lists.
	IncludeOnExperiment []string `protobuf:"bytes,7,rep,name=include_on_experiment,json=includeOnExperiment,proto3" json:"include_on_experiment,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SwarmingSettings_Package) Reset() {
	*x = SwarmingSettings_Package{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwarmingSettings_Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwarmingSettings_Package) ProtoMessage() {}

func (x *SwarmingSettings_Package) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwarmingSettings_Package.ProtoReflect.Descriptor instead.
func (*SwarmingSettings_Package) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SwarmingSettings_Package) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *SwarmingSettings_Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SwarmingSettings_Package) GetVersionCanary() string {
	if x != nil {
		return x.VersionCanary
	}
	return ""
}

func (x *SwarmingSettings_Package) GetBuilders() *BuilderPredicate {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *SwarmingSettings_Package) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

func (x *SwarmingSettings_Package) GetOmitOnExperiment() []string {
	if x != nil {
		return x.OmitOnExperiment
	}
	return nil
}

func (x *SwarmingSettings_Package) GetIncludeOnExperiment() []string {
	if x != nil {
		return x.IncludeOnExperiment
	}
	return nil
}

type ExperimentSettings_Experiment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the global experiment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The default_value (% chance, 0 - 100) of the global experiment.
	//
	// This must be greater than or equal to minimum_value.
	DefaultValue int32 `protobuf:"varint,2,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	// The minimum_value (% chance, 0 - 100) of the global experiment.
	//
	// This will override lower Builder-defined experiment values.
	MinimumValue int32 `protobuf:"varint,3,opt,name=minimum_value,json=minimumValue,proto3" json:"minimum_value,omitempty"`
	// Allows temporary exclusion of builders from the experiment.
	// Each line here should have a corresponding bug to remove the exclusion.
	//
	// If a builder is excluded from this experiment, it acts as though
	// default_value and minimum_value are both 0.
	Builders *BuilderPredicate `protobuf:"bytes,4,opt,name=builders,proto3" json:"builders,omitempty"`
	// If this is true it means that the experiment has no effect, and is safe
	// to stop setting in user configs. Additionally, Buildbucket will stop
	// setting this experiment negatively on Builds.
	//
	// When removing a global experiment, set this to true rather than removing
	// the experiment entirely, because Buildbucket still needs this to permit
	// (and ignore) user configs which still mention reserved experiments (e.g.
	// if we have "luci.something" which someone explicitly specifies, and we
	// ramp it to 100% and remove it from the global spec, Buildbucket will
	// start complaining that users are using a reserved experiment name, rather
	// than just ignoring it).
	//
	// If inactive experiments appear in user configurations, it may cause
	// warnings to be printed e.g. at config validation time and/or on the LUCI
	// UI, etc.
	Inactive      bool `protobuf:"varint,5,opt,name=inactive,proto3" json:"inactive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExperimentSettings_Experiment) Reset() {
	*x = ExperimentSettings_Experiment{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperimentSettings_Experiment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperimentSettings_Experiment) ProtoMessage() {}

func (x *ExperimentSettings_Experiment) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperimentSettings_Experiment.ProtoReflect.Descriptor instead.
func (*ExperimentSettings_Experiment) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ExperimentSettings_Experiment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExperimentSettings_Experiment) GetDefaultValue() int32 {
	if x != nil {
		return x.DefaultValue
	}
	return 0
}

func (x *ExperimentSettings_Experiment) GetMinimumValue() int32 {
	if x != nil {
		return x.MinimumValue
	}
	return 0
}

func (x *ExperimentSettings_Experiment) GetBuilders() *BuilderPredicate {
	if x != nil {
		return x.Builders
	}
	return nil
}

func (x *ExperimentSettings_Experiment) GetInactive() bool {
	if x != nil {
		return x.Inactive
	}
	return false
}

type CipdSettings_Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CIPD package name, e.g. "infra/tools/cipd/${platform}"
	PackageName string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	// CIPD instance version, e.g. "L34sd94gsdgs4gsd" or some hash.
	// Used for non-canary builds.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// CIPD instance version for canary builds.
	// Defaults to version.
	VersionCanary string `protobuf:"bytes,4,opt,name=version_canary,json=versionCanary,proto3" json:"version_canary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CipdSettings_Source) Reset() {
	*x = CipdSettings_Source{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CipdSettings_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CipdSettings_Source) ProtoMessage() {}

func (x *CipdSettings_Source) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CipdSettings_Source.ProtoReflect.Descriptor instead.
func (*CipdSettings_Source) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CipdSettings_Source) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *CipdSettings_Source) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CipdSettings_Source) GetVersionCanary() string {
	if x != nil {
		return x.VersionCanary
	}
	return ""
}

var File_go_chromium_org_luci_buildbucket_proto_service_config_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDesc = "" +
	"\n" +
	";go.chromium.org/luci/buildbucket/proto/service_config.proto\x12\vbuildbucket\x1a\x1egoogle/protobuf/duration.proto\x1a;go.chromium.org/luci/buildbucket/proto/project_config.proto\"\x80\x05\n" +
	"\vSettingsCfg\x129\n" +
	"\bswarming\x18\x01 \x01(\v2\x1d.buildbucket.SwarmingSettingsR\bswarming\x123\n" +
	"\x06logdog\x18\x02 \x01(\v2\x1b.buildbucket.LogDogSettingsR\x06logdog\x129\n" +
	"\bresultdb\x18\x04 \x01(\v2\x1d.buildbucket.ResultDBSettingsR\bresultdb\x12?\n" +
	"\n" +
	"experiment\x18\x05 \x01(\v2\x1f.buildbucket.ExperimentSettingsR\n" +
	"experiment\x12-\n" +
	"\x04cipd\x18\x06 \x01(\v2\x19.buildbucket.CipdSettingsR\x04cipd\x129\n" +
	"\x19known_public_gerrit_hosts\x18\x03 \x03(\tR\x16knownPublicGerritHosts\x127\n" +
	"\bbackends\x18\a \x03(\v2\x1b.buildbucket.BackendSettingR\bbackends\x12[\n" +
	"\x11swarming_backends\x18\b \x03(\v2..buildbucket.SettingsCfg.SwarmingBackendsEntryR\x10swarmingBackends\x12@\n" +
	"\x0ecustom_metrics\x18\t \x03(\v2\x19.buildbucket.CustomMetricR\rcustomMetrics\x1aC\n" +
	"\x15SwarmingBackendsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x96\x06\n" +
	"\x0eBackendSetting\x12\x16\n" +
	"\x06target\x18\x01 \x01(\tR\x06target\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1f\n" +
	"\tpubsub_id\x18\x03 \x01(\tB\x02\x18\x01R\bpubsubId\x12^\n" +
	"\x12build_sync_setting\x18\x04 \x01(\v2,.buildbucket.BackendSetting.BuildSyncSettingB\x02\x18\x01R\x10buildSyncSetting\x12C\n" +
	"\tfull_mode\x18\x05 \x01(\v2$.buildbucket.BackendSetting.FullModeH\x00R\bfullMode\x12C\n" +
	"\tlite_mode\x18\x06 \x01(\v2$.buildbucket.BackendSetting.LiteModeH\x00R\bliteMode\x12M\n" +
	"\x15task_creating_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationR\x13taskCreatingTimeout\x1a^\n" +
	"\x10BuildSyncSetting\x12\x16\n" +
	"\x06shards\x18\x01 \x01(\x05R\x06shards\x122\n" +
	"\x15sync_interval_seconds\x18\x02 \x01(\x05R\x13syncIntervalSeconds\x1a\x81\x02\n" +
	"\bFullMode\x12\x1b\n" +
	"\tpubsub_id\x18\x01 \x01(\tR\bpubsubId\x12Z\n" +
	"\x12build_sync_setting\x18\x02 \x01(\v2,.buildbucket.BackendSetting.BuildSyncSettingR\x10buildSyncSetting\x121\n" +
	"\x15redirect_to_task_page\x18\x03 \x01(\bR\x12redirectToTaskPage\x12I\n" +
	"\"succeed_build_if_task_is_succeeded\x18\x04 \x01(\bR\x1dsucceedBuildIfTaskIsSucceeded\x1a\n" +
	"\n" +
	"\bLiteModeB\x06\n" +
	"\x04Mode\"\xe6\x06\n" +
	"\x10SwarmingSettings\x12#\n" +
	"\rmilo_hostname\x18\x02 \x01(\tR\fmiloHostname\x12J\n" +
	"\rglobal_caches\x18\x04 \x03(\v2%.buildbucket.BuilderConfig.CacheEntryR\fglobalCaches\x12J\n" +
	"\ruser_packages\x18\x05 \x03(\v2%.buildbucket.SwarmingSettings.PackageR\fuserPackages\x12N\n" +
	"\x0fbbagent_package\x18\b \x01(\v2%.buildbucket.SwarmingSettings.PackageR\x0ebbagentPackage\x12N\n" +
	"\x0fkitchen_package\x18\a \x01(\v2%.buildbucket.SwarmingSettings.PackageR\x0ekitchenPackage\x12c\n" +
	"\x1aalternative_agent_packages\x18\t \x03(\v2%.buildbucket.SwarmingSettings.PackageR\x18alternativeAgentPackages\x12_\n" +
	"\x18bbagent_utility_packages\x18\n" +
	" \x03(\v2%.buildbucket.SwarmingSettings.PackageR\x16bbagentUtilityPackages\x1a\xa2\x02\n" +
	"\aPackage\x12!\n" +
	"\fpackage_name\x18\x01 \x01(\tR\vpackageName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12%\n" +
	"\x0eversion_canary\x18\x03 \x01(\tR\rversionCanary\x129\n" +
	"\bbuilders\x18\x04 \x01(\v2\x1d.buildbucket.BuilderPredicateR\bbuilders\x12\x16\n" +
	"\x06subdir\x18\x05 \x01(\tR\x06subdir\x12,\n" +
	"\x12omit_on_experiment\x18\x06 \x03(\tR\x10omitOnExperiment\x122\n" +
	"\x15include_on_experiment\x18\a \x03(\tR\x13includeOnExperimentJ\x04\b\x01\x10\x02J\x04\b\x06\x10\a\",\n" +
	"\x0eLogDogSettings\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\"\xa6\x02\n" +
	"\x12ExperimentSettings\x12L\n" +
	"\vexperiments\x18\x01 \x03(\v2*.buildbucket.ExperimentSettings.ExperimentR\vexperiments\x1a\xc1\x01\n" +
	"\n" +
	"Experiment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12#\n" +
	"\rdefault_value\x18\x02 \x01(\x05R\fdefaultValue\x12#\n" +
	"\rminimum_value\x18\x03 \x01(\x05R\fminimumValue\x129\n" +
	"\bbuilders\x18\x04 \x01(\v2\x1d.buildbucket.BuilderPredicateR\bbuilders\x12\x1a\n" +
	"\binactive\x18\x05 \x01(\bR\binactive\"M\n" +
	"\x10BuilderPredicate\x12\x14\n" +
	"\x05regex\x18\x01 \x03(\tR\x05regex\x12#\n" +
	"\rregex_exclude\x18\x02 \x03(\tR\fregexExclude\".\n" +
	"\x10ResultDBSettings\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\"\xce\x01\n" +
	"\fCipdSettings\x12\x16\n" +
	"\x06server\x18\x01 \x01(\tR\x06server\x128\n" +
	"\x06source\x18\x02 \x01(\v2 .buildbucket.CipdSettings.SourceR\x06source\x1al\n" +
	"\x06Source\x12!\n" +
	"\fpackage_name\x18\x02 \x01(\tR\vpackageName\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12%\n" +
	"\x0eversion_canary\x18\x04 \x01(\tR\rversionCanary\"\xb2\x01\n" +
	"\fCustomMetric\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12!\n" +
	"\fextra_fields\x18\x03 \x03(\tR\vextraFields\x12@\n" +
	"\vmetric_base\x18\x04 \x01(\x0e2\x1d.buildbucket.CustomMetricBaseH\x00R\n" +
	"metricBaseB\a\n" +
	"\x05class*\xa3\x03\n" +
	"\x10CustomMetricBase\x12\x1c\n" +
	"\x18CUSTOM_METRIC_BASE_UNSET\x10\x00\x12\x1e\n" +
	"\x1aCUSTOM_METRIC_BASE_CREATED\x10\x01\x12\x1e\n" +
	"\x1aCUSTOM_METRIC_BASE_STARTED\x10\x02\x12 \n" +
	"\x1cCUSTOM_METRIC_BASE_COMPLETED\x10\x03\x12&\n" +
	"\"CUSTOM_METRIC_BASE_CYCLE_DURATIONS\x10\x04\x12$\n" +
	" CUSTOM_METRIC_BASE_RUN_DURATIONS\x10\x05\x12+\n" +
	"'CUSTOM_METRIC_BASE_SCHEDULING_DURATIONS\x10\x06\x12(\n" +
	"$CUSTOM_METRIC_BASE_MAX_AGE_SCHEDULED\x10\a\x12\x1c\n" +
	"\x18CUSTOM_METRIC_BASE_COUNT\x10\b\x120\n" +
	",CUSTOM_METRIC_BASE_CONSECUTIVE_FAILURE_COUNT\x10\t\x12\x1a\n" +
	"\x16CUSTOM_METRIC_BASE_AGE\x10\n" +
	"B6Z4go.chromium.org/luci/buildbucket/proto;buildbucketpbb\x06proto3"

var (
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescData []byte
)

func file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDesc), len(file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDescData
}

var file_go_chromium_org_luci_buildbucket_proto_service_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_go_chromium_org_luci_buildbucket_proto_service_config_proto_goTypes = []any{
	(CustomMetricBase)(0),                   // 0: buildbucket.CustomMetricBase
	(*SettingsCfg)(nil),                     // 1: buildbucket.SettingsCfg
	(*BackendSetting)(nil),                  // 2: buildbucket.BackendSetting
	(*SwarmingSettings)(nil),                // 3: buildbucket.SwarmingSettings
	(*LogDogSettings)(nil),                  // 4: buildbucket.LogDogSettings
	(*ExperimentSettings)(nil),              // 5: buildbucket.ExperimentSettings
	(*BuilderPredicate)(nil),                // 6: buildbucket.BuilderPredicate
	(*ResultDBSettings)(nil),                // 7: buildbucket.ResultDBSettings
	(*CipdSettings)(nil),                    // 8: buildbucket.CipdSettings
	(*CustomMetric)(nil),                    // 9: buildbucket.CustomMetric
	nil,                                     // 10: buildbucket.SettingsCfg.SwarmingBackendsEntry
	(*BackendSetting_BuildSyncSetting)(nil), // 11: buildbucket.BackendSetting.BuildSyncSetting
	(*BackendSetting_FullMode)(nil),         // 12: buildbucket.BackendSetting.FullMode
	(*BackendSetting_LiteMode)(nil),         // 13: buildbucket.BackendSetting.LiteMode
	(*SwarmingSettings_Package)(nil),        // 14: buildbucket.SwarmingSettings.Package
	(*ExperimentSettings_Experiment)(nil),   // 15: buildbucket.ExperimentSettings.Experiment
	(*CipdSettings_Source)(nil),             // 16: buildbucket.CipdSettings.Source
	(*durationpb.Duration)(nil),             // 17: google.protobuf.Duration
	(*BuilderConfig_CacheEntry)(nil),        // 18: buildbucket.BuilderConfig.CacheEntry
}
var file_go_chromium_org_luci_buildbucket_proto_service_config_proto_depIdxs = []int32{
	3,  // 0: buildbucket.SettingsCfg.swarming:type_name -> buildbucket.SwarmingSettings
	4,  // 1: buildbucket.SettingsCfg.logdog:type_name -> buildbucket.LogDogSettings
	7,  // 2: buildbucket.SettingsCfg.resultdb:type_name -> buildbucket.ResultDBSettings
	5,  // 3: buildbucket.SettingsCfg.experiment:type_name -> buildbucket.ExperimentSettings
	8,  // 4: buildbucket.SettingsCfg.cipd:type_name -> buildbucket.CipdSettings
	2,  // 5: buildbucket.SettingsCfg.backends:type_name -> buildbucket.BackendSetting
	10, // 6: buildbucket.SettingsCfg.swarming_backends:type_name -> buildbucket.SettingsCfg.SwarmingBackendsEntry
	9,  // 7: buildbucket.SettingsCfg.custom_metrics:type_name -> buildbucket.CustomMetric
	11, // 8: buildbucket.BackendSetting.build_sync_setting:type_name -> buildbucket.BackendSetting.BuildSyncSetting
	12, // 9: buildbucket.BackendSetting.full_mode:type_name -> buildbucket.BackendSetting.FullMode
	13, // 10: buildbucket.BackendSetting.lite_mode:type_name -> buildbucket.BackendSetting.LiteMode
	17, // 11: buildbucket.BackendSetting.task_creating_timeout:type_name -> google.protobuf.Duration
	18, // 12: buildbucket.SwarmingSettings.global_caches:type_name -> buildbucket.BuilderConfig.CacheEntry
	14, // 13: buildbucket.SwarmingSettings.user_packages:type_name -> buildbucket.SwarmingSettings.Package
	14, // 14: buildbucket.SwarmingSettings.bbagent_package:type_name -> buildbucket.SwarmingSettings.Package
	14, // 15: buildbucket.SwarmingSettings.kitchen_package:type_name -> buildbucket.SwarmingSettings.Package
	14, // 16: buildbucket.SwarmingSettings.alternative_agent_packages:type_name -> buildbucket.SwarmingSettings.Package
	14, // 17: buildbucket.SwarmingSettings.bbagent_utility_packages:type_name -> buildbucket.SwarmingSettings.Package
	15, // 18: buildbucket.ExperimentSettings.experiments:type_name -> buildbucket.ExperimentSettings.Experiment
	16, // 19: buildbucket.CipdSettings.source:type_name -> buildbucket.CipdSettings.Source
	0,  // 20: buildbucket.CustomMetric.metric_base:type_name -> buildbucket.CustomMetricBase
	11, // 21: buildbucket.BackendSetting.FullMode.build_sync_setting:type_name -> buildbucket.BackendSetting.BuildSyncSetting
	6,  // 22: buildbucket.SwarmingSettings.Package.builders:type_name -> buildbucket.BuilderPredicate
	6,  // 23: buildbucket.ExperimentSettings.Experiment.builders:type_name -> buildbucket.BuilderPredicate
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_buildbucket_proto_service_config_proto_init() }
func file_go_chromium_org_luci_buildbucket_proto_service_config_proto_init() {
	if File_go_chromium_org_luci_buildbucket_proto_service_config_proto != nil {
		return
	}
	file_go_chromium_org_luci_buildbucket_proto_project_config_proto_init()
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[1].OneofWrappers = []any{
		(*BackendSetting_FullMode_)(nil),
		(*BackendSetting_LiteMode_)(nil),
	}
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes[8].OneofWrappers = []any{
		(*CustomMetric_MetricBase)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDesc), len(file_go_chromium_org_luci_buildbucket_proto_service_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_buildbucket_proto_service_config_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_buildbucket_proto_service_config_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_buildbucket_proto_service_config_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_buildbucket_proto_service_config_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_buildbucket_proto_service_config_proto = out.File
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_goTypes = nil
	file_go_chromium_org_luci_buildbucket_proto_service_config_proto_depIdxs = nil
}
