// Copyright 2021 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: go.chromium.org/luci/buildbucket/proto/task.proto

package buildbucketpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A backend task.
// Next id: 9.
type Task struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    *TaskID                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// (optional) Human-clickable link to the status page for this task.
	// This should be populated as part of the Task response in RunTaskResponse.
	// Any update to this via the Task field in BuildTaskUpdate will override the
	// existing link that was provided in RunTaskResponse.
	Link string `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	// The backend's status for handling this task.
	Status Status `protobuf:"varint,3,opt,name=status,proto3,enum=buildbucket.v2.Status" json:"status,omitempty"`
	// The 'status_details' around handling this task.
	StatusDetails *StatusDetails `protobuf:"bytes,4,opt,name=status_details,json=statusDetails,proto3" json:"status_details,omitempty"`
	// Deprecated. Use summary_markdown instead.
	SummaryHtml string `protobuf:"bytes,5,opt,name=summary_html,json=summaryHtml,proto3" json:"summary_html,omitempty"`
	// Additional backend-specific details about the task.
	//
	// This could be used to indicate things like named-cache status, task
	// startup/end time, etc.
	//
	// This is limited to 10KB (binary PB + gzip(5))
	//
	// This should be populated as part of the Task response in RunTaskResponse.
	// Any update to this via the Task field in BuildTaskUpdate will override the
	// existing details that were provided in RunTaskResponse.
	Details *structpb.Struct `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
	// A monotonically increasing integer set by the backend to track
	// which task is the most up to date when calling UpdateBuildTask.
	// When the build is first created, this will be set to 0.
	// When RunTask is called and returns a task, this should not be 0 or nil.
	// Each UpdateBuildTask call will check this to ensure the latest task is
	// being stored in datastore.
	UpdateId int64 `protobuf:"varint,7,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	// Human-readable commentary around the handling of this task.
	SummaryMarkdown string `protobuf:"bytes,8,opt,name=summary_markdown,json=summaryMarkdown,proto3" json:"summary_markdown,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() *TaskID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Task) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Task) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNSPECIFIED
}

func (x *Task) GetStatusDetails() *StatusDetails {
	if x != nil {
		return x.StatusDetails
	}
	return nil
}

func (x *Task) GetSummaryHtml() string {
	if x != nil {
		return x.SummaryHtml
	}
	return ""
}

func (x *Task) GetDetails() *structpb.Struct {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Task) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

func (x *Task) GetSummaryMarkdown() string {
	if x != nil {
		return x.SummaryMarkdown
	}
	return ""
}

// A unique identifier for tasks.
type TaskID struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Target backend. e.g. "swarming://chromium-swarm".
	Target string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// An ID unique to the target used to identify this task. e.g. Swarming task
	// ID.
	Id            string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskID) Reset() {
	*x = TaskID{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskID) ProtoMessage() {}

func (x *TaskID) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskID.ProtoReflect.Descriptor instead.
func (*TaskID) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescGZIP(), []int{1}
}

func (x *TaskID) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *TaskID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A message sent by task backends as part of the payload to a
// pubsub topic corresponding with that backend. Buildbucket handles these
// pubsub messages with the UpdateBuildTask cloud task.
// Backends must use this proto when sending pubsub updates to buildbucket.
//
// NOTE: If the task has not been registered with buildbucket yet (by means of
// RunTask returning or StartBuild doing an initial associaton of the task to
// the build), then the message will be dropped and lost forever.
// Use with caution.
type BuildTaskUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A build ID.
	BuildId string `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	// Task
	Task          *Task `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildTaskUpdate) Reset() {
	*x = BuildTaskUpdate{}
	mi := &file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildTaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTaskUpdate) ProtoMessage() {}

func (x *BuildTaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTaskUpdate.ProtoReflect.Descriptor instead.
func (*BuildTaskUpdate) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescGZIP(), []int{2}
}

func (x *BuildTaskUpdate) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BuildTaskUpdate) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

var File_go_chromium_org_luci_buildbucket_proto_task_proto protoreflect.FileDescriptor

const file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDesc = "" +
	"\n" +
	"1go.chromium.org/luci/buildbucket/proto/task.proto\x12\x0ebuildbucket.v2\x1a\x1cgoogle/protobuf/struct.proto\x1a3go.chromium.org/luci/buildbucket/proto/common.proto\x1a9go.chromium.org/luci/buildbucket/proto/field_option.proto\"\xd6\x02\n" +
	"\x04Task\x12&\n" +
	"\x02id\x18\x01 \x01(\v2\x16.buildbucket.v2.TaskIDR\x02id\x12\x12\n" +
	"\x04link\x18\x02 \x01(\tR\x04link\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.buildbucket.v2.StatusR\x06status\x12D\n" +
	"\x0estatus_details\x18\x04 \x01(\v2\x1d.buildbucket.v2.StatusDetailsR\rstatusDetails\x12!\n" +
	"\fsummary_html\x18\x05 \x01(\tR\vsummaryHtml\x121\n" +
	"\adetails\x18\x06 \x01(\v2\x17.google.protobuf.StructR\adetails\x12\x1b\n" +
	"\tupdate_id\x18\a \x01(\x03R\bupdateId\x12)\n" +
	"\x10summary_markdown\x18\b \x01(\tR\x0fsummaryMarkdown\"8\n" +
	"\x06TaskID\x12\x1e\n" +
	"\x06target\x18\x01 \x01(\tB\x06\x8a\xc3\x1a\x02\b\x02R\x06target\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"V\n" +
	"\x0fBuildTaskUpdate\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x12(\n" +
	"\x04task\x18\x02 \x01(\v2\x14.buildbucket.v2.TaskR\x04taskB6Z4go.chromium.org/luci/buildbucket/proto;buildbucketpbb\x06proto3"

var (
	file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescData []byte
)

func file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDesc), len(file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDescData
}

var file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_go_chromium_org_luci_buildbucket_proto_task_proto_goTypes = []any{
	(*Task)(nil),            // 0: buildbucket.v2.Task
	(*TaskID)(nil),          // 1: buildbucket.v2.TaskID
	(*BuildTaskUpdate)(nil), // 2: buildbucket.v2.BuildTaskUpdate
	(Status)(0),             // 3: buildbucket.v2.Status
	(*StatusDetails)(nil),   // 4: buildbucket.v2.StatusDetails
	(*structpb.Struct)(nil), // 5: google.protobuf.Struct
}
var file_go_chromium_org_luci_buildbucket_proto_task_proto_depIdxs = []int32{
	1, // 0: buildbucket.v2.Task.id:type_name -> buildbucket.v2.TaskID
	3, // 1: buildbucket.v2.Task.status:type_name -> buildbucket.v2.Status
	4, // 2: buildbucket.v2.Task.status_details:type_name -> buildbucket.v2.StatusDetails
	5, // 3: buildbucket.v2.Task.details:type_name -> google.protobuf.Struct
	0, // 4: buildbucket.v2.BuildTaskUpdate.task:type_name -> buildbucket.v2.Task
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_buildbucket_proto_task_proto_init() }
func file_go_chromium_org_luci_buildbucket_proto_task_proto_init() {
	if File_go_chromium_org_luci_buildbucket_proto_task_proto != nil {
		return
	}
	file_go_chromium_org_luci_buildbucket_proto_common_proto_init()
	file_go_chromium_org_luci_buildbucket_proto_field_option_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDesc), len(file_go_chromium_org_luci_buildbucket_proto_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_buildbucket_proto_task_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_buildbucket_proto_task_proto_depIdxs,
		MessageInfos:      file_go_chromium_org_luci_buildbucket_proto_task_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_buildbucket_proto_task_proto = out.File
	file_go_chromium_org_luci_buildbucket_proto_task_proto_goTypes = nil
	file_go_chromium_org_luci_buildbucket_proto_task_proto_depIdxs = nil
}
