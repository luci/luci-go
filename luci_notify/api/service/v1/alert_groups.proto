// Copyright 2025 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.notify.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "go.chromium.org/luci/luci_notify/api/service/v1;lucinotifypb";

// Service for managing groups of alerts.
service AlertGroups {
  // Gets an alert group.
  rpc GetAlertGroup(GetAlertGroupRequest) returns (AlertGroup) {};

  // Lists alert groups.
  rpc ListAlertGroups(ListAlertGroupsRequest) returns (ListAlertGroupsResponse) {};

  // Creates an alert group.
  rpc CreateAlertGroup(CreateAlertGroupRequest) returns (AlertGroup) {};

  // Updates an alert group.
  rpc UpdateAlertGroup(UpdateAlertGroupRequest) returns (AlertGroup) {};

  // Deletes an alert group.
  rpc DeleteAlertGroup(DeleteAlertGroupRequest) returns (google.protobuf.Empty) {};
}

// A group of alerts that are managed together.
message AlertGroup {
  // The resource name of the alert group.
  // Format: rotations/{rotation}/alertGroups/{alert_group_id}
  string name = 1;

  // The human-readable name of the alert group.
  // Must not be empty.
  // Must not exceed 1024 bytes.
  string display_name = 2;

  // A message describing the status of the alert group.
  // Must not exceed 1MB.
  string status_message = 3;

  // The keys of the alerts in this group.
  // These correspond to the {key} part of an alert's name: alerts/{key}.
  repeated string alert_keys = 4;

  // The buganizer bug ID of bugs associated with this alert group.
  repeated int64 bugs = 5;

  // The time the alert group was last updated.
  google.protobuf.Timestamp update_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The identity of the user who last updated the alert group.
  string updated_by = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A checksum of the alert group's state.
  // Used for optimistic concurrency control.
  string etag = 8;
}

message GetAlertGroupRequest {
  // The name of the alert group to retrieve.
  // Format: rotations/{rotation}/alertGroups/{alert_group_id}
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListAlertGroupsRequest {
  // The parent, which owns this collection of alert groups.
  // Format: rotations/{rotation}
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // The maximum number of alert groups to return. The service may return fewer
  // than this value.
  // If unspecified, at most 100 alert groups will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 2;

  // A page token, received from a previous `ListAlertGroups` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListAlertGroups` must
  // match the call that provided the page token.
  string page_token = 3;
}

message ListAlertGroupsResponse {
  // The alert groups.
  repeated AlertGroup alert_groups = 1;

  // A token to retrieve the next page of results, or empty if there are no
  // more results.
  string next_page_token = 2;
}

message CreateAlertGroupRequest {
  // The parent resource where this alert group will be created.
  // Format: rotations/{rotation}
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // The ID to use for the alert group, which will become the final component of
  // the alert group's resource name.
  string alert_group_id = 2 [(google.api.field_behavior) = REQUIRED];

  // The alert group to create.
  // The `name` field must be empty.
  AlertGroup alert_group = 3 [(google.api.field_behavior) = REQUIRED];

}

message UpdateAlertGroupRequest {
  // The alert group to update.
  // The alert group's `name` field is used to identify the alert group to be
  // updated.
  AlertGroup alert_group = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to be updated.
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteAlertGroupRequest {
  // The resource name of the alert group to delete.
  // Format: rotations/{rotation}/alertGroups/{alert_group_id}
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}
