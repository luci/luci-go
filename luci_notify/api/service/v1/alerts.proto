// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.notify.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";

option go_package = "go.chromium.org/luci/luci_notify/api/service/v1;lucinotifypb";

// Service Alerts exposes alerts used in on-call monitoring tools.
// For now it only tracks mutable fields, with alerts being generated
// by Sheriff-o-Matic, but eventually the alerts available through this
// service will incorporate all of the needed information.
//
// Use of LUCI is subject to the Google [Terms of Service](https://policies.google.com/terms)
// and [Privacy Policy](https://policies.google.com/privacy).
service Alerts {
  // BatchGetAlerts allows getting a number of alerts by resource name.
  // If no alert exists by the given name an empty alert will be returned.
  rpc BatchGetAlerts(BatchGetAlertsRequest) returns (BatchGetAlertsResponse) {};

  // BatchUpdateAlerts allows updating the mutable data on a batch of alerts.
  rpc BatchUpdateAlerts(BatchUpdateAlertsRequest) returns (BatchUpdateAlertsResponse) {};
}

message BatchGetAlertsRequest {
  // The resource names of the alerts to get.
  //
  // Currently by convention the keys match the keys in sheriff-o-matic, but
  // this is not a requirement.
  //
  // Format: alerts/{key}
  repeated string names = 1;
}

// The Status of a tree for an interval of time.
message Alert {
  // The resource name of this alert.
  // Format: alerts/{key}
  string name = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];
  // The buganizer bug ID of the bug associated with this alert.
  // 0 means the alert is not associated with any bug.
  int64 bug = 3;
  // The build id of the builder corresponding to the alert that this alert should be ignored until after completion.
  // In other words, if the latest_failing_build_id (currently in SOM alerts) == silence_until, this alert should be considered 'silenced'.
  int64 silence_until = 4;
  // The Gerrit CL number associated with this alert.
  // 0 means the alert is not associated with any CL.
  int64 gerrit_cl = 7;

  // The time the alert was last modified.
  //
  // This is automatically set by the server and cannot be modified explicitly
  // through RPC.
  google.protobuf.Timestamp modify_time = 5
      [(google.api.field_behavior) = OUTPUT_ONLY];

  // This checksum is computed by the server based on the value of other
  // fields, and may be sent on update and delete requests to ensure the
  // client has an up-to-date value before proceeding.
  // Note that these etags are weak - they are only computed based on mutable
  // fields.  Other fields in the alert may be auto-updated but they will not
  // affect the etag value.
  // The etag field is optional on update requests, if not provided
  // the update will succeed.  If provided, the update will only succeed if
  // the etag is an exact match.
  string etag = 6;
}

message BatchGetAlertsResponse {
  // Alerts requested.
  // The order matches the order of names in the request.
  repeated Alert alerts = 1;
}

message UpdateAlertRequest {
  // The alert to update.
  Alert alert = 1;
}

message BatchUpdateAlertsRequest {
  // The request messages specifying the alerts to update.
  // A maximum of 1000 alerts can be modified in a batch.
  repeated UpdateAlertRequest requests = 1;
}

message BatchUpdateAlertsResponse {
  // Alerts updated.
  // The order matches the order of names in the request.
  repeated Alert alerts = 1;
}
