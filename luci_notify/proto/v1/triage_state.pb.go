// Copyright 2024 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: go.chromium.org/luci/luci_notify/proto/v1/triage_state.proto

package notifypb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The alert snooze status.
type TriageState_Snooze_SnoozeMode int32

const (
	TriageState_Snooze_SNOOZE_MODE_UNSPECIFIED TriageState_Snooze_SnoozeMode = 0
	// Snoozes until the next build result. When setting this option,
	// also populate the snoozed_build_id option to the most recent
	// failing build (not necessarily the most recent build, as that may
	// be running).
	TriageState_Snooze_ONCE TriageState_Snooze_SnoozeMode = 1
	// Snoozes until the fix hypothesis in the fix_verification_state is
	// either verified or falsified.
	// When this mode is set, the alert will remain snoozed until one of:
	// - The fix hypothesis is cleared.
	// - The fix hypothesis is falsified.
	TriageState_Snooze_FIXED_PENDING_VERIFICATION TriageState_Snooze_SnoozeMode = 2
)

// Enum value maps for TriageState_Snooze_SnoozeMode.
var (
	TriageState_Snooze_SnoozeMode_name = map[int32]string{
		0: "SNOOZE_MODE_UNSPECIFIED",
		1: "ONCE",
		2: "FIXED_PENDING_VERIFICATION",
	}
	TriageState_Snooze_SnoozeMode_value = map[string]int32{
		"SNOOZE_MODE_UNSPECIFIED":    0,
		"ONCE":                       1,
		"FIXED_PENDING_VERIFICATION": 2,
	}
)

func (x TriageState_Snooze_SnoozeMode) Enum() *TriageState_Snooze_SnoozeMode {
	p := new(TriageState_Snooze_SnoozeMode)
	*p = x
	return p
}

func (x TriageState_Snooze_SnoozeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriageState_Snooze_SnoozeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_enumTypes[0].Descriptor()
}

func (TriageState_Snooze_SnoozeMode) Type() protoreflect.EnumType {
	return &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_enumTypes[0]
}

func (x TriageState_Snooze_SnoozeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriageState_Snooze_SnoozeMode.Descriptor instead.
func (TriageState_Snooze_SnoozeMode) EnumDescriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{0, 1, 0}
}

// TriageState is the user-editable triage state.
type TriageState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the gardened build triage state.
	// For steps:
	// Format: project/{PROJECT}/buckets/{BUCKET}/builder/{BUILDER}/gardening/steps/{URL_ENCODED_STEP_ID}/triage.
	// For tests:
	// Format: project/{PROJECT}/buckets/{BUCKET}/builder/{BUILDER}/gardening/steps/{URL_ENCODED_STEP_ID}/tests/{URL_ENCODED_TEST_ID}/variants/{VARIANT_HASH}/triage.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The associated bug or free-form group.
	GroupAssociation *TriageState_GroupAssociation `protobuf:"bytes,2,opt,name=group_association,json=groupAssociation,proto3" json:"group_association,omitempty"`
	// The snooze. Only set if snooze has been requested.
	//
	// This is a client-controlled field and will not be reset once the snooze
	// expires.
	Snooze *TriageState_Snooze `protobuf:"bytes,3,opt,name=snooze,proto3" json:"snooze,omitempty"`
	// Controls verification for hypothesised fixes.
	// Can be used standalone or in conjunction with the
	// FIXED_PENDING_VERIFICATION snooze mode.
	//
	// Verification:
	//   - Check fix_verification_state.regression_id to verify the fix
	//     verification relates to the current regression and is not stale.
	//   - Compare fix_verification_state.timestamp against the
	//     last_actual_result_build_start_time on the step or test. If the
	//     fix timestamp is later than this timestamp or there is no such
	//     timestamp, the verification is pending.
	//     If the fix timestamp is before or equal to
	//     last_actual_result_build_start_time, and the step or test passed
	//     (i.e. was_last_actual_result_pass) the fix is validated.
	//     Else the fix is invalidated.
	//
	// In the event the step or test is not seen again (e.g. because the step
	// or test is only in failing builds), verification will never occur and snooze
	// will continue indefinitely. This is by design and represents a
	// trade-off between erronously verifying fixes (e.g. to test failures when a
	// later compile failure occors) and leaving actual fixes in snoozed (
	// not verified) state.
	FixVerificationState *TriageState_FixVerificationState `protobuf:"bytes,4,opt,name=fix_verification_state,json=fixVerificationState,proto3" json:"fix_verification_state,omitempty"`
	// A human-editable note about the regression affecting this step or test.
	Note *TriageState_Note `protobuf:"bytes,5,opt,name=note,proto3" json:"note,omitempty"`
	// The timestamp the triage state was last updated.
	LastUpdated *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update requests to ensure the client has
	// an up-to-date value before proceeding.
	// See https://google.aip.dev/154.
	Etag          string `protobuf:"bytes,7,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriageState) Reset() {
	*x = TriageState{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriageState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriageState) ProtoMessage() {}

func (x *TriageState) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriageState.ProtoReflect.Descriptor instead.
func (*TriageState) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{0}
}

func (x *TriageState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TriageState) GetGroupAssociation() *TriageState_GroupAssociation {
	if x != nil {
		return x.GroupAssociation
	}
	return nil
}

func (x *TriageState) GetSnooze() *TriageState_Snooze {
	if x != nil {
		return x.Snooze
	}
	return nil
}

func (x *TriageState) GetFixVerificationState() *TriageState_FixVerificationState {
	if x != nil {
		return x.FixVerificationState
	}
	return nil
}

func (x *TriageState) GetNote() *TriageState_Note {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *TriageState) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *TriageState) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

// Represents a reference to a bug in a bug tracking system.
type Bug struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to System:
	//
	//	*Bug_IssueTracker
	System        isBug_System `protobuf_oneof:"system"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bug) Reset() {
	*x = Bug{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bug) ProtoMessage() {}

func (x *Bug) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bug.ProtoReflect.Descriptor instead.
func (*Bug) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{1}
}

func (x *Bug) GetSystem() isBug_System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Bug) GetIssueTracker() *IssueTrackerBug {
	if x != nil {
		if x, ok := x.System.(*Bug_IssueTracker); ok {
			return x.IssueTracker
		}
	}
	return nil
}

type isBug_System interface {
	isBug_System()
}

type Bug_IssueTracker struct {
	// The Google Issue Tracker bug.
	IssueTracker *IssueTrackerBug `protobuf:"bytes,1,opt,name=issue_tracker,json=issueTracker,proto3,oneof"`
}

func (*Bug_IssueTracker) isBug_System() {}

// A bug in Google Issue Tracker, sometimes known as Buganizer,
// available at https://issuetracker.google.com.
type IssueTrackerBug struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID in the bug tracking system.
	Id            int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssueTrackerBug) Reset() {
	*x = IssueTrackerBug{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssueTrackerBug) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssueTrackerBug) ProtoMessage() {}

func (x *IssueTrackerBug) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssueTrackerBug.ProtoReflect.Descriptor instead.
func (*IssueTrackerBug) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{2}
}

func (x *IssueTrackerBug) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// A gerrit changelist.
type Changelist struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Gerrit hostname, e.g. "chromium-review.googlesource.com".
	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Change number, e.g. 12345.
	Change int64 `protobuf:"varint,2,opt,name=change,proto3" json:"change,omitempty"`
	// Patch set number, e.g. 1.
	Patchset      int32 `protobuf:"varint,3,opt,name=patchset,proto3" json:"patchset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Changelist) Reset() {
	*x = Changelist{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Changelist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changelist) ProtoMessage() {}

func (x *Changelist) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changelist.ProtoReflect.Descriptor instead.
func (*Changelist) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{3}
}

func (x *Changelist) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Changelist) GetChange() int64 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *Changelist) GetPatchset() int32 {
	if x != nil {
		return x.Patchset
	}
	return 0
}

type TriageState_GroupAssociation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The regression ID this association was current at. Should be set
	// to the current regression ID whenever setting bugs or freefrom_group_id.
	//
	// If this differs from the current regression sequence number, it indicates
	// the bug/group may be stale and in the (keep|ignore) buttons should be
	// displayed next to the bug/group in the UI.
	//
	// This is a client owned field (see https://google.aip.dev/129).
	RegressionId string `protobuf:"bytes,1,opt,name=regression_id,json=regressionId,proto3" json:"regression_id,omitempty"`
	// The associated bug(s).
	Bugs []*Bug `protobuf:"bytes,2,rep,name=bugs,proto3" json:"bugs,omitempty"`
	// The associated free-form group. This is a human-readable string.
	// Limited to 255 bytes of printable ASCII.
	// Either this or bugs should be set, not both.
	FreeformGroupId string `protobuf:"bytes,3,opt,name=freeform_group_id,json=freeformGroupId,proto3" json:"freeform_group_id,omitempty"`
	// Indicates the time the regression the bug associated with
	// (regression_id) was resolved. Unset if regression_id is unset
	// or the regression is not yet resolved.
	// Useful for hiding bugs completely once they become sufficiently stale
	// and/or showing how stale they are in the UI.
	RegressionResolvedTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=regression_resolved_time,json=regressionResolvedTime,proto3" json:"regression_resolved_time,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TriageState_GroupAssociation) Reset() {
	*x = TriageState_GroupAssociation{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriageState_GroupAssociation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriageState_GroupAssociation) ProtoMessage() {}

func (x *TriageState_GroupAssociation) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriageState_GroupAssociation.ProtoReflect.Descriptor instead.
func (*TriageState_GroupAssociation) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TriageState_GroupAssociation) GetRegressionId() string {
	if x != nil {
		return x.RegressionId
	}
	return ""
}

func (x *TriageState_GroupAssociation) GetBugs() []*Bug {
	if x != nil {
		return x.Bugs
	}
	return nil
}

func (x *TriageState_GroupAssociation) GetFreeformGroupId() string {
	if x != nil {
		return x.FreeformGroupId
	}
	return ""
}

func (x *TriageState_GroupAssociation) GetRegressionResolvedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RegressionResolvedTime
	}
	return nil
}

type TriageState_Snooze struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The requested alert snooze mode.
	//
	// Clients must monitor whether the snooze has expired by using the following logic:
	//   - If snooze mode is ONCE, compare snooze_build_id against
	//     the latest_completed_build_id on the step.
	//   - If snooze mode is FIXED_PENDING_VERIFICATION, only treat
	//     the snooze as active if fix_verification_state_regression_id matches
	//     the current regression_id (as the snooze may have set at an earlier
	//     regression that was fixed). The snooze shall remain active
	//     only until the fix can be validated using the steps documented on
	//     fix_verification_state.
	//     If the snooze was active but was invalidated using
	//     fix_verification_state, then the UI may consider raising an alert
	//     (i.e. fix failed to verify).
	Mode TriageState_Snooze_SnoozeMode `protobuf:"varint,1,opt,name=mode,proto3,enum=luci.notify.v1.TriageState_Snooze_SnoozeMode" json:"mode,omitempty"`
	// The identifier of the build being snoozed. Use in conjunction with the ONCE
	// snooze mode to record the build that was snoozed.
	SnoozedBuildbucketBuildId int64 `protobuf:"varint,2,opt,name=snoozed_buildbucket_build_id,json=snoozedBuildbucketBuildId,proto3" json:"snoozed_buildbucket_build_id,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TriageState_Snooze) Reset() {
	*x = TriageState_Snooze{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriageState_Snooze) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriageState_Snooze) ProtoMessage() {}

func (x *TriageState_Snooze) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriageState_Snooze.ProtoReflect.Descriptor instead.
func (*TriageState_Snooze) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TriageState_Snooze) GetMode() TriageState_Snooze_SnoozeMode {
	if x != nil {
		return x.Mode
	}
	return TriageState_Snooze_SNOOZE_MODE_UNSPECIFIED
}

func (x *TriageState_Snooze) GetSnoozedBuildbucketBuildId() int64 {
	if x != nil {
		return x.SnoozedBuildbucketBuildId
	}
	return 0
}

// FixVerificationState captures the state of verifying the fix for this alert.
// In future, changelist-based verification may be offered in addition to
// timestamp-based verification.
type TriageState_FixVerificationState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The regression ID the fix verification pertains to. Should be set
	// whenever trying to verify a new fix.
	//
	// If this differs from the current regression ID, the fix verification
	// pertains to an earlier regression and its apparent validation or
	// invalidation (i.e. by the latest build failing) should be ignored.
	RegressionId string `protobuf:"bytes,1,opt,name=regression_id,json=regressionId,proto3" json:"regression_id,omitempty"`
	// The timestamp at which the user expects the fix to have already landed.
	// A failing build which started after this time will lead to
	// time_falsified being set.
	// Setting this field to zero means no expectation.
	// Changing this field resets the corresponding _falsified field.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// At present, this information is an optional context to the fix timestamp.
	// In future, a commit-position based verification may be implemented for
	// changelists, or the server may lookup the changelist landing time and
	// provide this to support verification.
	Changelist    *Changelist `protobuf:"bytes,3,opt,name=changelist,proto3" json:"changelist,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriageState_FixVerificationState) Reset() {
	*x = TriageState_FixVerificationState{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriageState_FixVerificationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriageState_FixVerificationState) ProtoMessage() {}

func (x *TriageState_FixVerificationState) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriageState_FixVerificationState.ProtoReflect.Descriptor instead.
func (*TriageState_FixVerificationState) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{0, 2}
}

func (x *TriageState_FixVerificationState) GetRegressionId() string {
	if x != nil {
		return x.RegressionId
	}
	return ""
}

func (x *TriageState_FixVerificationState) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TriageState_FixVerificationState) GetChangelist() *Changelist {
	if x != nil {
		return x.Changelist
	}
	return nil
}

type TriageState_Note struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The human-readable note. Limited to 10,000 bytes of printable ASCII.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The regression ID the note pertains to. Should be set
	// whenever setting a new note.
	//
	// If this differs from the current regression ID, the note
	// pertains to an earlier regression and may be treated as stale.
	RegressionId string `protobuf:"bytes,2,opt,name=regression_id,json=regressionId,proto3" json:"regression_id,omitempty"`
	// The timestamp the note was last updated.
	LastUpdated   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriageState_Note) Reset() {
	*x = TriageState_Note{}
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriageState_Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriageState_Note) ProtoMessage() {}

func (x *TriageState_Note) ProtoReflect() protoreflect.Message {
	mi := &file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriageState_Note.ProtoReflect.Descriptor instead.
func (*TriageState_Note) Descriptor() ([]byte, []int) {
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP(), []int{0, 3}
}

func (x *TriageState_Note) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TriageState_Note) GetRegressionId() string {
	if x != nil {
		return x.RegressionId
	}
	return ""
}

func (x *TriageState_Note) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

var File_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto protoreflect.FileDescriptor

var file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDesc = string([]byte{
	0x0a, 0x3c, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x69, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xbc, 0x09, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3a, 0x0a, 0x06, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x6e, 0x6f,
	0x6f, 0x7a, 0x65, 0x52, 0x06, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x12, 0x66, 0x0a, 0x16, 0x66,
	0x69, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x46, 0x69, 0x78, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x14, 0x66,
	0x69, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x4e,
	0x6f, 0x74, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61,
	0x67, 0x1a, 0xe7, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x62,
	0x75, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x75, 0x63, 0x69,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x67, 0x52, 0x04,
	0x62, 0x75, 0x67, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d,
	0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x59, 0x0a, 0x18, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03,
	0xe0, 0x41, 0x03, 0x52, 0x16, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xe1, 0x01, 0x0a, 0x06,
	0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x6c, 0x75, 0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x69, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x2e, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x73, 0x6e, 0x6f,
	0x6f, 0x7a, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x19, 0x73, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x0a, 0x53, 0x6e,
	0x6f, 0x6f, 0x7a, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x4e, 0x4f, 0x4f,
	0x5a, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x4e, 0x43, 0x45, 0x10, 0x01, 0x12,
	0x1e, 0x0a, 0x1a, 0x46, 0x49, 0x58, 0x45, 0x44, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x1a,
	0xb1, 0x01, 0x0a, 0x14, 0x46, 0x69, 0x78, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x75,
	0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c,
	0x69, 0x73, 0x74, 0x1a, 0x89, 0x01, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0,
	0x41, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x57, 0x0a, 0x03, 0x42, 0x75, 0x67, 0x12, 0x46, 0x0a, 0x0d, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6c, 0x75, 0x63, 0x69, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x67, 0x48, 0x00,
	0x52, 0x0c, 0x69, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x21, 0x0a, 0x0f, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x54, 0x0a, 0x0a, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x74, 0x63, 0x68, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x74, 0x63, 0x68, 0x73, 0x65,
	0x74, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x6f, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x2f, 0x6c, 0x75, 0x63, 0x69, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescOnce sync.Once
	file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescData []byte
)

func file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescGZIP() []byte {
	file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescOnce.Do(func() {
		file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDesc), len(file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDesc)))
	})
	return file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDescData
}

var file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_goTypes = []any{
	(TriageState_Snooze_SnoozeMode)(0),       // 0: luci.notify.v1.TriageState.Snooze.SnoozeMode
	(*TriageState)(nil),                      // 1: luci.notify.v1.TriageState
	(*Bug)(nil),                              // 2: luci.notify.v1.Bug
	(*IssueTrackerBug)(nil),                  // 3: luci.notify.v1.IssueTrackerBug
	(*Changelist)(nil),                       // 4: luci.notify.v1.Changelist
	(*TriageState_GroupAssociation)(nil),     // 5: luci.notify.v1.TriageState.GroupAssociation
	(*TriageState_Snooze)(nil),               // 6: luci.notify.v1.TriageState.Snooze
	(*TriageState_FixVerificationState)(nil), // 7: luci.notify.v1.TriageState.FixVerificationState
	(*TriageState_Note)(nil),                 // 8: luci.notify.v1.TriageState.Note
	(*timestamppb.Timestamp)(nil),            // 9: google.protobuf.Timestamp
}
var file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_depIdxs = []int32{
	5,  // 0: luci.notify.v1.TriageState.group_association:type_name -> luci.notify.v1.TriageState.GroupAssociation
	6,  // 1: luci.notify.v1.TriageState.snooze:type_name -> luci.notify.v1.TriageState.Snooze
	7,  // 2: luci.notify.v1.TriageState.fix_verification_state:type_name -> luci.notify.v1.TriageState.FixVerificationState
	8,  // 3: luci.notify.v1.TriageState.note:type_name -> luci.notify.v1.TriageState.Note
	9,  // 4: luci.notify.v1.TriageState.last_updated:type_name -> google.protobuf.Timestamp
	3,  // 5: luci.notify.v1.Bug.issue_tracker:type_name -> luci.notify.v1.IssueTrackerBug
	2,  // 6: luci.notify.v1.TriageState.GroupAssociation.bugs:type_name -> luci.notify.v1.Bug
	9,  // 7: luci.notify.v1.TriageState.GroupAssociation.regression_resolved_time:type_name -> google.protobuf.Timestamp
	0,  // 8: luci.notify.v1.TriageState.Snooze.mode:type_name -> luci.notify.v1.TriageState.Snooze.SnoozeMode
	9,  // 9: luci.notify.v1.TriageState.FixVerificationState.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 10: luci.notify.v1.TriageState.FixVerificationState.changelist:type_name -> luci.notify.v1.Changelist
	9,  // 11: luci.notify.v1.TriageState.Note.last_updated:type_name -> google.protobuf.Timestamp
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_init() }
func file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_init() {
	if File_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto != nil {
		return
	}
	file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes[1].OneofWrappers = []any{
		(*Bug_IssueTracker)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDesc), len(file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_goTypes,
		DependencyIndexes: file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_depIdxs,
		EnumInfos:         file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_enumTypes,
		MessageInfos:      file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_msgTypes,
	}.Build()
	File_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto = out.File
	file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_goTypes = nil
	file_go_chromium_org_luci_luci_notify_proto_v1_triage_state_proto_depIdxs = nil
}
